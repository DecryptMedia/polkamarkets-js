{
  "contractName": "BalanceHolder_ERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogWithdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@reality.eth/contracts/development/contracts/BalanceHolder_ERC20.sol\":\"BalanceHolder_ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@reality.eth/contracts/development/contracts/BalanceHolder_ERC20.sol\":{\"keccak256\":\"0xef4393b9b80690d89b93277704898caa5b93e63daf2f74e7fb04f3a71ffce70f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://189745668f9781cb5ea9553f127cbd9d0072ab30e03cc0af9ac0c64b5798cf3b\",\"dweb:/ipfs/Qmbo8tdYo2k3z6Er1d1A4PTdF4KSVMzfKiyU5ZF4fhaoCy\"]},\"@reality.eth/contracts/development/contracts/IBalanceHolder_ERC20.sol\":{\"keccak256\":\"0x2a39ddb2818a3e42840e98b596c50a8f85b073601c4c597212100fca64a06797\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9928f86f3dfd9b2d168ac3ff8cf3b2406d64619e97e39afebdd3da14c52f3220\",\"dweb:/ipfs/QmfWpMS6YKnvtnE3Mvb8sKJvgSr6AWco4HVRH5G32gb5vm\"]},\"@reality.eth/contracts/development/contracts/IERC20.sol\":{\"keccak256\":\"0x20cc490b50dc2899450f9adc579219d2d5f7975a9f34b7f919f5d0db46643d0f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b26ded9e753ca039a303d0711f76191eaf928efe8f9533ffdcdd5e2549d1ab67\",\"dweb:/ipfs/QmSxF5ytAxGUvETrAE1JVHHarX4eqkdULPkH4yEU3qDJmH\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610204806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633ccfd60b1461004657806370a0823114610050578063fc0c546a14610083575b600080fd5b61004e6100ae565b005b61007061005e36600461017c565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b600054610096906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b336000818152600160205260408082208054908390559154905163a9059cbb60e01b815260048101939093526024830182905290916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b91906101ac565b61014457600080fd5b60405181815233907f4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab7089060200160405180910390a250565b60006020828403121561018e57600080fd5b81356001600160a01b03811681146101a557600080fd5b9392505050565b6000602082840312156101be57600080fd5b815180151581146101a557600080fdfea2646970667358221220097b9ab34bb55be17f8d33a5e07d8ce900cc0412c592abfae2ff889f192081ed64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633ccfd60b1461004657806370a0823114610050578063fc0c546a14610083575b600080fd5b61004e6100ae565b005b61007061005e36600461017c565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b600054610096906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b336000818152600160205260408082208054908390559154905163a9059cbb60e01b815260048101939093526024830182905290916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b91906101ac565b61014457600080fd5b60405181815233907f4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab7089060200160405180910390a250565b60006020828403121561018e57600080fd5b81356001600160a01b03811681146101a557600080fd5b9392505050565b6000602082840312156101be57600080fd5b815180151581146101a557600080fdfea2646970667358221220097b9ab34bb55be17f8d33a5e07d8ce900cc0412c592abfae2ff889f192081ed64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1268:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:35",
                "type": ""
              }
            ],
            "src": "14:286:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "469:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:35",
                "type": ""
              }
            ],
            "src": "305:177:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "613:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "625:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "636:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "621:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "621:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "613:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "655:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "686:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "691:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "682:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "682:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "695:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "678:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "678:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "666:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "666:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "648:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "648:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$5226__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "572:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "583:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "594:4:35",
                "type": ""
              }
            ],
            "src": "487:218:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "839:145:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "849:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "861:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "872:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "857:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "849:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "891:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "906:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "922:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "927:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "918:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "918:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "931:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "914:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "914:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "902:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "902:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "884:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "884:51:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "955:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "966:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "951:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:18:35"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "971:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "944:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "944:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "944:34:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "800:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "811:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "819:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "830:4:35",
                "type": ""
              }
            ],
            "src": "710:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:199:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1113:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1122:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1125:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1115:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1115:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1115:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1088:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1097:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1084:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1084:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1109:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1080:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1077:52:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1138:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1157:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1151:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:16:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1142:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1220:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1229:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1232:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1222:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1222:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1222:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1189:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1210:5:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1203:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1203:13:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1196:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1196:21:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1186:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1186:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1179:40:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1176:60:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1245:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1255:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1245:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1033:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1044:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1056:6:35",
                "type": ""
              }
            ],
            "src": "989:277:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$5226__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "129:436:24:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "129:436:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;350:212;;;:::i;:::-;;215:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:35;;;439:2;424:18;215:44:24;;;;;;;;189:19;;;;;-1:-1:-1;;;;;189:19:24;;;;;;-1:-1:-1;;;;;666:32:35;;;648:51;;636:2;621:18;189:19:24;487:218:35;350:212:24;416:10;392:11;406:21;;;:9;:21;;;;;;;;437:25;;;;480:5;;:31;;-1:-1:-1;;;480:31:24;;;;;884:51:35;;;;951:18;;;944:34;;;406:21:24;;-1:-1:-1;;;;;480:5:24;;;;:14;;857:18:35;;480:31:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;472:40;;;;;;527:28;;451:25:35;;;539:10:24;;527:28;;439:2:35;424:18;527:28:24;;;;;;;382:180;350:212::o;14:286:35:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:35;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:35:o;989:277::-;1056:6;1109:2;1097:9;1088:7;1084:23;1080:32;1077:52;;;1125:1;1122;1115:12;1077:52;1157:9;1151:16;1210:5;1203:13;1196:21;1189:5;1186:32;1176:60;;1232:1;1229;1222:12",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity ^0.8.10;\n\nimport './IERC20.sol';\nimport './IBalanceHolder_ERC20.sol';\n\ncontract BalanceHolder_ERC20 is IBalanceHolder_ERC20 {\n\n    IERC20 public token;\n\n    mapping(address => uint256) public balanceOf;\n\n    event LogWithdraw(\n        address indexed user,\n        uint256 amount\n    );\n\n    function withdraw() \n    public {\n        uint256 bal = balanceOf[msg.sender];\n        balanceOf[msg.sender] = 0;\n        require(token.transfer(msg.sender, bal));\n        emit LogWithdraw(msg.sender, bal);\n    }\n\n}\n",
  "sourcePath": "@reality.eth/contracts/development/contracts/BalanceHolder_ERC20.sol",
  "ast": {
    "absolutePath": "@reality.eth/contracts/development/contracts/BalanceHolder_ERC20.sol",
    "exportedSymbols": {
      "BalanceHolder_ERC20": [
        5121
      ],
      "IBalanceHolder_ERC20": [
        5141
      ],
      "IERC20": [
        5226
      ]
    },
    "id": 5122,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5070,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:24:24"
      },
      {
        "absolutePath": "@reality.eth/contracts/development/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 5071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 5227,
        "src": "68:22:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@reality.eth/contracts/development/contracts/IBalanceHolder_ERC20.sol",
        "file": "./IBalanceHolder_ERC20.sol",
        "id": 5072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 5142,
        "src": "91:36:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5073,
              "name": "IBalanceHolder_ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5141,
              "src": "161:20:24"
            },
            "id": 5074,
            "nodeType": "InheritanceSpecifier",
            "src": "161:20:24"
          }
        ],
        "canonicalName": "BalanceHolder_ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5121,
        "linearizedBaseContracts": [
          5121,
          5141
        ],
        "name": "BalanceHolder_ERC20",
        "nameLocation": "138:19:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              5140
            ],
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 5077,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "203:5:24",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "189:19:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5226",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 5076,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5075,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5226,
                "src": "189:6:24"
              },
              "referencedDeclaration": 5226,
              "src": "189:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5226",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5134
            ],
            "constant": false,
            "functionSelector": "70a08231",
            "id": 5081,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "250:9:24",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "215:44:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5080,
              "keyType": {
                "id": 5078,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "223:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "215:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5079,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "234:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 5087,
            "name": "LogWithdraw",
            "nameLocation": "272:11:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5083,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "309:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5087,
                  "src": "293:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5085,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "331:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5087,
                  "src": "323:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:60:24"
            },
            "src": "266:78:24"
          },
          {
            "baseFunctions": [
              5127
            ],
            "body": {
              "id": 5119,
              "nodeType": "Block",
              "src": "382:180:24",
              "statements": [
                {
                  "assignments": [
                    5091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5091,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "400:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5119,
                      "src": "392:11:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "392:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5096,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5092,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5081,
                      "src": "406:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5095,
                    "indexExpression": {
                      "expression": {
                        "id": 5093,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "416:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "416:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "406:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "392:35:24"
                },
                {
                  "expression": {
                    "id": 5102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5097,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5081,
                        "src": "437:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5100,
                      "indexExpression": {
                        "expression": {
                          "id": 5098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "447:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "447:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "437:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 5101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "461:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "437:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5103,
                  "nodeType": "ExpressionStatement",
                  "src": "437:25:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5107,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "495:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "495:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5109,
                            "name": "bal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5091,
                            "src": "507:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5105,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5077,
                            "src": "480:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$5226",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 5106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5174,
                          "src": "480:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 5110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "480:31:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "472:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5112,
                  "nodeType": "ExpressionStatement",
                  "src": "472:40:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "539:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "539:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5116,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5091,
                        "src": "551:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5113,
                      "name": "LogWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5087,
                      "src": "527:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5118,
                  "nodeType": "EmitStatement",
                  "src": "522:33:24"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 5120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "359:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:24"
            },
            "returnParameters": {
              "id": 5089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:24"
            },
            "scope": 5121,
            "src": "350:212:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5122,
        "src": "129:436:24",
        "usedErrors": []
      }
    ],
    "src": "42:524:24"
  },
  "legacyAST": {
    "absolutePath": "@reality.eth/contracts/development/contracts/BalanceHolder_ERC20.sol",
    "exportedSymbols": {
      "BalanceHolder_ERC20": [
        5121
      ],
      "IBalanceHolder_ERC20": [
        5141
      ],
      "IERC20": [
        5226
      ]
    },
    "id": 5122,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5070,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:24:24"
      },
      {
        "absolutePath": "@reality.eth/contracts/development/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 5071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 5227,
        "src": "68:22:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@reality.eth/contracts/development/contracts/IBalanceHolder_ERC20.sol",
        "file": "./IBalanceHolder_ERC20.sol",
        "id": 5072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 5142,
        "src": "91:36:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5073,
              "name": "IBalanceHolder_ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5141,
              "src": "161:20:24"
            },
            "id": 5074,
            "nodeType": "InheritanceSpecifier",
            "src": "161:20:24"
          }
        ],
        "canonicalName": "BalanceHolder_ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5121,
        "linearizedBaseContracts": [
          5121,
          5141
        ],
        "name": "BalanceHolder_ERC20",
        "nameLocation": "138:19:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              5140
            ],
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 5077,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "203:5:24",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "189:19:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5226",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 5076,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5075,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5226,
                "src": "189:6:24"
              },
              "referencedDeclaration": 5226,
              "src": "189:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5226",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5134
            ],
            "constant": false,
            "functionSelector": "70a08231",
            "id": 5081,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "250:9:24",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "215:44:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5080,
              "keyType": {
                "id": 5078,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "223:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "215:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5079,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "234:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 5087,
            "name": "LogWithdraw",
            "nameLocation": "272:11:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5083,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "309:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5087,
                  "src": "293:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5085,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "331:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5087,
                  "src": "323:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:60:24"
            },
            "src": "266:78:24"
          },
          {
            "baseFunctions": [
              5127
            ],
            "body": {
              "id": 5119,
              "nodeType": "Block",
              "src": "382:180:24",
              "statements": [
                {
                  "assignments": [
                    5091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5091,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "400:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5119,
                      "src": "392:11:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "392:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5096,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5092,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5081,
                      "src": "406:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5095,
                    "indexExpression": {
                      "expression": {
                        "id": 5093,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "416:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "416:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "406:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "392:35:24"
                },
                {
                  "expression": {
                    "id": 5102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5097,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5081,
                        "src": "437:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5100,
                      "indexExpression": {
                        "expression": {
                          "id": 5098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "447:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "447:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "437:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 5101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "461:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "437:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5103,
                  "nodeType": "ExpressionStatement",
                  "src": "437:25:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5107,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "495:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "495:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5109,
                            "name": "bal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5091,
                            "src": "507:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5105,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5077,
                            "src": "480:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$5226",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 5106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5174,
                          "src": "480:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 5110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "480:31:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "472:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5112,
                  "nodeType": "ExpressionStatement",
                  "src": "472:40:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "539:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "539:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5116,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5091,
                        "src": "551:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5113,
                      "name": "LogWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5087,
                      "src": "527:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5118,
                  "nodeType": "EmitStatement",
                  "src": "522:33:24"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 5120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "359:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:24"
            },
            "returnParameters": {
              "id": 5089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:24"
            },
            "scope": 5121,
            "src": "350:212:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5122,
        "src": "129:436:24",
        "usedErrors": []
      }
    ],
    "src": "42:524:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2023-03-28T14:32:30.311Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}