{
  "contractName": "PredictionMarketV3Controller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PMV3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_realitioLibraryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_PMV3Factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenToAnswer",
          "type": "address"
        }
      ],
      "name": "LandCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandOffsetUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PMV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PMV3Factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lands",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "everyoneCanCreateMarkets",
          "type": "bool"
        },
        {
          "internalType": "contract IRealityETH_IERC20",
          "name": "realitio",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realitioFactory",
      "outputs": [
        {
          "internalType": "contract RealityETH_ERC20_Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountToClaim",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAnswer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "everyoneCanCreateMarkets",
          "type": "bool"
        }
      ],
      "name": "createLand",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "disableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "enableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdminToLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdminFromLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToCreateMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToResolveMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        }
      ],
      "name": "isIERC20TokenSocial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isLandAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PMV3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_realitioLibraryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_PMV3Factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenToAnswer\",\"type\":\"address\"}],\"name\":\"LandCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandOffsetUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PMV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PMV3Factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdminToLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountToClaim\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAnswer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"everyoneCanCreateMarkets\",\"type\":\"bool\"}],\"name\":\"createLand\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"disableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"enableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToCreateMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToResolveMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"}],\"name\":\"isIERC20TokenSocial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isLandAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lands\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"everyoneCanCreateMarkets\",\"type\":\"bool\"},{\"internalType\":\"contract IRealityETH_IERC20\",\"name\":\"realitio\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realitioFactory\",\"outputs\":[{\"internalType\":\"contract RealityETH_ERC20_Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdminFromLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarketV3Controller.sol\":\"PredictionMarketV3Controller\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x6eabd0f1326073b2aaf4298cb3b15b7cfc96966586dbaca2f126409f4fd11688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b67ef6927ae0b5afd4faf7cf6bf6bce6ad0ebe3b07bd75ae24891ecd8ddf2c4\",\"dweb:/ipfs/QmfLFWECbFNfb9Vh1ftmj1E6KmHa8wJkpzaWgBvujo56Wp\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"project:/contracts/FantasyERC20.sol\":{\"keccak256\":\"0x5208602dbeaa239b13143c24e61abce91fb1dcb2e4c6627d462187ea7dee436d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8da09a6f9e6e0464d2e076559d2de192689f958f36c4711fd23be8c215498f90\",\"dweb:/ipfs/QmaxR3TpCfgr1UY2MiR7oagL27GgsTMzUFfQJtjswdQBQh\"]},\"project:/contracts/IFantasyERC20.sol\":{\"keccak256\":\"0x6cfe7a55d64523751b210019be02c0c403b106bc44affb5fafaeb87183ceb7db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71d049ce4070f83f4067ebcb518e5d51a5f00712d63b7ba18fb6cd2e07a18dca\",\"dweb:/ipfs/QmeANsJycg6SE5k3TYHuJctVfNXXZwrQZr6RNYUAPAM2xz\"]},\"project:/contracts/IPredictionMarketV3Manager.sol\":{\"keccak256\":\"0x5b8dca067534f46da015c26afa502d9825d058d4ce40b79c4f0204f8219718c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc04293027364acdf1a362232e6c96cc9ccfd642410a9247323f36d394fcba1d\",\"dweb:/ipfs/QmPL8eLBf26tsAsv9ma8E4HpwKgvbZojmNvCKSd5D4V8H8\"]},\"project:/contracts/IRealityETH_ERC20.sol\":{\"keccak256\":\"0x829f84252e4c06a9563be80b9bd93d4eb875ac865629bc312c20c2fc48a27c67\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4486fd8f19077689309998e39f63e47a6c84ef819c708887460d24cb6748cc98\",\"dweb:/ipfs/QmcFNnjyJfbh885rV7YW3WZfP1xRwHmmoVfGyTZyjhhk7N\"]},\"project:/contracts/PredictionMarketV3.sol\":{\"keccak256\":\"0xe881ae8abdd3f775befe1699dbf02b9172e2c80fef57705931dbe152684ece21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f298a811cc4374eb60a8cb32630a30d345c780f1980bdafdd662373d0ed0b2\",\"dweb:/ipfs/QmQCshFiim6LGaULhSDKieSYarfRGMEUe2Lb2sg4LMdynL\"]},\"project:/contracts/PredictionMarketV3Controller.sol\":{\"keccak256\":\"0xd321ff9104755f35aba44013c324a5ead3a3680a812890a37442449071dd4a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fe2206737b7f84cec1256f50f833f95a0a4751128142f0226ef3068cabb9a57\",\"dweb:/ipfs/QmUJjdxKTKVWPuy3XSVLFcTHozUf3ykNzTuvty9K9arAxH\"]},\"project:/contracts/PredictionMarketV3Factory.sol\":{\"keccak256\":\"0x077b049e9a69c408f298dc43900f417277648a6d6d58d33369d2f40c2471b1f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e57a1d22c3d3c4017d1c28ec29448d0b4f6d194e0e2786fe3198b3a1fc9151\",\"dweb:/ipfs/QmeGNEVB9JTJMNR6w48oZxHwWL3t2RY5oWcbJtzpUm3hYh\"]},\"project:/contracts/RealityETH_ERC20_Factory.sol\":{\"keccak256\":\"0xfa3c12a43c9d3bb54a90a050a33f8fc9b97cb1cc46c8f9d22a83d3d042131c61\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8e73d6c105df45f7d43fc8b5b86855d6c53ea4cef89ff848d986fbf53d0e2473\",\"dweb:/ipfs/QmSkFHJZX61HZmfw49j28R14u6sXshcPCKVQtwVwUmTx8m\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620040433803806200404383398101604081905262000034916200018f565b6200003f3362000114565b600180556001600160a01b038116620000ae5760405162461bcd60e51b815260206004820152602760248201527f504d5633466163746f727920616464726573732063616e6e6f742062652030206044820152666164647265737360c81b606482015260840160405180910390fd5b6001600160a01b0383166080526040518290620000cb9062000164565b6001600160a01b039091168152602001604051809103906000f080158015620000f8573d6000803e3d6000fd5b506001600160a01b0390811660c0521660a05250620001d99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109ef806200365483390190565b80516001600160a01b03811681146200018a57600080fd5b919050565b600080600060608486031215620001a557600080fd5b620001b08462000172565b9250620001c06020850162000172565b9150620001d06040850162000172565b90509250925092565b60805160a05160c05161342162000233600039600081816102c60152818161071a015281816107b80152610836015260008181610138015261045e0152600081816101ad015281816104e7015261056d01526134216000f3fe60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b1146200034c5780638da5cb5b1462000363578063d13acee11462000375578063d1aeb5c214620003ab578063f2fde38b14620003c257600080fd5b80636e3dd8ba14620002c057806370e9207814620002e8578063715018a614620002ff578063791e0519146200030957600080fd5b806325c7205911620000fc57806325c7205914620001cf57806330ccd17a14620001f757806333b22760146200020e5780634fe62a5b14620002905780635d341ae514620002a957600080fd5b80630c27c26c14620001325780631311758b14620001775780631b4d534e14620001905780631cbe8a6514620001a7575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a620001a136600462001156565b620003d9565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001e6620001e0366004620011f6565b62000905565b60405190151581526020016200016e565b6200015a6200020836600462001234565b62000967565b6200025c6200021f3660046200124e565b600260208190526000918252604090912080549101546001600160a01b038083169260ff600160a01b909104811692908116916101009091041684565b604080516001600160a01b03958616815293151560208501529115159183019190915290911660608201526080016200016e565b620002a7620002a1366004620011f6565b62000992565b005b620002a7620002ba3660046200124e565b62000afc565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620002a7620002f93660046200124e565b62000c42565b620002a762000d7d565b620001e66200031a366004620011f6565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b620002a76200035d366004620011f6565b62000d95565b6000546001600160a01b03166200015a565b620001e6620003863660046200124e565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b620001e6620003bc366004620011f6565b62000efa565b620002a7620003d33660046200124e565b62000f4d565b60006001600160a01b038316620004435760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084015b60405180910390fd5b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620004b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d6919062001275565b620004e057600080fd5b60008787877f0000000000000000000000000000000000000000000000000000000000000000604051620005149062001078565b620005239493929190620012dd565b604051809103906000f08015801562000540573d6000803e3d6000fd5b50604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620005be57600080fd5b505af1158015620005d3573d6000803e3d6000fd5b5050604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200062e57600080fd5b505af115801562000643573d6000803e3d6000fd5b505050506001600160a01b03811660008181526002602081815260408084208054600160a01b6001600160a81b031990911687171781553385526001808201909352908420805460ff19908116841790915592810180549093168915151790925560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169093179092556004805491620006f38362001328565b909155505060405163316b373960e01b81526001600160a01b0387811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078a919062001350565b6001600160a01b0316036200081757604051633b937bbb60e11b81526001600160a01b0387811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b158015620007fd57600080fd5b505af115801562000812573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa1580156200087e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a4919062001350565b600282018054610100600160a81b0319166101006001600160a01b03938416021790556040518782169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a450979650505050505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f5750600281015460ff16806200095f57506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200097857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff16620009fa5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000a2e5760405162461bcd60e51b81526004016200043a9062001370565b8054604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b15801562000a8a57600080fd5b505af115801562000a9f573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff161562000b685760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000b9c5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b15801562000bef57600080fd5b505af115801562000c04573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000ca95760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000cdd5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000d2a57600080fd5b505af115801562000d3f573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000d8762000fcc565b62000d93600062001028565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000dfd5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000e315760405162461bcd60e51b81526004016200043a9062001370565b805460405163d547741f60e01b8152600080516020620033cc83398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000e8d57600080fd5b505af115801562000ea2573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f57506001600160a01b038316600090815260018201602052604090205460ff1691505092915050565b62000f5762000fcc565b6001600160a01b03811662000fbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200043a565b62000fc98162001028565b50565b6000546001600160a01b0316331462000d935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200043a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61202c80620013a083390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620010ae57600080fd5b813567ffffffffffffffff80821115620010cc57620010cc62001086565b604051601f8301601f19908116603f01168101908282118183101715620010f757620010f762001086565b816040528381528660208588010111156200111157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462000fc957600080fd5b801515811462000fc957600080fd5b600080600080600060a086880312156200116f57600080fd5b853567ffffffffffffffff808211156200118857600080fd5b6200119689838a016200109c565b96506020880135915080821115620011ad57600080fd5b50620011bc888289016200109c565b945050604086013592506060860135620011d68162001131565b91506080860135620011e88162001147565b809150509295509295909350565b600080604083850312156200120a57600080fd5b8235620012178162001131565b91506020830135620012298162001131565b809150509250929050565b6000602082840312156200124757600080fd5b5035919050565b6000602082840312156200126157600080fd5b81356200126e8162001131565b9392505050565b6000602082840312156200128857600080fd5b81516200126e8162001147565b6000815180845260005b81811015620012bd576020818501810151868301820152016200129f565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000620012f2608083018762001295565b828103602084015262001306818762001295565b604084019590955250506001600160a01b039190911660609091015292915050565b6000600182016200134957634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200136357600080fd5b81516200126e8162001131565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b60408201526060019056fe60806040523480156200001157600080fd5b506040516200202c3803806200202c833981016040819052620000349162000321565b83838181600562000046838262000444565b50600662000055828262000444565b50506007805460ff19169055506200006f600033620000f7565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f7565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f7565b5050600a91909155600980546001600160a01b0319166001600160a01b0390921691909117905550620005109050565b62000103828262000107565b5050565b6200011e82826200014a60201b62000ac71760201c565b60008281526001602090815260409091206200014591839062000b4b620001ea821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000103576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000201836001600160a01b0384166200020a565b90505b92915050565b6000818152600183016020526040812054620002535750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000204565b50600062000204565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028457600080fd5b81516001600160401b0380821115620002a157620002a16200025c565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc6200025c565b81604052838152602092508683858801011115620002e957600080fd5b600091505b838210156200030d5785820183015181830184015290820190620002ee565b600093810190920192909252949350505050565b600080600080608085870312156200033857600080fd5b84516001600160401b03808211156200035057600080fd5b6200035e8883890162000272565b955060208701519150808211156200037557600080fd5b50620003848782880162000272565b60408701516060880151919550935090506001600160a01b0381168114620003ab57600080fd5b939692955090935050565b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014557600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b505050505050565b81516001600160401b038111156200046057620004606200025c565b6200047881620004718454620003b6565b84620003f2565b602080601f831160018114620004b05760008415620004975750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e157888601518255948401946001909101908401620004c0565b5085821015620005005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0c80620005206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461042b578063d53913931461043e578063d547741f14610465578063dd62ed3e14610478578063e63ab1e91461048b57600080fd5b8063a217fddf146103f5578063a457c2d7146103fd578063a9059cbb14610410578063adb1f0d81461042357600080fd5b806387bbfe0a116100e957806387bbfe0a1461039b5780639010d07c146103c757806391d14854146103da57806395d89b41146103ed57600080fd5b80635c975abb1461034c57806370a082311461035757806379cc6790146103805780638456cb591461039357600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e36600461177c565b6104b2565b60405190151581526020015b60405180910390f35b6102306104dd565b60405161021f91906117ca565b61021361024b366004611819565b61056f565b6004545b60405190815260200161021f565b610213610270366004611843565b610587565b61025461028336600461187f565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d1366004611898565b6105ab565b005b6040516012815260200161021f565b6102d66102f5366004611898565b6105d5565b610254600a5481565b610213610311366004611819565b610658565b6102d661067a565b6102d661032c366004611819565b610720565b6102d661033f36600461187f565b6107bf565b6102d66107cc565b60075460ff16610213565b6102546103653660046118c4565b6001600160a01b031660009081526002602052604090205490565b6102d661038e366004611819565b610869565b6102d661087e565b6102136103a93660046118c4565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d53660046118df565b610922565b6102136103e8366004611898565b610941565b61023061096a565b610254600081565b61021361040b366004611819565b610979565b61021361041e366004611819565b6109f4565b6102d6610a02565b61025461043936600461187f565b610a60565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d6610473366004611898565b610a77565b610254610486366004611901565b610a9c565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d757506104d782610b60565b92915050565b6060600580546104ec9061192b565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061192b565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d818585610b95565b5060019392505050565b600033610595858285610cb9565b6105a0858585610d33565b506001949350505050565b6000828152602081905260409020600101546105c681610dd9565b6105d08383610de3565b505050565b6001600160a01b038116331461064a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106548282610e05565b5050565b60003361057d81858561066b8383610a9c565b610675919061197b565b610b95565b6106a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b6107165760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610641565b61071e610e27565b565b61074a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610941565b6107b55760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610641565b6106548282610e79565b6107c93382610f46565b50565b3360009081526008602052604090205460ff16156107fc5760405162461bcd60e51b81526004016106419061198e565b61080833600a54610e79565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085f914290918252602082015260400190565b60405180910390a2565b610874823383610cb9565b6106548282610f46565b6108a87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b61091a5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610641565b61071e611086565b600082815260016020526040812061093a90836110c3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104ec9061192b565b600033816109878286610a9c565b9050838110156109e75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610641565b6105a08286868403610b95565b60003361057d818585610d33565b3360009081526008602052604090205460ff1615610a325760405162461bcd60e51b81526004016106419061198e565b610a3a6107cc565b6009546107c9906001600160a01b03166fffffffffffffffffffffffffffffffff61056f565b60008181526001602052604081206104d7906110cf565b600082815260208190526040902060010154610a9281610dd9565b6105d08383610e05565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610ad18282610941565b610654576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093a836001600160a01b0384166110d9565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316146104d7565b6001600160a01b038316610bf75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610641565b6001600160a01b038216610c585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610641565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc58484610a9c565b90506000198114610d2d5781811015610d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610641565b610d2d8484848403610b95565b50505050565b6009546001600160a01b0384811691161480610d5c57506009546001600160a01b038381169116145b610dce5760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e207468652061646472657373657300006064820152608401610641565b6105d0838383611128565b6107c981336112de565b610ded8282610ac7565b60008281526001602052604090206105d09082610b4b565b610e0f8282611337565b60008281526001602052604090206105d0908261139c565b610e2f6113b1565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ecf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610641565b610edb600083836113fa565b8060046000828254610eed919061197b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610641565b610fb2826000836113fa565b6001600160a01b038216600090815260026020526040902054818110156110265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610641565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b61108e611405565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e5c3390565b600061093a838361144b565b60006104d7825490565b6000818152600183016020526040812054611120575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d7565b5060006104d7565b6001600160a01b03831661118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610641565b6001600160a01b0382166111ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610641565b6111f98383836113fa565b6001600160a01b038316600090815260026020526040902054818110156112715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610641565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d19086815260200190565b60405180910390a3610d2d565b6112e88282610941565b610654576112f581611475565b611300836020611487565b6040516020016113119291906119de565b60408051601f198184030181529082905262461bcd60e51b8252610641916004016117ca565b6113418282610941565b15610654576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093a836001600160a01b038416611623565b60075460ff1661071e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610641565b6105d0838383611716565b60075460ff161561071e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610641565b600082600001828154811061146257611462611a53565b9060005260206000200154905092915050565b60606104d76001600160a01b03831660145b60606000611496836002611a69565b6114a190600261197b565b67ffffffffffffffff8111156114b9576114b9611a80565b6040519080825280601f01601f1916602001820160405280156114e3576020820181803683370190505b509050600360fc1b816000815181106114fe576114fe611a53565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061152d5761152d611a53565b60200101906001600160f81b031916908160001a9053506000611551846002611a69565b61155c90600161197b565b90505b60018111156115d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159057611590611a53565b1a60f81b8282815181106115a6576115a6611a53565b60200101906001600160f81b031916908160001a90535060049490941c936115cd81611a96565b905061155f565b50831561093a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610641565b6000818152600183016020526040812054801561170c576000611647600183611aad565b855490915060009061165b90600190611aad565b90508181146116c057600086600001828154811061167b5761167b611a53565b906000526020600020015490508087600001848154811061169e5761169e611a53565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116d1576116d1611ac0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d7565b60009150506104d7565b60075460ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610641565b60006020828403121561178e57600080fd5b81356001600160e01b03198116811461093a57600080fd5b60005b838110156117c15781810151838201526020016117a9565b50506000910152565b60208152600082518060208401526117e98160408501602087016117a6565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461181457600080fd5b919050565b6000806040838503121561182c57600080fd5b611835836117fd565b946020939093013593505050565b60008060006060848603121561185857600080fd5b611861846117fd565b925061186f602085016117fd565b9150604084013590509250925092565b60006020828403121561189157600080fd5b5035919050565b600080604083850312156118ab57600080fd5b823591506118bb602084016117fd565b90509250929050565b6000602082840312156118d657600080fd5b61093a826117fd565b600080604083850312156118f257600080fd5b50508035926020909101359150565b6000806040838503121561191457600080fd5b61191d836117fd565b91506118bb602084016117fd565b600181811c9082168061193f57607f821691505b60208210810361195f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d7576104d7611965565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a168160178501602088016117a6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a478160288401602088016117a6565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d7576104d7611965565b634e487b7160e01b600052604160045260246000fd5b600081611aa557611aa5611965565b506000190190565b818103818111156104d7576104d7611965565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e167717c6f5d7d3fa2b17f9645cf6e8f6ed55a0fe6c77f7e675e3c1e7dc9af7564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a26469706673582212208474daf90a230936dcf3b62f4576640992c7c95a7952adbc8d84b35b4829d08264736f6c63430008120033608060405234801561001057600080fd5b506040516109ef3803806109ef83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61095c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063316b3739146100465780637726f7761461008b578063b816f513146100a0575b600080fd5b61006f61005436600461077c565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461077c565b6100b3565b005b60005461006f906001600160a01b031681565b6001600160a01b0381811660009081526001602052604090205416156101455760405162461bcd60e51b815260206004820152603960248201527f54686572652073686f756c64206f6e6c79206265206f6e65206465706c6f796d60448201527f656e74207065722076657273696f6e2070657220746f6b656e00000000000000606482015260840160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906107ac565b90506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102139190810190610809565b600080549192509061022d906001600160a01b031661072a565b60405163144fa6d760e01b81526001600160a01b0386811660048301529192509082169063144fa6d790602401600060405180830381600087803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b50506040516383bf460960e01b815260206004820152603f60248201527f7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c2060448201527f2263617465676f7279223a20222573222c20226c616e67223a20222573227d0060648201526001600160a01b03841692506383bf460991506084016020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906108b6565b506040516383bf460960e01b815260206004820152604f60248201527f7b227469746c65223a20222573222c202274797065223a202275696e74222c2060448201527f22646563696d616c73223a2031382c202263617465676f7279223a202225732260648201526e2c20226c616e67223a20222573227d60881b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906108b6565b506040516383bf460960e01b815260206004820152605a60248201527f7b227469746c65223a20222573222c202274797065223a202273696e676c652d60448201527f73656c656374222c20226f7574636f6d6573223a205b25735d2c20226361746560648201527f676f7279223a20222573222c20226c616e67223a20222573227d00000000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906108b6565b506040516383bf460960e01b815260206004820152605c60248201527f7b227469746c65223a20222573222c202274797065223a20226d756c7469706c60448201527f652d73656c656374222c20226f7574636f6d6573223a205b25735d2c2022636160648201527f7465676f7279223a20222573222c20226c616e67223a20222573227d0000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb91906108b6565b506040516383bf460960e01b815260206004820152604360248201527f7b227469746c65223a20222573222c202274797065223a20226461746574696d60448201527f65222c202263617465676f7279223a20222573222c20226c616e67223a20222560648201526273227d60e81b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b691906108b6565b506001600160a01b038481166000908152600160205260409081902080546001600160a01b03191692841692909217909155517fbe87db3b58b5f4d26d54d6f8a09bbab3eefdc8879ac48f5e21ccff2a1f50b0729061071c9083908790879087906108cf565b60405180910390a150505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121561078e57600080fd5b81356001600160a01b03811681146107a557600080fd5b9392505050565b6000602082840312156107be57600080fd5b815160ff811681146107a557600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156108005781810151838201526020016107e8565b50506000910152565b60006020828403121561081b57600080fd5b815167ffffffffffffffff8082111561083357600080fd5b818401915084601f83011261084757600080fd5b815181811115610859576108596107cf565b604051601f8201601f19908116603f01168101908382118183101715610881576108816107cf565b8160405282815287602084870101111561089a57600080fd5b6108ab8360208301602088016107e5565b979650505050505050565b6000602082840312156108c857600080fd5b5051919050565b600060018060a01b03808716835280861660208401525060ff8416604083015260806060830152825180608084015261090f8160a08501602087016107e5565b601f01601f19169190910160a0019594505050505056fea26469706673582212200901921801295c1857ea1285857575b749b164c9a87fe108337110039b25924a64736f6c63430008120033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b1146200034c5780638da5cb5b1462000363578063d13acee11462000375578063d1aeb5c214620003ab578063f2fde38b14620003c257600080fd5b80636e3dd8ba14620002c057806370e9207814620002e8578063715018a614620002ff578063791e0519146200030957600080fd5b806325c7205911620000fc57806325c7205914620001cf57806330ccd17a14620001f757806333b22760146200020e5780634fe62a5b14620002905780635d341ae514620002a957600080fd5b80630c27c26c14620001325780631311758b14620001775780631b4d534e14620001905780631cbe8a6514620001a7575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a620001a136600462001156565b620003d9565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001e6620001e0366004620011f6565b62000905565b60405190151581526020016200016e565b6200015a6200020836600462001234565b62000967565b6200025c6200021f3660046200124e565b600260208190526000918252604090912080549101546001600160a01b038083169260ff600160a01b909104811692908116916101009091041684565b604080516001600160a01b03958616815293151560208501529115159183019190915290911660608201526080016200016e565b620002a7620002a1366004620011f6565b62000992565b005b620002a7620002ba3660046200124e565b62000afc565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620002a7620002f93660046200124e565b62000c42565b620002a762000d7d565b620001e66200031a366004620011f6565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b620002a76200035d366004620011f6565b62000d95565b6000546001600160a01b03166200015a565b620001e6620003863660046200124e565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b620001e6620003bc366004620011f6565b62000efa565b620002a7620003d33660046200124e565b62000f4d565b60006001600160a01b038316620004435760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084015b60405180910390fd5b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620004b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d6919062001275565b620004e057600080fd5b60008787877f0000000000000000000000000000000000000000000000000000000000000000604051620005149062001078565b620005239493929190620012dd565b604051809103906000f08015801562000540573d6000803e3d6000fd5b50604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620005be57600080fd5b505af1158015620005d3573d6000803e3d6000fd5b5050604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200062e57600080fd5b505af115801562000643573d6000803e3d6000fd5b505050506001600160a01b03811660008181526002602081815260408084208054600160a01b6001600160a81b031990911687171781553385526001808201909352908420805460ff19908116841790915592810180549093168915151790925560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169093179092556004805491620006f38362001328565b909155505060405163316b373960e01b81526001600160a01b0387811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078a919062001350565b6001600160a01b0316036200081757604051633b937bbb60e11b81526001600160a01b0387811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b158015620007fd57600080fd5b505af115801562000812573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa1580156200087e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a4919062001350565b600282018054610100600160a81b0319166101006001600160a01b03938416021790556040518782169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a450979650505050505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f5750600281015460ff16806200095f57506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200097857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff16620009fa5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000a2e5760405162461bcd60e51b81526004016200043a9062001370565b8054604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b15801562000a8a57600080fd5b505af115801562000a9f573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff161562000b685760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000b9c5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b15801562000bef57600080fd5b505af115801562000c04573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000ca95760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000cdd5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000d2a57600080fd5b505af115801562000d3f573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000d8762000fcc565b62000d93600062001028565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000dfd5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000e315760405162461bcd60e51b81526004016200043a9062001370565b805460405163d547741f60e01b8152600080516020620033cc83398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000e8d57600080fd5b505af115801562000ea2573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f57506001600160a01b038316600090815260018201602052604090205460ff1691505092915050565b62000f5762000fcc565b6001600160a01b03811662000fbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200043a565b62000fc98162001028565b50565b6000546001600160a01b0316331462000d935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200043a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61202c80620013a083390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620010ae57600080fd5b813567ffffffffffffffff80821115620010cc57620010cc62001086565b604051601f8301601f19908116603f01168101908282118183101715620010f757620010f762001086565b816040528381528660208588010111156200111157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462000fc957600080fd5b801515811462000fc957600080fd5b600080600080600060a086880312156200116f57600080fd5b853567ffffffffffffffff808211156200118857600080fd5b6200119689838a016200109c565b96506020880135915080821115620011ad57600080fd5b50620011bc888289016200109c565b945050604086013592506060860135620011d68162001131565b91506080860135620011e88162001147565b809150509295509295909350565b600080604083850312156200120a57600080fd5b8235620012178162001131565b91506020830135620012298162001131565b809150509250929050565b6000602082840312156200124757600080fd5b5035919050565b6000602082840312156200126157600080fd5b81356200126e8162001131565b9392505050565b6000602082840312156200128857600080fd5b81516200126e8162001147565b6000815180845260005b81811015620012bd576020818501810151868301820152016200129f565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000620012f2608083018762001295565b828103602084015262001306818762001295565b604084019590955250506001600160a01b039190911660609091015292915050565b6000600182016200134957634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200136357600080fd5b81516200126e8162001131565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b60408201526060019056fe60806040523480156200001157600080fd5b506040516200202c3803806200202c833981016040819052620000349162000321565b83838181600562000046838262000444565b50600662000055828262000444565b50506007805460ff19169055506200006f600033620000f7565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f7565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f7565b5050600a91909155600980546001600160a01b0319166001600160a01b0390921691909117905550620005109050565b62000103828262000107565b5050565b6200011e82826200014a60201b62000ac71760201c565b60008281526001602090815260409091206200014591839062000b4b620001ea821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000103576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000201836001600160a01b0384166200020a565b90505b92915050565b6000818152600183016020526040812054620002535750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000204565b50600062000204565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028457600080fd5b81516001600160401b0380821115620002a157620002a16200025c565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc6200025c565b81604052838152602092508683858801011115620002e957600080fd5b600091505b838210156200030d5785820183015181830184015290820190620002ee565b600093810190920192909252949350505050565b600080600080608085870312156200033857600080fd5b84516001600160401b03808211156200035057600080fd5b6200035e8883890162000272565b955060208701519150808211156200037557600080fd5b50620003848782880162000272565b60408701516060880151919550935090506001600160a01b0381168114620003ab57600080fd5b939692955090935050565b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014557600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b505050505050565b81516001600160401b038111156200046057620004606200025c565b6200047881620004718454620003b6565b84620003f2565b602080601f831160018114620004b05760008415620004975750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e157888601518255948401946001909101908401620004c0565b5085821015620005005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0c80620005206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461042b578063d53913931461043e578063d547741f14610465578063dd62ed3e14610478578063e63ab1e91461048b57600080fd5b8063a217fddf146103f5578063a457c2d7146103fd578063a9059cbb14610410578063adb1f0d81461042357600080fd5b806387bbfe0a116100e957806387bbfe0a1461039b5780639010d07c146103c757806391d14854146103da57806395d89b41146103ed57600080fd5b80635c975abb1461034c57806370a082311461035757806379cc6790146103805780638456cb591461039357600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e36600461177c565b6104b2565b60405190151581526020015b60405180910390f35b6102306104dd565b60405161021f91906117ca565b61021361024b366004611819565b61056f565b6004545b60405190815260200161021f565b610213610270366004611843565b610587565b61025461028336600461187f565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d1366004611898565b6105ab565b005b6040516012815260200161021f565b6102d66102f5366004611898565b6105d5565b610254600a5481565b610213610311366004611819565b610658565b6102d661067a565b6102d661032c366004611819565b610720565b6102d661033f36600461187f565b6107bf565b6102d66107cc565b60075460ff16610213565b6102546103653660046118c4565b6001600160a01b031660009081526002602052604090205490565b6102d661038e366004611819565b610869565b6102d661087e565b6102136103a93660046118c4565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d53660046118df565b610922565b6102136103e8366004611898565b610941565b61023061096a565b610254600081565b61021361040b366004611819565b610979565b61021361041e366004611819565b6109f4565b6102d6610a02565b61025461043936600461187f565b610a60565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d6610473366004611898565b610a77565b610254610486366004611901565b610a9c565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d757506104d782610b60565b92915050565b6060600580546104ec9061192b565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061192b565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d818585610b95565b5060019392505050565b600033610595858285610cb9565b6105a0858585610d33565b506001949350505050565b6000828152602081905260409020600101546105c681610dd9565b6105d08383610de3565b505050565b6001600160a01b038116331461064a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106548282610e05565b5050565b60003361057d81858561066b8383610a9c565b610675919061197b565b610b95565b6106a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b6107165760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610641565b61071e610e27565b565b61074a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610941565b6107b55760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610641565b6106548282610e79565b6107c93382610f46565b50565b3360009081526008602052604090205460ff16156107fc5760405162461bcd60e51b81526004016106419061198e565b61080833600a54610e79565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085f914290918252602082015260400190565b60405180910390a2565b610874823383610cb9565b6106548282610f46565b6108a87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b61091a5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610641565b61071e611086565b600082815260016020526040812061093a90836110c3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104ec9061192b565b600033816109878286610a9c565b9050838110156109e75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610641565b6105a08286868403610b95565b60003361057d818585610d33565b3360009081526008602052604090205460ff1615610a325760405162461bcd60e51b81526004016106419061198e565b610a3a6107cc565b6009546107c9906001600160a01b03166fffffffffffffffffffffffffffffffff61056f565b60008181526001602052604081206104d7906110cf565b600082815260208190526040902060010154610a9281610dd9565b6105d08383610e05565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610ad18282610941565b610654576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093a836001600160a01b0384166110d9565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316146104d7565b6001600160a01b038316610bf75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610641565b6001600160a01b038216610c585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610641565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc58484610a9c565b90506000198114610d2d5781811015610d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610641565b610d2d8484848403610b95565b50505050565b6009546001600160a01b0384811691161480610d5c57506009546001600160a01b038381169116145b610dce5760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e207468652061646472657373657300006064820152608401610641565b6105d0838383611128565b6107c981336112de565b610ded8282610ac7565b60008281526001602052604090206105d09082610b4b565b610e0f8282611337565b60008281526001602052604090206105d0908261139c565b610e2f6113b1565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ecf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610641565b610edb600083836113fa565b8060046000828254610eed919061197b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610641565b610fb2826000836113fa565b6001600160a01b038216600090815260026020526040902054818110156110265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610641565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b61108e611405565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e5c3390565b600061093a838361144b565b60006104d7825490565b6000818152600183016020526040812054611120575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d7565b5060006104d7565b6001600160a01b03831661118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610641565b6001600160a01b0382166111ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610641565b6111f98383836113fa565b6001600160a01b038316600090815260026020526040902054818110156112715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610641565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d19086815260200190565b60405180910390a3610d2d565b6112e88282610941565b610654576112f581611475565b611300836020611487565b6040516020016113119291906119de565b60408051601f198184030181529082905262461bcd60e51b8252610641916004016117ca565b6113418282610941565b15610654576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093a836001600160a01b038416611623565b60075460ff1661071e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610641565b6105d0838383611716565b60075460ff161561071e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610641565b600082600001828154811061146257611462611a53565b9060005260206000200154905092915050565b60606104d76001600160a01b03831660145b60606000611496836002611a69565b6114a190600261197b565b67ffffffffffffffff8111156114b9576114b9611a80565b6040519080825280601f01601f1916602001820160405280156114e3576020820181803683370190505b509050600360fc1b816000815181106114fe576114fe611a53565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061152d5761152d611a53565b60200101906001600160f81b031916908160001a9053506000611551846002611a69565b61155c90600161197b565b90505b60018111156115d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159057611590611a53565b1a60f81b8282815181106115a6576115a6611a53565b60200101906001600160f81b031916908160001a90535060049490941c936115cd81611a96565b905061155f565b50831561093a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610641565b6000818152600183016020526040812054801561170c576000611647600183611aad565b855490915060009061165b90600190611aad565b90508181146116c057600086600001828154811061167b5761167b611a53565b906000526020600020015490508087600001848154811061169e5761169e611a53565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116d1576116d1611ac0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d7565b60009150506104d7565b60075460ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610641565b60006020828403121561178e57600080fd5b81356001600160e01b03198116811461093a57600080fd5b60005b838110156117c15781810151838201526020016117a9565b50506000910152565b60208152600082518060208401526117e98160408501602087016117a6565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461181457600080fd5b919050565b6000806040838503121561182c57600080fd5b611835836117fd565b946020939093013593505050565b60008060006060848603121561185857600080fd5b611861846117fd565b925061186f602085016117fd565b9150604084013590509250925092565b60006020828403121561189157600080fd5b5035919050565b600080604083850312156118ab57600080fd5b823591506118bb602084016117fd565b90509250929050565b6000602082840312156118d657600080fd5b61093a826117fd565b600080604083850312156118f257600080fd5b50508035926020909101359150565b6000806040838503121561191457600080fd5b61191d836117fd565b91506118bb602084016117fd565b600181811c9082168061193f57607f821691505b60208210810361195f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d7576104d7611965565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a168160178501602088016117a6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a478160288401602088016117a6565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d7576104d7611965565b634e487b7160e01b600052604160045260246000fd5b600081611aa557611aa5611965565b506000190190565b818103818111156104d7576104d7611965565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e167717c6f5d7d3fa2b17f9645cf6e8f6ed55a0fe6c77f7e675e3c1e7dc9af7564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a26469706673582212208474daf90a230936dcf3b62f4576640992c7c95a7952adbc8d84b35b4829d08264736f6c63430008120033",
  "immutableReferences": {
    "9638": [
      {
        "length": 32,
        "start": 429
      },
      {
        "length": 32,
        "start": 1255
      },
      {
        "length": 32,
        "start": 1389
      }
    ],
    "9640": [
      {
        "length": 32,
        "start": 312
      },
      {
        "length": 32,
        "start": 1118
      }
    ],
    "9643": [
      {
        "length": 32,
        "start": 710
      },
      {
        "length": 32,
        "start": 1818
      },
      {
        "length": 32,
        "start": 1976
      },
      {
        "length": 32,
        "start": 2102
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1192:30",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:30",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:30"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:30"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:30",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:30",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:30"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:30"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:30"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:30"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:30",
                "type": ""
              }
            ],
            "src": "14:177:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:263:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "366:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "332:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "341:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "321:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "382:50:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "392:29:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:40:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "441:59:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "451:29:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:49:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "441:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "509:59:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "564:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "519:29:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:49:30"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "292:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "300:6:30",
                "type": ""
              }
            ],
            "src": "196:378:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:229:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "804:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "815:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "820:2:30",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "793:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:30"
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f74206265203020",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "859:34:30",
                        "type": "",
                        "value": "PMV3Factory address cannot be 0 "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "914:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "925:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "910:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:18:30"
                      },
                      {
                        "hexValue": "61646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "930:9:30",
                        "type": "",
                        "value": "address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "903:37:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "903:37:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "949:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "949:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "744:4:30",
                "type": ""
              }
            ],
            "src": "579:403:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1088:102:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1098:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1110:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1121:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1106:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1098:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1140:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1155:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1176:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1180:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1163:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1163:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1151:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1133:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1133:51:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1068:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1079:4:30",
                "type": ""
              }
            ],
            "src": "987:203:30"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"PMV3Factory address cannot be 0 \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 30,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9694:30",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:30",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:30",
                "type": ""
              }
            ],
            "src": "14:203:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:76:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "333:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "333:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "375:9:30"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:25:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "368:25:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "292:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "303:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "314:4:30",
                "type": ""
              }
            ],
            "src": "222:177:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:95:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "453:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:3:30",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "465:10:30",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "456:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "446:31:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "493:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:4:30",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "486:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "486:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "520:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "510:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "510:15:30"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "404:127:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "589:666:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "647:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "650:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "617:6:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "625:4:30",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "613:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "613:17:30"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "632:3:30"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "609:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:27:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "602:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:35:30"
                  },
                  "nodeType": "YulIf",
                  "src": "599:55:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "663:30:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "686:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "673:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "673:20:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "667:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "702:28:30",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "712:18:30",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "706:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "753:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "755:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "755:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "755:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "745:2:30"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "749:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "742:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:10:30"
                  },
                  "nodeType": "YulIf",
                  "src": "739:36:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "784:17:30",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:30",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "794:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "794:7:30"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "788:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:23:30",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "830:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "824:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:9:30"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "814:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "842:71:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "864:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "888:2:30"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "892:4:30",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "884:3:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "884:13:30"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "899:2:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "880:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "880:22:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "904:2:30",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "876:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "876:31:30"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "909:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "872:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "872:40:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "860:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:53:30"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "846:10:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "972:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "974:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "974:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "974:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "931:10:30"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "943:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "928:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "951:10:30"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "963:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "948:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "925:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:46:30"
                  },
                  "nodeType": "YulIf",
                  "src": "922:72:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1010:2:30",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1014:10:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:22:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1003:22:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1041:6:30"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1049:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:18:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1034:18:30"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1100:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1102:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1102:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1102:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1075:6:30"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1083:2:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1071:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1071:15:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1088:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:26:30"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1095:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1064:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1064:35:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1061:55:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1142:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1150:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1138:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1138:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1161:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1169:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1157:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:17:30"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1176:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1125:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:54:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:54:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1203:6:30"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1211:2:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1199:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1199:15:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1216:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1195:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:26:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1223:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1188:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:37:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1188:37:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1234:15:30",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1243:6:30"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1234:5:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "563:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "571:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "579:5:30",
                "type": ""
              }
            ],
            "src": "536:719:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1313:86:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1377:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1386:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1389:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1336:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1347:5:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1362:3:30",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1367:1:30",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1358:3:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1358:11:30"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1371:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1354:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1354:19:30"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:31:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1333:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1333:42:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1326:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:50:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1323:70:30"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:30",
                "type": ""
              }
            ],
            "src": "1260:139:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1446:76:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1500:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1509:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1512:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1502:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1502:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1502:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1469:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1490:5:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1483:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1483:13:30"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1476:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1476:21:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1466:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1466:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1459:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1459:40:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1456:60:30"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1435:5:30",
                "type": ""
              }
            ],
            "src": "1404:118:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1697:736:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1744:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1753:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1756:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1746:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1746:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1746:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1718:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1727:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1714:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1714:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1739:3:30",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1710:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:33:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1707:53:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1769:37:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1796:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1783:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1783:23:30"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1773:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1815:28:30",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1825:18:30",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1819:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1870:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1879:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1882:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1872:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1872:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1872:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1858:6:30"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1866:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1855:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:14:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1852:34:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1895:60:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1927:9:30"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1938:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1923:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:22:30"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1947:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1905:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1905:50:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1895:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1964:48:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1980:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:32:30"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1968:8:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2041:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2053:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2043:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2043:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2043:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2027:8:30"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2037:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2024:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:16:30"
                  },
                  "nodeType": "YulIf",
                  "src": "2021:36:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2066:62:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2098:9:30"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2109:8:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2094:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2094:24:30"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2120:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2076:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:52:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2066:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2137:42:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2164:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2175:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2147:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:32:30"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2137:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2188:45:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2218:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2229:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2214:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2214:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2201:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2201:32:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2192:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2275:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2242:32:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:39:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2242:39:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2290:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2300:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2290:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2314:48:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2346:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2357:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:19:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2329:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:33:30"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2318:7:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2393:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2371:21:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2371:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2371:30:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2410:17:30",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2420:7:30"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2410:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1631:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1642:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1654:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1662:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1670:6:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1678:6:30",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1686:6:30",
                "type": ""
              }
            ],
            "src": "1527:906:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2560:102:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2570:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2582:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2593:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2578:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2578:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2570:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2612:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2627:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2643:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2648:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2639:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2639:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2652:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2635:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2635:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2605:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2605:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2605:51:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2529:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2540:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2551:4:30",
                "type": ""
              }
            ],
            "src": "2438:224:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2769:317:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2815:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2824:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2827:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2817:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2817:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2817:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2790:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2799:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2786:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2786:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2811:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2782:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2782:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "2779:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2840:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2866:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2853:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2844:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2918:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2885:32:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:39:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2885:39:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2933:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2943:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2933:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2957:47:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2989:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3000:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2985:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2985:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2972:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:32:30"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2961:7:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3046:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "3013:32:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:41:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:41:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3063:17:30",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3073:7:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3063:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2727:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2738:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2750:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2758:6:30",
                "type": ""
              }
            ],
            "src": "2667:419:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3186:92:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3196:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3208:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3219:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3204:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3196:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3238:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3263:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3256:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3256:14:30"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3249:6:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3249:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3231:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:41:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3231:41:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3155:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3166:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3177:4:30",
                "type": ""
              }
            ],
            "src": "3091:187:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3353:110:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3399:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3408:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3411:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3401:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3401:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3401:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3374:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3383:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3370:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3370:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3395:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3366:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3366:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "3363:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3424:33:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3447:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3434:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:23:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3424:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3319:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3330:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3342:6:30",
                "type": ""
              }
            ],
            "src": "3283:180:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3538:185:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3584:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3593:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3596:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3586:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3586:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3586:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3559:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3568:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3555:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3555:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3551:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "3548:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3609:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3635:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3622:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3613:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3687:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "3654:32:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3654:39:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3654:39:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3702:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3712:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3504:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3515:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3527:6:30",
                "type": ""
              }
            ],
            "src": "3468:255:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3950:294:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3960:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3972:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3983:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3968:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3968:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3960:4:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3996:29:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4014:3:30",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4019:1:30",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4010:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4010:11:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4023:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4006:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:19:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4000:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4041:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4056:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4064:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4052:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4052:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4034:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4034:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4088:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4099:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4084:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4084:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4118:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4111:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4111:14:30"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4104:6:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4077:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:50:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4077:50:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4147:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4143:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4177:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4170:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4170:14:30"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4163:6:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4163:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:50:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:50:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4206:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4217:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4202:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4202:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4226:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4234:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4195:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4195:43:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4195:43:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_bool_t_contract$_IRealityETH_IERC20_$10959__to_t_address_t_bool_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3895:9:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3906:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3914:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3922:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3930:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3941:4:30",
                "type": ""
              }
            ],
            "src": "3728:516:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4334:185:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4380:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4389:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4392:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4382:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4382:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4382:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4355:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4364:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4351:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4351:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4376:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4347:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "4344:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4405:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4431:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4418:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4409:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4483:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "4450:32:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4450:39:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4450:39:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4498:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4508:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4498:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4300:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4311:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4323:6:30",
                "type": ""
              }
            ],
            "src": "4249:270:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4659:102:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4669:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4681:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4692:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4677:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4669:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4711:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4726:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4742:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4747:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4738:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4738:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4751:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4734:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4734:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4722:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4722:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4704:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4704:51:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11098__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4628:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4639:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4650:4:30",
                "type": ""
              }
            ],
            "src": "4524:237:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4940:225:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4957:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4968:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4950:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4950:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4991:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5002:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4987:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4987:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5007:2:30",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4980:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4980:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5041:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5026:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5026:18:30"
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5046:34:30",
                        "type": "",
                        "value": "Token to answer cannot be 0 addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5101:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5112:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5097:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5097:18:30"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5117:5:30",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5090:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:33:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5132:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5144:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5155:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5140:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5132:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4917:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4931:4:30",
                "type": ""
              }
            ],
            "src": "4766:399:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5337:175:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5347:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5359:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5370:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5355:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5355:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5347:4:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5382:29:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5400:3:30",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5405:1:30",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5396:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5396:11:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5409:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5392:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5392:19:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5386:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5427:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5442:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5450:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5438:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5438:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5420:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5420:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5420:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5474:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5485:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5470:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5470:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5494:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5502:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5490:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5490:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5463:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5463:43:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5463:43:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PredictionMarketV3Controller_$10281_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5298:9:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5309:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5317:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5328:4:30",
                "type": ""
              }
            ],
            "src": "5170:342:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5595:167:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5641:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5650:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5653:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5643:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5643:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5643:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5616:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5625:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5612:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5612:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5637:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5608:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5608:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "5605:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5666:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5685:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5679:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5679:16:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5670:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5726:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5704:21:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5704:28:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5704:28:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5741:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5751:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5741:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5561:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5572:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5584:6:30",
                "type": ""
              }
            ],
            "src": "5517:245:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5817:373:30",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5827:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5847:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5841:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5841:12:30"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5831:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5869:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5874:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5862:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5862:19:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5862:19:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5890:10:30",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5899:1:30",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5894:1:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5961:110:30",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5975:14:30",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5985:4:30",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "5979:2:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "6017:3:30"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6022:1:30"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6013:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6013:11:30"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6026:2:30"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6009:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6009:20:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "6045:5:30"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6052:1:30"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6041:3:30"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6041:13:30"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6056:2:30"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6037:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6037:22:30"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6031:5:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6031:29:30"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6002:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6002:59:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6002:59:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5920:1:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5923:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5917:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5917:13:30"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5931:21:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5933:17:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5942:1:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5945:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5938:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5938:12:30"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5933:1:30"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5913:3:30",
                    "statements": []
                  },
                  "src": "5909:162:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6095:3:30"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6100:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6091:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6091:16:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6109:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6087:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6087:27:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6116:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6080:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6080:38:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6080:38:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6127:57:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6142:3:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6155:6:30"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6163:2:30",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6151:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6151:15:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6172:2:30",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6168:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6168:7:30"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6147:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6147:29:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6138:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6138:39:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6179:4:30",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6134:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6134:50:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6127:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5794:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5801:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5809:3:30",
                "type": ""
              }
            ],
            "src": "5767:423:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6420:328:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6437:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6448:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6430:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6430:22:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6430:22:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6461:60:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6493:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6505:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6516:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6501:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6501:19:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6475:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6475:46:30"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6465:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6541:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6552:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6537:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6537:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6561:6:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6569:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6557:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6557:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6530:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6530:50:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6530:50:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6589:41:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6615:6:30"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6623:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6597:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:33:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6589:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6650:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6661:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6646:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6646:18:30"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6666:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6639:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6639:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6639:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6693:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6704:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6689:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6689:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6713:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6729:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6734:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6725:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6725:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6738:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6721:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6721:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6709:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6709:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6682:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6682:60:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6682:60:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6365:9:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6376:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6384:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6392:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6400:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6411:4:30",
                "type": ""
              }
            ],
            "src": "6195:553:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6882:145:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6892:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6904:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6915:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6900:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6900:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6892:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6934:9:30"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6945:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6927:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6927:25:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6927:25:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6972:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6983:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6968:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6968:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6992:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7008:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7013:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7004:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7004:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7017:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7000:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7000:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6988:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6988:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6961:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6961:60:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6961:60:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6843:9:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6854:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6862:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6873:4:30",
                "type": ""
              }
            ],
            "src": "6753:274:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7079:185:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7118:111:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7139:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7146:3:30",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7151:10:30",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7142:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7142:20:30"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7132:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7132:31:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7132:31:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7183:1:30",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7186:4:30",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7176:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7176:15:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7176:15:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7211:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7214:4:30",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7204:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7204:15:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7204:15:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7095:5:30"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7106:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7102:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7102:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7092:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7092:17:30"
                  },
                  "nodeType": "YulIf",
                  "src": "7089:140:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7238:20:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7249:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7256:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7245:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7245:13:30"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7238:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7061:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7071:3:30",
                "type": ""
              }
            ],
            "src": "7032:232:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7350:178:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7396:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7405:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7408:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7398:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7398:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7398:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7371:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7380:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7367:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7367:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7392:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7363:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7363:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "7360:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7421:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7440:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7434:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7434:16:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7425:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7492:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "7459:32:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7459:39:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7459:39:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7507:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7517:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7507:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7316:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7327:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7339:6:30",
                "type": ""
              }
            ],
            "src": "7269:259:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7707:169:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7724:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7735:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7717:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7717:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7717:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7758:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7769:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7754:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7754:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7774:2:30",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7747:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7747:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7747:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7797:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7808:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7793:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7793:18:30"
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7813:21:30",
                        "type": "",
                        "value": "Land does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7786:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7786:49:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7786:49:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7844:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7856:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7867:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7852:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7852:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7844:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7684:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7698:4:30",
                "type": ""
              }
            ],
            "src": "7533:343:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8055:171:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8072:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8083:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8065:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8065:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8065:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8106:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8117:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8102:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8102:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8122:2:30",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8095:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8095:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8095:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8145:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8156:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8141:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8141:18:30"
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8161:23:30",
                        "type": "",
                        "value": "Not admin of the land"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8134:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8134:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8134:51:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8194:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8206:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8217:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8202:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8202:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8194:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8032:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8046:4:30",
                "type": ""
              }
            ],
            "src": "7881:345:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8405:172:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8422:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8433:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8415:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8415:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8415:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8456:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8467:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8452:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8452:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8472:2:30",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8445:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8445:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8445:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8495:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8506:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8491:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8491:18:30"
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8511:24:30",
                        "type": "",
                        "value": "Land is already active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8484:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8484:52:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8484:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8545:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8557:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8568:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8553:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8545:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8382:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8396:4:30",
                "type": ""
              }
            ],
            "src": "8231:346:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8756:168:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8773:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8784:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8766:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8766:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8766:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8807:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8818:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8803:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8803:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8823:2:30",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8796:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8796:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8796:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8846:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8857:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8842:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8842:18:30"
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8862:20:30",
                        "type": "",
                        "value": "Land is not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8835:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8835:48:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8835:48:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8892:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8904:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8915:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8900:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8900:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8892:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8733:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8747:4:30",
                "type": ""
              }
            ],
            "src": "8582:342:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9103:228:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9120:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9131:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9113:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9113:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9113:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9154:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9165:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9150:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9150:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9170:2:30",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9143:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9143:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9143:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9193:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9204:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9189:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9189:18:30"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9209:34:30",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9182:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9182:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9182:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9264:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9275:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9260:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9260:18:30"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9280:8:30",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9253:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9253:36:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9253:36:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9298:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9310:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9321:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9306:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9306:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9298:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9080:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9094:4:30",
                "type": ""
              }
            ],
            "src": "8929:402:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9510:182:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9527:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9538:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9520:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9520:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9520:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9561:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9572:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9557:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9557:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9577:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9550:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9550:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9550:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9600:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9611:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9596:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9596:18:30"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9616:34:30",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9589:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9589:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9589:62:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9660:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9672:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9683:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9668:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9668:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9660:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9487:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9501:4:30",
                "type": ""
              }
            ],
            "src": "9336:356:30"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_contract_IERC20(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_bool_t_contract$_IRealityETH_IERC20_$10959__to_t_address_t_bool_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11098__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token to answer cannot be 0 addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_PredictionMarketV3Controller_$10281_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Land does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not admin of the land\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Land is already active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Land is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 30,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "328:5633:27:-:0;;;1371:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:16;936:18:4;:32::i;:::-;1716:1:6;1821:22;;-1:-1:-1;;;;;1483:26:27;;1475:78;;;;-1:-1:-1;;;1475:78:27;;781:2:30;1475:78:27;;;763:21:30;820:2;800:18;;;793:30;859:34;839:18;;;832:62;-1:-1:-1;;;910:18:30;;;903:37;957:19;;1475:78:27;;;;;;;;-1:-1:-1;;;;;1560:12:27;;;;1596:53;;1625:23;;1596:53;;;:::i;:::-;-1:-1:-1;;;;;1151:32:30;;;1133:51;;1121:2;1106:18;1596:53:27;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1578:71:27;;;;;1655:26;;;-1:-1:-1;328:5633:27;;-1:-1:-1;328:5633:27;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;328:5633:27:-;;;;;;;;:::o;14:177:30:-;93:13;;-1:-1:-1;;;;;135:31:30;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;987:203::-;328:5633:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "328:5633:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:36;;;;;;;;-1:-1:-1;;;;;178:32:30;;;160:51;;148:2;133:18;462:36:27;;;;;;;;1335:31;;;;;;;;;368:25:30;;;356:2;341:18;1335:31:27;222:177:30;1920:1565:27;;;;;;:::i;:::-;;:::i;398:29::-;;;;;5179:233;;;;;;:::i;:::-;;:::i;:::-;;;3256:14:30;;3249:22;3231:41;;3219:2;3204:18;5179:233:27;3091:187:30;1304:27:27;;;;;;:::i;:::-;;:::i;1263:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1263:37:27;;;;;-1:-1:-1;;;1263:37:27;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4052:15:30;;;4034:34;;4111:14;;4104:22;4099:2;4084:18;;4077:50;4170:14;;4163:22;4143:18;;;4136:50;;;;4222:15;;;4217:2;4202:18;;4195:43;3983:3;3968:19;1263:37:27;3728:516:30;4282:438:27;;;;;;:::i;:::-;;:::i;:::-;;3883:395;;;;;;:::i;:::-;;:::i;539:57::-;;;;;3489:390;;;;;;:::i;:::-;;:::i;1831:101:4:-;;;:::i;5786:173:27:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5896:27:27;;;5864:4;5896:27;;;:5;:27;;;;;;;;5937:17;;;;;;:11;;;;:17;;;;;;;;5786:173;4724:451;;;;;;:::i;:::-;;:::i;1201:85:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;5621:161:27;;;;;;:::i;:::-;-1:-1:-1;;;;;5725:27:27;5693:4;5725:27;;;:5;:27;;;;;5766:11;-1:-1:-1;;;5766:11:27;;;;;5621:161;5416:201;;;;;;:::i;:::-;;:::i;2081:198:4:-;;;;;;:::i;:::-;;:::i;1920:1565:27:-;2105:12;-1:-1:-1;;;;;2134:36:27;;2126:84;;;;-1:-1:-1;;;2126:84:27;;4968:2:30;2126:84:27;;;4950:21:30;5007:2;4987:18;;;4980:30;5046:34;5026:18;;;5019:62;-1:-1:-1;;;5097:18:30;;;5090:33;5140:19;;2126:84:27;;;;;;;;;2350:61;;-1:-1:-1;;;2350:61:27;;2394:4;2350:61;;;5420:34:30;2400:10:27;5470:18:30;;;5463:43;2295:11:27;;-1:-1:-1;;;;;2350:43:27;;;;;5355:18:30;;2350:61:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2342:70;;;;;;2458:22;2500:4;2506:6;2514:18;2542:4;2483:65;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2609:60:27;;-1:-1:-1;;;2609:60:27;;-1:-1:-1;;;;;;;;;;;2609:60:27;;;6927:25:30;-1:-1:-1;;;;;2663:4:27;6988:32:30;;6968:18;;;6961:60;2458:90:27;;-1:-1:-1;2609:19:27;;;;;;6900:18:30;;2609:60:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2726:57:27;;-1:-1:-1;;;2726:57:27;;-1:-1:-1;;;;;;;;;;;2726:57:27;;;6927:25:30;2772:10:27;6968:18:30;;;6961:60;-1:-1:-1;;;;;2726:19:27;;;-1:-1:-1;2726:19:27;;-1:-1:-1;6900:18:30;;2726:57:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;2853:25:27;;2833:17;2853:25;;;:5;:25;;;;;;;;2884:22;;-1:-1:-1;;;;;;;;;2912:18:27;;;;;;;;2948:10;2936:23;;-1:-1:-1;2936:11:27;;;:23;;;;;;:30;;-1:-1:-1;;2936:30:27;;;;;;;;2972:29;;;:56;;;;;;;;;;;;3034:10;:35;;;;;;;;;;;;;-1:-1:-1;;;;;;3034:35:27;;;;;;;3075:16;:18;;;;;;:::i;:::-;;;;-1:-1:-1;;3150:51:27;;-1:-1:-1;;;3150:51:27;;-1:-1:-1;;;;;178:32:30;;;3150:51:27;;;160::30;-1:-1:-1;;3150:15:27;:27;;;;;;133:18:30;;3150:51:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3150:65:27;;3146:140;;3225:54;;-1:-1:-1;;;3225:54:27;;-1:-1:-1;;;;;178:32:30;;;3225:54:27;;;160:51:30;3225:15:27;:30;;;;133:18:30;;3225:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3146:140;3326:51;;-1:-1:-1;;;3326:51:27;;-1:-1:-1;;;;;178:32:30;;;3326:51:27;;;160::30;3326:15:27;:27;;;;133:18:30;;3326:51:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3291:13;;;:87;;-1:-1:-1;;;;;;3291:87:27;;-1:-1:-1;;;;;3291:87:27;;;;;;;3390:67;;;;;;;;;3402:10;;3390:67;;-1:-1:-1;;3390:67:27;-1:-1:-1;3471:9:27;1920:1565;-1:-1:-1;;;;;;;1920:1565:27:o;5179:233::-;-1:-1:-1;;;;;5299:27:27;;5267:4;5299:27;;;:5;:27;;;;;5340:11;;-1:-1:-1;;;5340:11:27;;;;:67;;;;-1:-1:-1;5356:29:27;;;;;;;:50;;-1:-1:-1;;;;;;5389:17:27;;;;;;:11;;;:17;;;;;;;;5356:50;5333:74;5179:233;-1:-1:-1;;;;5179:233:27:o;1304:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1304:27:27;;-1:-1:-1;1304:27:27;:::o;4282:438::-;-1:-1:-1;;;;;4374:25:27;;4354:17;4374:25;;;:5;:25;;;;;4414:11;;-1:-1:-1;;;4414:11:27;;;;4406:43;;;;-1:-1:-1;;;4406:43:27;;7735:2:30;4406:43:27;;;7717:21:30;7774:2;7754:18;;;7747:30;-1:-1:-1;;;7793:18:30;;;7786:49;7852:18;;4406:43:27;7533:343:30;4406:43:27;4475:10;4463:23;;;;:11;;;:23;;;;;;;;4455:57;;;;-1:-1:-1;;;4455:57:27;;;;;;;:::i;:::-;4565:10;;:53;;-1:-1:-1;;;4565:53:27;;-1:-1:-1;;;;;;;;;;;4565:53:27;;;6927:25:30;-1:-1:-1;;;;;6988:32:30;;;6968:18;;;6961:60;4565:10:27;;;;:20;;6900:18:30;;4565:53:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4625:18:27;;;;;;;4646:4;4625:11;;;:18;;;;;;:25;;-1:-1:-1;;4625:25:27;;;;;;;4662:53;4625:18;;4662:53;;;4677:10;;4662:53;;;4348:372;4282:438;;:::o;3883:395::-;-1:-1:-1;;;;;3956:25:27;;3936:17;3956:25;;;:5;:25;;;;;3997:11;;-1:-1:-1;;;3997:11:27;;;;3996:12;3988:47;;;;-1:-1:-1;;;3988:47:27;;8433:2:30;3988:47:27;;;8415:21:30;8472:2;8452:18;;;8445:30;-1:-1:-1;;;8491:18:30;;;8484:52;8553:18;;3988:47:27;8231:346:30;3988:47:27;4061:10;4049:23;;;;:11;;;:23;;;;;;;;4041:57;;;;-1:-1:-1;;;4041:57:27;;;;;;;:::i;:::-;4128:18;;-1:-1:-1;;;;4128:18:27;-1:-1:-1;;;4128:18:27;;;4176:42;;;-1:-1:-1;;;4176:42:27;;;;-1:-1:-1;;;;;4176:40:27;;;;;:42;;;;;4128:11;;4176:42;;;;;;;4128:11;4176:40;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4230:43:27;;-1:-1:-1;;;;;4230:43:27;;;-1:-1:-1;4242:10:27;;-1:-1:-1;4230:43:27;;;;;3930:348;3883:395;:::o;3489:390::-;-1:-1:-1;;;;;3563:25:27;;3543:17;3563:25;;;:5;:25;;;;;3603:11;;-1:-1:-1;;;3603:11:27;;;;3595:42;;;;-1:-1:-1;;;3595:42:27;;8784:2:30;3595:42:27;;;8766:21:30;8823:2;8803:18;;;8796:30;-1:-1:-1;;;8842:18:30;;;8835:48;8900:18;;3595:42:27;8582:342:30;3595:42:27;3663:10;3651:23;;;;:11;;;:23;;;;;;;;3643:57;;;;-1:-1:-1;;;3643:57:27;;;;;;;:::i;:::-;3731:19;;-1:-1:-1;;;;3731:19:27;;;3778:40;;;-1:-1:-1;;;3778:40:27;;;;-1:-1:-1;;;;;3778:38:27;;;;;:40;;;;;3745:5;;3778:40;;;;;;;3745:5;3778:38;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3830:44:27;;-1:-1:-1;;;;;3830:44:27;;;-1:-1:-1;3843:10:27;;-1:-1:-1;3830:44:27;;;;;3537:342;3489:390;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4724:451:27:-;-1:-1:-1;;;;;4821:25:27;;4801:17;4821:25;;;:5;:25;;;;;4861:11;;-1:-1:-1;;;4861:11:27;;;;4853:43;;;;-1:-1:-1;;;4853:43:27;;7735:2:30;4853:43:27;;;7717:21:30;7774:2;7754:18;;;7747:30;-1:-1:-1;;;7793:18:30;;;7786:49;7852:18;;4853:43:27;7533:343:30;4853:43:27;4922:10;4910:23;;;;:11;;;:23;;;;;;;;4902:57;;;;-1:-1:-1;;;4902:57:27;;;;;;;:::i;:::-;5016:10;;:54;;-1:-1:-1;;;5016:54:27;;-1:-1:-1;;;;;;;;;;;5016:54:27;;;6927:25:30;-1:-1:-1;;;;;6988:32:30;;;6968:18;;;6961:60;5016:10:27;;;;:21;;6900:18:30;;5016:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5077:18:27;;;5098:5;5077:18;;;:11;;;:18;;;;;;:26;;-1:-1:-1;;5077:26:27;;;5115:55;5077:18;;5115:55;;;5132:10;;5115:55;;;4795:380;4724:451;;:::o;5416:201::-;-1:-1:-1;;;;;5539:27:27;;5507:4;5539:27;;;:5;:27;;;;;5580:11;;-1:-1:-1;;;5580:11:27;;;;:32;;;;-1:-1:-1;;;;;;5595:17:27;;;;;;:11;;;:17;;;;;;;;5573:39;;;5416:201;;;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;9131:2:30;2161:73:4::1;::::0;::::1;9113:21:30::0;9170:2;9150:18;;;9143:30;9209:34;9189:18;;;9182:62;-1:-1:-1;;;9260:18:30;;;9253:36;9306:19;;2161:73:4::1;8929:402:30::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:16;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;9538:2:30;1414:68:4;;;9520:21:30;;;9557:18;;;9550:30;9616:34;9596:18;;;9589:62;9668:18;;1414:68:4;9336:356:30;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;404:127:30:-;465:10;460:3;456:20;453:1;446:31;496:4;493:1;486:15;520:4;517:1;510:15;536:719;579:5;632:3;625:4;617:6;613:17;609:27;599:55;;650:1;647;640:12;599:55;686:6;673:20;712:18;749:2;745;742:10;739:36;;;755:18;;:::i;:::-;830:2;824:9;798:2;884:13;;-1:-1:-1;;880:22:30;;;904:2;876:31;872:40;860:53;;;928:18;;;948:22;;;925:46;922:72;;;974:18;;:::i;:::-;1014:10;1010:2;1003:22;1049:2;1041:6;1034:18;1095:3;1088:4;1083:2;1075:6;1071:15;1067:26;1064:35;1061:55;;;1112:1;1109;1102:12;1061:55;1176:2;1169:4;1161:6;1157:17;1150:4;1142:6;1138:17;1125:54;1223:1;1216:4;1211:2;1203:6;1199:15;1195:26;1188:37;1243:6;1234:15;;;;;;536:719;;;;:::o;1260:139::-;-1:-1:-1;;;;;1343:31:30;;1333:42;;1323:70;;1389:1;1386;1379:12;1404:118;1490:5;1483:13;1476:21;1469:5;1466:32;1456:60;;1512:1;1509;1502:12;1527:906;1654:6;1662;1670;1678;1686;1739:3;1727:9;1718:7;1714:23;1710:33;1707:53;;;1756:1;1753;1746:12;1707:53;1796:9;1783:23;1825:18;1866:2;1858:6;1855:14;1852:34;;;1882:1;1879;1872:12;1852:34;1905:50;1947:7;1938:6;1927:9;1923:22;1905:50;:::i;:::-;1895:60;;2008:2;1997:9;1993:18;1980:32;1964:48;;2037:2;2027:8;2024:16;2021:36;;;2053:1;2050;2043:12;2021:36;;2076:52;2120:7;2109:8;2098:9;2094:24;2076:52;:::i;:::-;2066:62;;;2175:2;2164:9;2160:18;2147:32;2137:42;;2229:2;2218:9;2214:18;2201:32;2242:39;2275:5;2242:39;:::i;:::-;2300:5;-1:-1:-1;2357:3:30;2342:19;;2329:33;2371:30;2329:33;2371:30;:::i;:::-;2420:7;2410:17;;;1527:906;;;;;;;;:::o;2667:419::-;2750:6;2758;2811:2;2799:9;2790:7;2786:23;2782:32;2779:52;;;2827:1;2824;2817:12;2779:52;2866:9;2853:23;2885:39;2918:5;2885:39;:::i;:::-;2943:5;-1:-1:-1;3000:2:30;2985:18;;2972:32;3013:41;2972:32;3013:41;:::i;:::-;3073:7;3063:17;;;2667:419;;;;;:::o;3283:180::-;3342:6;3395:2;3383:9;3374:7;3370:23;3366:32;3363:52;;;3411:1;3408;3401:12;3363:52;-1:-1:-1;3434:23:30;;3283:180;-1:-1:-1;3283:180:30:o;3468:255::-;3527:6;3580:2;3568:9;3559:7;3555:23;3551:32;3548:52;;;3596:1;3593;3586:12;3548:52;3635:9;3622:23;3654:39;3687:5;3654:39;:::i;:::-;3712:5;3468:255;-1:-1:-1;;;3468:255:30:o;5517:245::-;5584:6;5637:2;5625:9;5616:7;5612:23;5608:32;5605:52;;;5653:1;5650;5643:12;5605:52;5685:9;5679:16;5704:28;5726:5;5704:28;:::i;5767:423::-;5809:3;5847:5;5841:12;5874:6;5869:3;5862:19;5899:1;5909:162;5923:6;5920:1;5917:13;5909:162;;;5985:4;6041:13;;;6037:22;;6031:29;6013:11;;;6009:20;;6002:59;5938:12;5909:162;;;5913:3;6116:1;6109:4;6100:6;6095:3;6091:16;6087:27;6080:38;6179:4;6172:2;6168:7;6163:2;6155:6;6151:15;6147:29;6142:3;6138:39;6134:50;6127:57;;;5767:423;;;;:::o;6195:553::-;6448:3;6437:9;6430:22;6411:4;6475:46;6516:3;6505:9;6501:19;6493:6;6475:46;:::i;:::-;6569:9;6561:6;6557:22;6552:2;6541:9;6537:18;6530:50;6597:33;6623:6;6615;6597:33;:::i;:::-;6661:2;6646:18;;6639:34;;;;-1:-1:-1;;;;;;;6709:32:30;;;;6704:2;6689:18;;;6682:60;6589:41;6195:553;-1:-1:-1;;6195:553:30:o;7032:232::-;7071:3;7092:17;;;7089:140;;7151:10;7146:3;7142:20;7139:1;7132:31;7186:4;7183:1;7176:15;7214:4;7211:1;7204:15;7089:140;-1:-1:-1;7256:1:30;7245:13;;7032:232::o;7269:259::-;7339:6;7392:2;7380:9;7371:7;7367:23;7363:32;7360:52;;;7408:1;7405;7398:12;7360:52;7440:9;7434:16;7459:39;7492:5;7459:39;:::i;7881:345::-;8083:2;8065:21;;;8122:2;8102:18;;;8095:30;-1:-1:-1;;;8156:2:30;8141:18;;8134:51;8217:2;8202:18;;7881:345::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./FantasyERC20.sol\";\nimport \"./RealityETH_ERC20_Factory.sol\";\nimport \"./PredictionMarketV3Factory.sol\";\n\n// openzeppelin ownable contract import\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract PredictionMarketV3Controller is Ownable, ReentrancyGuard {\n  address public immutable PMV3; // PredictionMarketV3 contract\n  address public immutable PMV3Factory; // PredictionMarketFactory contract\n\n  RealityETH_ERC20_Factory public immutable realitioFactory;\n\n  event LandCreated(address indexed user, address indexed token, address indexed tokenToAnswer);\n\n  event LandDisabled(address indexed user, address indexed token);\n\n  event LandEnabled(address indexed user, address indexed token);\n\n  event LandOffsetUnlocked(address indexed user, address indexed token);\n\n  event LandAdminAdded(address indexed user, address indexed token, address indexed admin);\n\n  event LandAdminRemoved(address indexed user, address indexed token, address indexed admin);\n\n  struct Land {\n    FantasyERC20 token;\n    bool active;\n    mapping(address => bool) admins;\n    bool everyoneCanCreateMarkets;\n    IRealityETH_IERC20 realitio;\n  }\n\n  mapping(address => Land) public lands;\n  address[] public landTokens;\n  uint256 public landTokensLength;\n\n  constructor(\n    address _PMV3,\n    address _realitioLibraryAddress,\n    address _PMV3Factory\n  ) {\n    require(_PMV3Factory != address(0), \"PMV3Factory address cannot be 0 address\");\n\n    PMV3 = _PMV3;\n    realitioFactory = new RealityETH_ERC20_Factory(_realitioLibraryAddress);\n    PMV3Factory = _PMV3Factory;\n  }\n\n  // lockAmount is the amount of tokens that the user needs to lock to create a land\n  // by locking the amount the factory will create a fantasyERC20 token and store it in the contract\n  // the user will be the admin of the land\n  function createLand(\n    string memory name,\n    string memory symbol,\n    uint256 tokenAmountToClaim,\n    IERC20 tokenToAnswer,\n    bool everyoneCanCreateMarkets\n  ) external returns (FantasyERC20) {\n\n    require(address(tokenToAnswer) != address(0), \"Token to answer cannot be 0 address\");\n\n    PredictionMarketV3Factory predictionMarketFactory = PredictionMarketV3Factory(PMV3Factory); // FIXME change to interface\n    require(predictionMarketFactory.isPMControllerAdmin(this, msg.sender));\n\n    // create a new fantasyERC20 token\n    FantasyERC20 landToken = new FantasyERC20(name, symbol, tokenAmountToClaim, address(PMV3));\n\n    // adding minting privileges to the PMV3 contract\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), address(PMV3));\n    // adding minting privileges to the msg.sender\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), msg.sender);\n\n    // store the new token in the contract\n    Land storage land = lands[address(landToken)];\n    land.token = landToken;\n    land.active = true;\n    land.admins[msg.sender] = true;\n    land.everyoneCanCreateMarkets = everyoneCanCreateMarkets;\n    landTokens.push(address(landToken));\n    landTokensLength++;\n\n    // creating the realityETH_ERC20 contract\n    if (realitioFactory.deployments(address(tokenToAnswer)) == address(0)) {\n      realitioFactory.createInstance(address(tokenToAnswer));\n    }\n    land.realitio = IRealityETH_IERC20(realitioFactory.deployments(address(tokenToAnswer)));\n\n    emit LandCreated(msg.sender, address(landToken), address(tokenToAnswer));\n\n    return landToken;\n  }\n\n  function disableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land is not active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // disable the land\n    land.active = false;\n\n    // pausing token\n    FantasyERC20(address(landToken)).pause();\n\n    emit LandDisabled(msg.sender, address(landToken));\n  }\n\n  function enableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(!land.active, \"Land is already active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // enable the land\n    land.active = true;\n\n    // unpausing token\n    FantasyERC20(address(landToken)).unpause();\n\n    emit LandEnabled(msg.sender, address(landToken));\n  }\n\n  function addAdminToLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // adding minting privileges to the admin\n    land.token.grantRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = true;\n\n    emit LandAdminAdded(msg.sender, address(landToken), admin);\n  }\n\n  function removeAdminFromLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // removing minting privileges from the admin\n    land.token.revokeRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = false;\n\n    emit LandAdminRemoved(msg.sender, address(landToken), admin);\n  }\n\n  function isAllowedToCreateMarket(IERC20 marketToken, address user) public view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && (land.everyoneCanCreateMarkets || land.admins[user]);\n  }\n\n  function isAllowedToResolveMarket(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isIERC20TokenSocial(IERC20 marketToken) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active;\n  }\n\n  function isLandAdmin(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.admins[user];\n  }\n}\n",
  "sourcePath": "/Users/andregoncalves/sideprojects/polkamarkets/polkamarkets-js/contracts/PredictionMarketV3Controller.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarketV3Controller.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Address": [
        2367
      ],
      "CeilDiv": [
        4901
      ],
      "Context": [
        2389
      ],
      "ERC165": [
        2588
      ],
      "ERC20": [
        1400
      ],
      "ERC20Burnable": [
        1522
      ],
      "ERC20Pausable": [
        1559
      ],
      "ERC20PresetMinterPauser": [
        1756
      ],
      "EnumerableSet": [
        4078
      ],
      "FantasyERC20": [
        4229
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "IERC165": [
        2600
      ],
      "IERC20": [
        1478
      ],
      "IERC20Metadata": [
        1584
      ],
      "IERC20Permit": [
        1620
      ],
      "IFantasyERC20": [
        4262
      ],
      "IPredictionMarketV3Manager": [
        4294
      ],
      "IRealityETH_ERC20": [
        4865
      ],
      "IRealityETH_IERC20": [
        10959
      ],
      "IWETH": [
        4928
      ],
      "Math": [
        3465
      ],
      "Ownable": [
        651
      ],
      "Pausable": [
        759
      ],
      "PredictionMarketV3": [
        9625
      ],
      "PredictionMarketV3Controller": [
        10281
      ],
      "PredictionMarketV3Factory": [
        10945
      ],
      "RealityETH_ERC20_Factory": [
        11098
      ],
      "ReentrancyGuard": [
        813
      ],
      "SafeERC20": [
        2037
      ],
      "Strings": [
        2564
      ]
    },
    "id": 10282,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9627,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:27"
      },
      {
        "absolutePath": "project:/contracts/FantasyERC20.sol",
        "file": "./FantasyERC20.sol",
        "id": 9628,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10282,
        "sourceUnit": 4230,
        "src": "58:28:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RealityETH_ERC20_Factory.sol",
        "file": "./RealityETH_ERC20_Factory.sol",
        "id": 9629,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10282,
        "sourceUnit": 11099,
        "src": "87:40:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PredictionMarketV3Factory.sol",
        "file": "./PredictionMarketV3Factory.sol",
        "id": 9630,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10282,
        "sourceUnit": 10946,
        "src": "128:41:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9631,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10282,
        "sourceUnit": 652,
        "src": "211:52:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 9632,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10282,
        "sourceUnit": 814,
        "src": "264:62:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9633,
              "name": "Ownable",
              "nameLocations": [
                "369:7:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "369:7:27"
            },
            "id": 9634,
            "nodeType": "InheritanceSpecifier",
            "src": "369:7:27"
          },
          {
            "baseName": {
              "id": 9635,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "378:15:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 813,
              "src": "378:15:27"
            },
            "id": 9636,
            "nodeType": "InheritanceSpecifier",
            "src": "378:15:27"
          }
        ],
        "canonicalName": "PredictionMarketV3Controller",
        "contractDependencies": [
          4229,
          11098
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10281,
        "linearizedBaseContracts": [
          10281,
          813,
          651,
          2389
        ],
        "name": "PredictionMarketV3Controller",
        "nameLocation": "337:28:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1cbe8a65",
            "id": 9638,
            "mutability": "immutable",
            "name": "PMV3",
            "nameLocation": "423:4:27",
            "nodeType": "VariableDeclaration",
            "scope": 10281,
            "src": "398:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9637,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "398:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c27c26c",
            "id": 9640,
            "mutability": "immutable",
            "name": "PMV3Factory",
            "nameLocation": "487:11:27",
            "nodeType": "VariableDeclaration",
            "scope": 10281,
            "src": "462:36:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9639,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e3dd8ba",
            "id": 9643,
            "mutability": "immutable",
            "name": "realitioFactory",
            "nameLocation": "581:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 10281,
            "src": "539:57:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
              "typeString": "contract RealityETH_ERC20_Factory"
            },
            "typeName": {
              "id": 9642,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9641,
                "name": "RealityETH_ERC20_Factory",
                "nameLocations": [
                  "539:24:27"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11098,
                "src": "539:24:27"
              },
              "referencedDeclaration": 11098,
              "src": "539:24:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                "typeString": "contract RealityETH_ERC20_Factory"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03",
            "id": 9651,
            "name": "LandCreated",
            "nameLocation": "607:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9645,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "635:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "619:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9647,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "657:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "641:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9649,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "680:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "664:29:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:76:27"
            },
            "src": "601:94:27"
          },
          {
            "anonymous": false,
            "eventSelector": "8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc4",
            "id": 9657,
            "name": "LandDisabled",
            "nameLocation": "705:12:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9653,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "734:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9657,
                  "src": "718:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9655,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "756:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9657,
                  "src": "740:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "717:45:27"
            },
            "src": "699:64:27"
          },
          {
            "anonymous": false,
            "eventSelector": "db2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f650",
            "id": 9663,
            "name": "LandEnabled",
            "nameLocation": "773:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9659,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "801:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9663,
                  "src": "785:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9661,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "823:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9663,
                  "src": "807:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:45:27"
            },
            "src": "767:63:27"
          },
          {
            "anonymous": false,
            "eventSelector": "d4f6618e5a71236611ad6e76f5eb1b23884c77efbb410f3beedada00549181b3",
            "id": 9669,
            "name": "LandOffsetUnlocked",
            "nameLocation": "840:18:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9665,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "875:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9669,
                  "src": "859:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9667,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "897:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9669,
                  "src": "881:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "858:45:27"
            },
            "src": "834:70:27"
          },
          {
            "anonymous": false,
            "eventSelector": "b8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68",
            "id": 9677,
            "name": "LandAdminAdded",
            "nameLocation": "914:14:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9671,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "945:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9677,
                  "src": "929:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9673,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "967:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9677,
                  "src": "951:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9675,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "990:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9677,
                  "src": "974:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "928:68:27"
            },
            "src": "908:89:27"
          },
          {
            "anonymous": false,
            "eventSelector": "5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560",
            "id": 9685,
            "name": "LandAdminRemoved",
            "nameLocation": "1007:16:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9679,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1040:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9685,
                  "src": "1024:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9681,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1062:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9685,
                  "src": "1046:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9683,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1085:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9685,
                  "src": "1069:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:68:27"
            },
            "src": "1001:91:27"
          },
          {
            "canonicalName": "PredictionMarketV3Controller.Land",
            "id": 9700,
            "members": [
              {
                "constant": false,
                "id": 9688,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1127:5:27",
                "nodeType": "VariableDeclaration",
                "scope": 9700,
                "src": "1114:18:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                  "typeString": "contract FantasyERC20"
                },
                "typeName": {
                  "id": 9687,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9686,
                    "name": "FantasyERC20",
                    "nameLocations": [
                      "1114:12:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4229,
                    "src": "1114:12:27"
                  },
                  "referencedDeclaration": 4229,
                  "src": "1114:12:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9690,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1143:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 9700,
                "src": "1138:11:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9689,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1138:4:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9694,
                "mutability": "mutable",
                "name": "admins",
                "nameLocation": "1180:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 9700,
                "src": "1155:31:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 9693,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 9691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1155:24:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 9692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9696,
                "mutability": "mutable",
                "name": "everyoneCanCreateMarkets",
                "nameLocation": "1197:24:27",
                "nodeType": "VariableDeclaration",
                "scope": 9700,
                "src": "1192:29:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9695,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1192:4:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9699,
                "mutability": "mutable",
                "name": "realitio",
                "nameLocation": "1246:8:27",
                "nodeType": "VariableDeclaration",
                "scope": 9700,
                "src": "1227:27:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10959",
                  "typeString": "contract IRealityETH_IERC20"
                },
                "typeName": {
                  "id": 9698,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9697,
                    "name": "IRealityETH_IERC20",
                    "nameLocations": [
                      "1227:18:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10959,
                    "src": "1227:18:27"
                  },
                  "referencedDeclaration": 10959,
                  "src": "1227:18:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10959",
                    "typeString": "contract IRealityETH_IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Land",
            "nameLocation": "1103:4:27",
            "nodeType": "StructDefinition",
            "scope": 10281,
            "src": "1096:163:27",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33b22760",
            "id": 9705,
            "mutability": "mutable",
            "name": "lands",
            "nameLocation": "1295:5:27",
            "nodeType": "VariableDeclaration",
            "scope": 10281,
            "src": "1263:37:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
              "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
            },
            "typeName": {
              "id": 9704,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9701,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1271:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1263:24:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9703,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9702,
                  "name": "Land",
                  "nameLocations": [
                    "1282:4:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9700,
                  "src": "1282:4:27"
                },
                "referencedDeclaration": 9700,
                "src": "1282:4:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                  "typeString": "struct PredictionMarketV3Controller.Land"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "30ccd17a",
            "id": 9708,
            "mutability": "mutable",
            "name": "landTokens",
            "nameLocation": "1321:10:27",
            "nodeType": "VariableDeclaration",
            "scope": 10281,
            "src": "1304:27:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9706,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1304:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9707,
              "nodeType": "ArrayTypeName",
              "src": "1304:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1311758b",
            "id": 9710,
            "mutability": "mutable",
            "name": "landTokensLength",
            "nameLocation": "1350:16:27",
            "nodeType": "VariableDeclaration",
            "scope": 10281,
            "src": "1335:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9709,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1335:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9745,
              "nodeType": "Block",
              "src": "1469:217:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9720,
                          "name": "_PMV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9716,
                          "src": "1483:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1507:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1499:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9721,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1499:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1499:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1483:26:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f7420626520302061646472657373",
                        "id": 9726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1511:41:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        },
                        "value": "PMV3Factory address cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        }
                      ],
                      "id": 9719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1475:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1475:78:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9728,
                  "nodeType": "ExpressionStatement",
                  "src": "1475:78:27"
                },
                {
                  "expression": {
                    "id": 9731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9729,
                      "name": "PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9638,
                      "src": "1560:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9730,
                      "name": "_PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9712,
                      "src": "1567:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1560:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9732,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:12:27"
                },
                {
                  "expression": {
                    "id": 9739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9733,
                      "name": "realitioFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9643,
                      "src": "1578:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9737,
                          "name": "_realitioLibraryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9714,
                          "src": "1625:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1596:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_RealityETH_ERC20_Factory_$11098_$",
                          "typeString": "function (address) returns (contract RealityETH_ERC20_Factory)"
                        },
                        "typeName": {
                          "id": 9735,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9734,
                            "name": "RealityETH_ERC20_Factory",
                            "nameLocations": [
                              "1600:24:27"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11098,
                            "src": "1600:24:27"
                          },
                          "referencedDeclaration": 11098,
                          "src": "1600:24:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        }
                      },
                      "id": 9738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1596:53:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "src": "1578:71:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                      "typeString": "contract RealityETH_ERC20_Factory"
                    }
                  },
                  "id": 9740,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:71:27"
                },
                {
                  "expression": {
                    "id": 9743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9741,
                      "name": "PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9640,
                      "src": "1655:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9742,
                      "name": "_PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9716,
                      "src": "1669:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1655:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9744,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:26:27"
                }
              ]
            },
            "id": 9746,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9712,
                  "mutability": "mutable",
                  "name": "_PMV3",
                  "nameLocation": "1396:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9746,
                  "src": "1388:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9714,
                  "mutability": "mutable",
                  "name": "_realitioLibraryAddress",
                  "nameLocation": "1415:23:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9746,
                  "src": "1407:31:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9716,
                  "mutability": "mutable",
                  "name": "_PMV3Factory",
                  "nameLocation": "1452:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9746,
                  "src": "1444:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:86:27"
            },
            "returnParameters": {
              "id": 9718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:0:27"
            },
            "scope": 10281,
            "src": "1371:315:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9930,
              "nodeType": "Block",
              "src": "2119:1366:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9766,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9755,
                              "src": "2142:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2134:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9764,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2134:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2134:22:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2168:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2160:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9768,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2160:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2160:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2134:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472657373",
                        "id": 9773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2172:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        },
                        "value": "Token to answer cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        }
                      ],
                      "id": 9763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2126:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2126:84:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9775,
                  "nodeType": "ExpressionStatement",
                  "src": "2126:84:27"
                },
                {
                  "assignments": [
                    9778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9778,
                      "mutability": "mutable",
                      "name": "predictionMarketFactory",
                      "nameLocation": "2243:23:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9930,
                      "src": "2217:49:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10945",
                        "typeString": "contract PredictionMarketV3Factory"
                      },
                      "typeName": {
                        "id": 9777,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9776,
                          "name": "PredictionMarketV3Factory",
                          "nameLocations": [
                            "2217:25:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10945,
                          "src": "2217:25:27"
                        },
                        "referencedDeclaration": 10945,
                        "src": "2217:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10945",
                          "typeString": "contract PredictionMarketV3Factory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9782,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9780,
                        "name": "PMV3Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9640,
                        "src": "2295:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9779,
                      "name": "PredictionMarketV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10945,
                      "src": "2269:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PredictionMarketV3Factory_$10945_$",
                        "typeString": "type(contract PredictionMarketV3Factory)"
                      }
                    },
                    "id": 9781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2269:38:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10945",
                      "typeString": "contract PredictionMarketV3Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2217:90:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9786,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2394:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10281",
                              "typeString": "contract PredictionMarketV3Controller"
                            }
                          },
                          {
                            "expression": {
                              "id": 9787,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2400:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2404:6:27",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2400:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10281",
                              "typeString": "contract PredictionMarketV3Controller"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9784,
                            "name": "predictionMarketFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9778,
                            "src": "2350:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10945",
                              "typeString": "contract PredictionMarketV3Factory"
                            }
                          },
                          "id": 9785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2374:19:27",
                          "memberName": "isPMControllerAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10944,
                          "src": "2350:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_PredictionMarketV3Controller_$10281_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (contract PredictionMarketV3Controller,address) view external returns (bool)"
                          }
                        },
                        "id": 9789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2350:61:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2342:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:70:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9791,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:70:27"
                },
                {
                  "assignments": [
                    9794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9794,
                      "mutability": "mutable",
                      "name": "landToken",
                      "nameLocation": "2471:9:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9930,
                      "src": "2458:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      },
                      "typeName": {
                        "id": 9793,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9792,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2458:12:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2458:12:27"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2458:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9806,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9798,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9748,
                        "src": "2500:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9799,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9750,
                        "src": "2506:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9800,
                        "name": "tokenAmountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9752,
                        "src": "2514:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9803,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9638,
                            "src": "2542:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2534:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9801,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2534:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2534:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2483:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_FantasyERC20_$4229_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract FantasyERC20)"
                      },
                      "typeName": {
                        "id": 9796,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9795,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2487:12:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2487:12:27"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2487:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      }
                    },
                    "id": 9805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:65:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2458:90:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2639:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9810,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2629:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2629:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9815,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9638,
                            "src": "2663:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2655:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2655:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2655:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9807,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9794,
                        "src": "2609:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2619:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2609:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:60:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9818,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:60:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2756:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9822,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2746:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2746:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 9825,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2772:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2776:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2772:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9819,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9794,
                        "src": "2726:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2736:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2726:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2726:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9828,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:57:27"
                },
                {
                  "assignments": [
                    9831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9831,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "2846:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9930,
                      "src": "2833:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9830,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9829,
                          "name": "Land",
                          "nameLocations": [
                            "2833:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "2833:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "2833:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9838,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9832,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "2853:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9837,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9835,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9794,
                          "src": "2867:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        ],
                        "id": 9834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2859:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2859:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2859:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2853:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2833:45:27"
                },
                {
                  "expression": {
                    "id": 9843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9839,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9831,
                        "src": "2884:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9841,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2889:5:27",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9688,
                      "src": "2884:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9842,
                      "name": "landToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9794,
                      "src": "2897:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "src": "2884:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "id": 9844,
                  "nodeType": "ExpressionStatement",
                  "src": "2884:22:27"
                },
                {
                  "expression": {
                    "id": 9849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9845,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9831,
                        "src": "2912:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9847,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2917:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "2912:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2926:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2912:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9850,
                  "nodeType": "ExpressionStatement",
                  "src": "2912:18:27"
                },
                {
                  "expression": {
                    "id": 9858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 9851,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9831,
                          "src": "2936:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 9855,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2941:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "2936:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9856,
                      "indexExpression": {
                        "expression": {
                          "id": 9853,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2948:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2952:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2948:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2936:23:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2962:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2936:30:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9859,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:30:27"
                },
                {
                  "expression": {
                    "id": 9864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9860,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9831,
                        "src": "2972:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9862,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2977:24:27",
                      "memberName": "everyoneCanCreateMarkets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9696,
                      "src": "2972:29:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9863,
                      "name": "everyoneCanCreateMarkets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9757,
                      "src": "3004:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2972:56:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9865,
                  "nodeType": "ExpressionStatement",
                  "src": "2972:56:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9871,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9794,
                            "src": "3058:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3050:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3050:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3050:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9866,
                        "name": "landTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9708,
                        "src": "3034:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3045:4:27",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3034:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 9873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:35:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9874,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:35:27"
                },
                {
                  "expression": {
                    "id": 9876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3075:18:27",
                    "subExpression": {
                      "id": 9875,
                      "name": "landTokensLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9710,
                      "src": "3075:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9877,
                  "nodeType": "ExpressionStatement",
                  "src": "3075:18:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9882,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9755,
                              "src": "3186:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3178:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9880,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3178:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3178:22:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 9878,
                          "name": "realitioFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9643,
                          "src": "3150:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        },
                        "id": 9879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3166:11:27",
                        "memberName": "deployments",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10965,
                        "src": "3150:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) view external returns (address)"
                        }
                      },
                      "id": 9884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3150:51:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3213:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3205:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9885,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3205:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3205:10:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3150:65:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9900,
                  "nodeType": "IfStatement",
                  "src": "3146:140:27",
                  "trueBody": {
                    "id": 9899,
                    "nodeType": "Block",
                    "src": "3217:69:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9895,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9755,
                                  "src": "3264:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3256:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9893,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3256:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3256:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9890,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9643,
                              "src": "3225:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3241:14:27",
                            "memberName": "createInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11097,
                            "src": "3225:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 9897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3225:54:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9898,
                        "nodeType": "ExpressionStatement",
                        "src": "3225:54:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9901,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9831,
                        "src": "3291:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9903,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3296:8:27",
                      "memberName": "realitio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9699,
                      "src": "3291:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10959",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9909,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9755,
                                  "src": "3362:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3354:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9907,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3354:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3354:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9905,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9643,
                              "src": "3326:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11098",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3342:11:27",
                            "memberName": "deployments",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10965,
                            "src": "3326:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 9911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3326:51:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9904,
                        "name": "IRealityETH_IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10959,
                        "src": "3307:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRealityETH_IERC20_$10959_$",
                          "typeString": "type(contract IRealityETH_IERC20)"
                        }
                      },
                      "id": 9912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3307:71:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10959",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "src": "3291:87:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10959",
                      "typeString": "contract IRealityETH_IERC20"
                    }
                  },
                  "id": 9914,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:87:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9916,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3402:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3406:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3402:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9920,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9794,
                            "src": "3422:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3414:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9918,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3414:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3414:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9924,
                            "name": "tokenToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9755,
                            "src": "3442:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3434:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3434:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3434:22:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9915,
                      "name": "LandCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9651,
                      "src": "3390:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 9926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:67:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9927,
                  "nodeType": "EmitStatement",
                  "src": "3385:72:27"
                },
                {
                  "expression": {
                    "id": 9928,
                    "name": "landToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9794,
                    "src": "3471:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "functionReturnParameters": 9762,
                  "id": 9929,
                  "nodeType": "Return",
                  "src": "3464:16:27"
                }
              ]
            },
            "functionSelector": "1b4d534e",
            "id": 9931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLand",
            "nameLocation": "1929:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9748,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1959:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "1945:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9750,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1983:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "1969:20:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9749,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9752,
                  "mutability": "mutable",
                  "name": "tokenAmountToClaim",
                  "nameLocation": "2003:18:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "1995:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9755,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "2034:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "2027:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9754,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9753,
                      "name": "IERC20",
                      "nameLocations": [
                        "2027:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "2027:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "2027:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9757,
                  "mutability": "mutable",
                  "name": "everyoneCanCreateMarkets",
                  "nameLocation": "2058:24:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "2053:29:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9756,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1939:147:27"
            },
            "returnParameters": {
              "id": 9762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9761,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9931,
                  "src": "2105:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  },
                  "typeName": {
                    "id": 9760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9759,
                      "name": "FantasyERC20",
                      "nameLocations": [
                        "2105:12:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4229,
                      "src": "2105:12:27"
                    },
                    "referencedDeclaration": 4229,
                    "src": "2105:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2104:14:27"
            },
            "scope": 10281,
            "src": "1920:1565:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9986,
              "nodeType": "Block",
              "src": "3537:342:27",
              "statements": [
                {
                  "assignments": [
                    9939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9939,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3556:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9986,
                      "src": "3543:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9938,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9937,
                          "name": "Land",
                          "nameLocations": [
                            "3543:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "3543:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "3543:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9946,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9940,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "3563:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9945,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9943,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9934,
                          "src": "3577:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 9942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3569:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3569:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3569:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3563:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9948,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9939,
                          "src": "3603:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 9949,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3608:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9690,
                        "src": "3603:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "id": 9950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3616:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        },
                        "value": "Land is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        }
                      ],
                      "id": 9947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3595:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3595:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9952,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:42:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 9954,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9939,
                            "src": "3651:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 9955,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3656:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "3651:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 9958,
                        "indexExpression": {
                          "expression": {
                            "id": 9956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3663:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3667:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3663:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3651:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 9959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3676:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 9953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3643:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9961,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:57:27"
                },
                {
                  "expression": {
                    "id": 9966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9962,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9939,
                        "src": "3731:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9964,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3736:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "3731:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 9965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3745:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3731:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9967,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:19:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9971,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9934,
                                "src": "3799:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 9970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3791:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9969,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3791:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3791:18:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9968,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "3778:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 9973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3778:32:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3811:5:27",
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "3778:38:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3778:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9976,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9978,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3843:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3847:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3843:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9982,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9934,
                            "src": "3863:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3855:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9980,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3855:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3855:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9977,
                      "name": "LandDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9657,
                      "src": "3830:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3830:44:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9985,
                  "nodeType": "EmitStatement",
                  "src": "3825:49:27"
                }
              ]
            },
            "functionSelector": "70e92078",
            "id": 9987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableLand",
            "nameLocation": "3498:11:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9934,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3517:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9987,
                  "src": "3510:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9933,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9932,
                      "name": "IERC20",
                      "nameLocations": [
                        "3510:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3510:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3510:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:18:27"
            },
            "returnParameters": {
              "id": 9936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3537:0:27"
            },
            "scope": 10281,
            "src": "3489:390:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10043,
              "nodeType": "Block",
              "src": "3930:348:27",
              "statements": [
                {
                  "assignments": [
                    9995
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9995,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3949:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10043,
                      "src": "3936:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9994,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9993,
                          "name": "Land",
                          "nameLocations": [
                            "3936:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "3936:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "3936:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10002,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9996,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "3956:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10001,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9999,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9990,
                          "src": "3970:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 9998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3962:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9997,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3962:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3956:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3936:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3996:12:27",
                        "subExpression": {
                          "expression": {
                            "id": 10004,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9995,
                            "src": "3997:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10005,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4002:6:27",
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9690,
                          "src": "3997:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "id": 10007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4010:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        },
                        "value": "Land is already active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        }
                      ],
                      "id": 10003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3988:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3988:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10009,
                  "nodeType": "ExpressionStatement",
                  "src": "3988:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10011,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9995,
                            "src": "4049:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10012,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4054:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "4049:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10015,
                        "indexExpression": {
                          "expression": {
                            "id": 10013,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4061:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4065:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4061:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4049:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4074:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4041:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4041:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10018,
                  "nodeType": "ExpressionStatement",
                  "src": "4041:57:27"
                },
                {
                  "expression": {
                    "id": 10023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10019,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9995,
                        "src": "4128:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4133:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "4128:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4142:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4128:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10024,
                  "nodeType": "ExpressionStatement",
                  "src": "4128:18:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10028,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9990,
                                "src": "4197:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4189:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10026,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4189:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4189:18:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10025,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "4176:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 10030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4176:32:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4209:7:27",
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "4176:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4176:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10033,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:42:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10035,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4242:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4246:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4242:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10039,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9990,
                            "src": "4262:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4254:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4254:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4254:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10034,
                      "name": "LandEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9663,
                      "src": "4230:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4230:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10042,
                  "nodeType": "EmitStatement",
                  "src": "4225:48:27"
                }
              ]
            },
            "functionSelector": "5d341ae5",
            "id": 10044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableLand",
            "nameLocation": "3892:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9990,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3910:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10044,
                  "src": "3903:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9989,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9988,
                      "name": "IERC20",
                      "nameLocations": [
                        "3903:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3903:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3903:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3902:18:27"
            },
            "returnParameters": {
              "id": 9992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3930:0:27"
            },
            "scope": 10281,
            "src": "3883:395:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10106,
              "nodeType": "Block",
              "src": "4348:372:27",
              "statements": [
                {
                  "assignments": [
                    10054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10054,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4367:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10106,
                      "src": "4354:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10053,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10052,
                          "name": "Land",
                          "nameLocations": [
                            "4354:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "4354:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "4354:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10061,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10055,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "4374:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10060,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10058,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10047,
                          "src": "4388:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4380:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4380:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4380:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4374:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4354:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10063,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10054,
                          "src": "4414:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10064,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4419:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9690,
                        "src": "4414:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4427:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4406:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10067,
                  "nodeType": "ExpressionStatement",
                  "src": "4406:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10069,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10054,
                            "src": "4463:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10070,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4468:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "4463:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10073,
                        "indexExpression": {
                          "expression": {
                            "id": 10071,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4475:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4479:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4475:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4463:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4488:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4455:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4455:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10076,
                  "nodeType": "ExpressionStatement",
                  "src": "4455:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4596:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10082,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "4586:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4586:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10085,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10049,
                        "src": "4612:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10077,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10054,
                          "src": "4565:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4570:5:27",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9688,
                        "src": "4565:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4576:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "4565:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4565:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10087,
                  "nodeType": "ExpressionStatement",
                  "src": "4565:53:27"
                },
                {
                  "expression": {
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10088,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10054,
                          "src": "4625:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10091,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4630:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "4625:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10092,
                      "indexExpression": {
                        "id": 10090,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10049,
                        "src": "4637:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4625:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4646:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4625:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10095,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:25:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10097,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4677:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4681:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4677:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10101,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "4697:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4689:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10099,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4689:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4689:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10103,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10049,
                        "src": "4709:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10096,
                      "name": "LandAdminAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9677,
                      "src": "4662:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4662:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10105,
                  "nodeType": "EmitStatement",
                  "src": "4657:58:27"
                }
              ]
            },
            "functionSelector": "4fe62a5b",
            "id": 10107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAdminToLand",
            "nameLocation": "4291:14:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10047,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4313:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "4306:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10046,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10045,
                      "name": "IERC20",
                      "nameLocations": [
                        "4306:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4306:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4306:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10049,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4332:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "4324:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4324:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4305:33:27"
            },
            "returnParameters": {
              "id": 10051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:0:27"
            },
            "scope": 10281,
            "src": "4282:438:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10169,
              "nodeType": "Block",
              "src": "4795:380:27",
              "statements": [
                {
                  "assignments": [
                    10117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10117,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4814:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10169,
                      "src": "4801:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10116,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10115,
                          "name": "Land",
                          "nameLocations": [
                            "4801:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "4801:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "4801:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10124,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10118,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "4821:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10123,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10121,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10110,
                          "src": "4835:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4827:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10119,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4827:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4827:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4821:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4801:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10126,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10117,
                          "src": "4861:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10127,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4866:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9690,
                        "src": "4861:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4874:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4853:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4853:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10130,
                  "nodeType": "ExpressionStatement",
                  "src": "4853:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10132,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10117,
                            "src": "4910:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4915:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "4910:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10136,
                        "indexExpression": {
                          "expression": {
                            "id": 10134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4922:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4926:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4922:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4910:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4935:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4902:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4902:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10139,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5048:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10145,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "5038:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5038:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10148,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "5064:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10140,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10117,
                          "src": "5016:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5021:5:27",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9688,
                        "src": "5016:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5027:10:27",
                      "memberName": "revokeRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "5016:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5016:54:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10150,
                  "nodeType": "ExpressionStatement",
                  "src": "5016:54:27"
                },
                {
                  "expression": {
                    "id": 10157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10151,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10117,
                          "src": "5077:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10154,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5082:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "5077:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10155,
                      "indexExpression": {
                        "id": 10153,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "5089:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5077:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5098:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5077:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10158,
                  "nodeType": "ExpressionStatement",
                  "src": "5077:26:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5132:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5136:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5132:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10164,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10110,
                            "src": "5152:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5144:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5144:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5144:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10166,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "5164:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10159,
                      "name": "LandAdminRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9685,
                      "src": "5115:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5115:55:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10168,
                  "nodeType": "EmitStatement",
                  "src": "5110:60:27"
                }
              ]
            },
            "functionSelector": "86b5c5b1",
            "id": 10170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdminFromLand",
            "nameLocation": "4733:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10110,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4760:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10170,
                  "src": "4753:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10108,
                      "name": "IERC20",
                      "nameLocations": [
                        "4753:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4753:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4753:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10112,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4779:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10170,
                  "src": "4771:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4771:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4752:33:27"
            },
            "returnParameters": {
              "id": 10114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4795:0:27"
            },
            "scope": 10281,
            "src": "4724:451:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10202,
              "nodeType": "Block",
              "src": "5273:139:27",
              "statements": [
                {
                  "assignments": [
                    10182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10182,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5292:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10202,
                      "src": "5279:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10181,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10180,
                          "name": "Land",
                          "nameLocations": [
                            "5279:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "5279:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "5279:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10189,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10183,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "5299:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10188,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10186,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10173,
                          "src": "5313:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5305:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5305:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5305:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5299:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5279:47:27"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10190,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10182,
                        "src": "5340:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5345:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "5340:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10192,
                              "name": "land",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10182,
                              "src": "5356:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                                "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                              }
                            },
                            "id": 10193,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5361:24:27",
                            "memberName": "everyoneCanCreateMarkets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9696,
                            "src": "5356:29:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 10194,
                                "name": "land",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10182,
                                "src": "5389:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                                  "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                                }
                              },
                              "id": 10195,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5394:6:27",
                              "memberName": "admins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9694,
                              "src": "5389:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 10197,
                            "indexExpression": {
                              "id": 10196,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10175,
                              "src": "5401:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5389:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5356:50:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10199,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5355:52:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5340:67:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10179,
                  "id": 10201,
                  "nodeType": "Return",
                  "src": "5333:74:27"
                }
              ]
            },
            "functionSelector": "25c72059",
            "id": 10203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToCreateMarket",
            "nameLocation": "5188:23:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10173,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5219:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "5212:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10172,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10171,
                      "name": "IERC20",
                      "nameLocations": [
                        "5212:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5212:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5212:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10175,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5240:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "5232:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5232:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5211:34:27"
            },
            "returnParameters": {
              "id": 10179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "5267:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10177,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5267:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5266:6:27"
            },
            "scope": 10281,
            "src": "5179:233:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10231,
              "nodeType": "Block",
              "src": "5513:104:27",
              "statements": [
                {
                  "assignments": [
                    10215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10215,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5532:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10231,
                      "src": "5519:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10213,
                          "name": "Land",
                          "nameLocations": [
                            "5519:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "5519:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "5519:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10222,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10216,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "5539:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10221,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10219,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10206,
                          "src": "5553:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5545:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5545:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5545:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5539:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5519:47:27"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10223,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10215,
                        "src": "5580:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10224,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5585:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "5580:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 10225,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10215,
                          "src": "5595:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5600:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "5595:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10228,
                      "indexExpression": {
                        "id": 10227,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10208,
                        "src": "5607:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5595:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5580:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10212,
                  "id": 10230,
                  "nodeType": "Return",
                  "src": "5573:39:27"
                }
              ]
            },
            "functionSelector": "d1aeb5c2",
            "id": 10232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToResolveMarket",
            "nameLocation": "5425:24:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10206,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5457:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10232,
                  "src": "5450:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10204,
                      "name": "IERC20",
                      "nameLocations": [
                        "5450:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5450:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5450:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10208,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5478:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10232,
                  "src": "5470:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5470:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5449:34:27"
            },
            "returnParameters": {
              "id": 10212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10232,
                  "src": "5507:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5507:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5506:6:27"
            },
            "scope": 10281,
            "src": "5416:201:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10253,
              "nodeType": "Block",
              "src": "5699:83:27",
              "statements": [
                {
                  "assignments": [
                    10242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10242,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5718:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10253,
                      "src": "5705:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10241,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10240,
                          "name": "Land",
                          "nameLocations": [
                            "5705:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "5705:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "5705:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10249,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10243,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "5725:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10248,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10246,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10235,
                          "src": "5739:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5731:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5731:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5731:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5725:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5705:47:27"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 10250,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10242,
                      "src": "5766:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                      }
                    },
                    "id": 10251,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5771:6:27",
                    "memberName": "active",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9690,
                    "src": "5766:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10239,
                  "id": 10252,
                  "nodeType": "Return",
                  "src": "5759:18:27"
                }
              ]
            },
            "functionSelector": "d13acee1",
            "id": 10254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIERC20TokenSocial",
            "nameLocation": "5630:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10235,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5657:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10254,
                  "src": "5650:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10234,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10233,
                      "name": "IERC20",
                      "nameLocations": [
                        "5650:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5650:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5650:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5649:20:27"
            },
            "returnParameters": {
              "id": 10239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10254,
                  "src": "5693:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5693:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5692:6:27"
            },
            "scope": 10281,
            "src": "5621:161:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10279,
              "nodeType": "Block",
              "src": "5870:89:27",
              "statements": [
                {
                  "assignments": [
                    10266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10266,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5889:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10279,
                      "src": "5876:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10265,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10264,
                          "name": "Land",
                          "nameLocations": [
                            "5876:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9700,
                          "src": "5876:4:27"
                        },
                        "referencedDeclaration": 9700,
                        "src": "5876:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10273,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10267,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9705,
                      "src": "5896:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9700_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10272,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10270,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10257,
                          "src": "5910:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5902:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5902:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5902:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5896:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9700_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5876:47:27"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 10274,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10266,
                        "src": "5937:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9700_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5942:6:27",
                      "memberName": "admins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9694,
                      "src": "5937:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 10277,
                    "indexExpression": {
                      "id": 10276,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10259,
                      "src": "5949:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5937:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10263,
                  "id": 10278,
                  "nodeType": "Return",
                  "src": "5930:24:27"
                }
              ]
            },
            "functionSelector": "791e0519",
            "id": 10280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLandAdmin",
            "nameLocation": "5795:11:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10257,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5814:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10280,
                  "src": "5807:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10255,
                      "name": "IERC20",
                      "nameLocations": [
                        "5807:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5807:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5807:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10259,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5835:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10280,
                  "src": "5827:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5827:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5806:34:27"
            },
            "returnParameters": {
              "id": 10263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10280,
                  "src": "5864:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10261,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5864:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5863:6:27"
            },
            "scope": 10281,
            "src": "5786:173:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10282,
        "src": "328:5633:27",
        "usedErrors": []
      }
    ],
    "src": "32:5930:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2024-05-30T17:52:05.182Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}