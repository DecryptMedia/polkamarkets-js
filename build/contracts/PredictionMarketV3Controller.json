{
  "contractName": "PredictionMarketV3Controller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PMV3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_realitioLibraryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_PMV3Factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenToAnswer",
          "type": "address"
        }
      ],
      "name": "LandCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandOffsetUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PMV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PMV3Factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lands",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "contract IRealityETH_IERC20",
          "name": "realitio",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realitioFactory",
      "outputs": [
        {
          "internalType": "contract RealityETH_ERC20_Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountToClaim",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAnswer",
          "type": "address"
        }
      ],
      "name": "createLand",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "disableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "enableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdminToLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdminFromLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToCreateMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToResolveMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        }
      ],
      "name": "isIERC20TokenSocial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isLandAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PMV3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_realitioLibraryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_PMV3Factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenToAnswer\",\"type\":\"address\"}],\"name\":\"LandCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandOffsetUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PMV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PMV3Factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdminToLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountToClaim\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAnswer\",\"type\":\"address\"}],\"name\":\"createLand\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"disableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"enableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToCreateMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToResolveMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"}],\"name\":\"isIERC20TokenSocial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isLandAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lands\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"contract IRealityETH_IERC20\",\"name\":\"realitio\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realitioFactory\",\"outputs\":[{\"internalType\":\"contract RealityETH_ERC20_Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdminFromLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarketV3Controller.sol\":\"PredictionMarketV3Controller\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x6eabd0f1326073b2aaf4298cb3b15b7cfc96966586dbaca2f126409f4fd11688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b67ef6927ae0b5afd4faf7cf6bf6bce6ad0ebe3b07bd75ae24891ecd8ddf2c4\",\"dweb:/ipfs/QmfLFWECbFNfb9Vh1ftmj1E6KmHa8wJkpzaWgBvujo56Wp\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"project:/contracts/FantasyERC20.sol\":{\"keccak256\":\"0x5208602dbeaa239b13143c24e61abce91fb1dcb2e4c6627d462187ea7dee436d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8da09a6f9e6e0464d2e076559d2de192689f958f36c4711fd23be8c215498f90\",\"dweb:/ipfs/QmaxR3TpCfgr1UY2MiR7oagL27GgsTMzUFfQJtjswdQBQh\"]},\"project:/contracts/IFantasyERC20.sol\":{\"keccak256\":\"0x6cfe7a55d64523751b210019be02c0c403b106bc44affb5fafaeb87183ceb7db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71d049ce4070f83f4067ebcb518e5d51a5f00712d63b7ba18fb6cd2e07a18dca\",\"dweb:/ipfs/QmeANsJycg6SE5k3TYHuJctVfNXXZwrQZr6RNYUAPAM2xz\"]},\"project:/contracts/IPredictionMarketV3Manager.sol\":{\"keccak256\":\"0x5b8dca067534f46da015c26afa502d9825d058d4ce40b79c4f0204f8219718c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc04293027364acdf1a362232e6c96cc9ccfd642410a9247323f36d394fcba1d\",\"dweb:/ipfs/QmPL8eLBf26tsAsv9ma8E4HpwKgvbZojmNvCKSd5D4V8H8\"]},\"project:/contracts/IRealityETH_ERC20.sol\":{\"keccak256\":\"0x829f84252e4c06a9563be80b9bd93d4eb875ac865629bc312c20c2fc48a27c67\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4486fd8f19077689309998e39f63e47a6c84ef819c708887460d24cb6748cc98\",\"dweb:/ipfs/QmcFNnjyJfbh885rV7YW3WZfP1xRwHmmoVfGyTZyjhhk7N\"]},\"project:/contracts/PredictionMarketV3.sol\":{\"keccak256\":\"0xe881ae8abdd3f775befe1699dbf02b9172e2c80fef57705931dbe152684ece21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f298a811cc4374eb60a8cb32630a30d345c780f1980bdafdd662373d0ed0b2\",\"dweb:/ipfs/QmQCshFiim6LGaULhSDKieSYarfRGMEUe2Lb2sg4LMdynL\"]},\"project:/contracts/PredictionMarketV3Controller.sol\":{\"keccak256\":\"0xb9f037d9eb3011374e0acb34a9c51384da7b504fae57206c87b815340fc5eca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991d0db9b269bc70f6f63d5990be7657b712ce2ba7e7b96e195c1636f533f037\",\"dweb:/ipfs/QmT5UUTeTKNVFUrNPMSmDiA3z5Y4GhfRjwEv6yFFjiaMMC\"]},\"project:/contracts/PredictionMarketV3Factory.sol\":{\"keccak256\":\"0xe321e67e6fcc28fc714403d26fa7137f32df05d720dae17b5f80403759295809\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c8149fb57a40647e432f1671c45d4c25d9f1ca0dd3acc0efb332be7293d3279\",\"dweb:/ipfs/QmVeQLRaoaiCJUabpePwGYcTtbC3APRJUfDTgZEuPzdZDh\"]},\"project:/contracts/RealityETH_ERC20_Factory.sol\":{\"keccak256\":\"0xfa3c12a43c9d3bb54a90a050a33f8fc9b97cb1cc46c8f9d22a83d3d042131c61\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8e73d6c105df45f7d43fc8b5b86855d6c53ea4cef89ff848d986fbf53d0e2473\",\"dweb:/ipfs/QmSkFHJZX61HZmfw49j28R14u6sXshcPCKVQtwVwUmTx8m\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162003f7d38038062003f7d83398101604081905262000034916200018f565b6200003f3362000114565b600180556001600160a01b038116620000ae5760405162461bcd60e51b815260206004820152602760248201527f504d5633466163746f727920616464726573732063616e6e6f742062652030206044820152666164647265737360c81b606482015260840160405180910390fd5b6001600160a01b0383166080526040518290620000cb9062000164565b6001600160a01b039091168152602001604051809103906000f080158015620000f8573d6000803e3d6000fd5b506001600160a01b0390811660c0521660a05250620001d99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109ef806200358e83390190565b80516001600160a01b03811681146200018a57600080fd5b919050565b600080600060608486031215620001a557600080fd5b620001b08462000172565b9250620001c06020850162000172565b9150620001d06040850162000172565b90509250925092565b60805160a05160c05161335b62000233600039600081816102b101528181610a0c01528181610aaa0152610b280152600081816101380152610760015260008181610196015281816107e9015261086f015261335b6000f3fe60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b114620003375780638da5cb5b146200034e578063d13acee11462000360578063d1aeb5c214620001b8578063f2fde38b146200039657600080fd5b80636e3dd8ba14620002ab57806370e9207814620002d3578063715018a614620002ea578063791e051914620002f457600080fd5b806330ccd17a11620000fc57806330ccd17a14620001e057806333b2276014620001f75780634fe62a5b14620002645780635d341ae5146200027d57806367d73c91146200029457600080fd5b80630c27c26c14620001325780631311758b14620001775780631cbe8a65146200019057806325c7205914620001b8575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001cf620001c936600462000ff8565b620003ad565b60405190151581526020016200016e565b6200015a620001f136600462001036565b62000400565b620002396200020836600462001050565b600260208190526000918252604090912080549101546001600160a01b0380831692600160a01b900460ff16911683565b604080516001600160a01b03948516815292151560208401529216918101919091526060016200016e565b6200027b6200027536600462000ff8565b6200042b565b005b6200027b6200028e36600462001050565b62000599565b6200015a620002a536600462001122565b620006df565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6200027b620002e436600462001050565b62000bf1565b6200027b62000d2c565b620001cf6200030536600462000ff8565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b6200027b6200034836600462000ff8565b62000d44565b6000546001600160a01b03166200015a565b620001cf6200037136600462001050565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b6200027b620003a736600462001050565b62000ea9565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff168015620003f857506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200041157600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff16620004975760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b33600090815260018201602052604090205460ff16620004cb5760405162461bcd60e51b81526004016200048e90620011ab565b8054604051632f2ff15d60e01b81526000805160206200330683398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b1580156200052757600080fd5b505af11580156200053c573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1615620006055760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200048e565b33600090815260018201602052604090205460ff16620006395760405162461bcd60e51b81526004016200048e90620011ab565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b1580156200068c57600080fd5b505af1158015620006a1573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b60006001600160a01b038216620007455760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084016200048e565b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620007b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007d89190620011da565b620007e257600080fd5b60008686867f0000000000000000000000000000000000000000000000000000000000000000604051620008169062000fd4565b62000825949392919062001246565b604051809103906000f08015801562000842573d6000803e3d6000fd5b50604051632f2ff15d60e01b81526000805160206200330683398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620008c057600080fd5b505af1158015620008d5573d6000803e3d6000fd5b5050604051632f2ff15d60e01b81526000805160206200330683398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200093057600080fd5b505af115801562000945573d6000803e3d6000fd5b5050506001600160a01b038216600081815260026020908152604080832080546001600160a81b0319168517600160a01b1781553384526001808201909352908320805460ff19168317905560038054928301815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b0319169093179092556004805492935090620009e58362001291565b909155505060405163316b373960e01b81526001600160a01b0386811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000a56573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a7c9190620012b9565b6001600160a01b03160362000b0957604051633b937bbb60e11b81526001600160a01b0386811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b15801562000aef57600080fd5b505af115801562000b04573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa15801562000b70573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b969190620012b9565b6002820180546001600160a01b0319166001600160a01b039283161790556040518682169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a4509695505050505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000c585760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200048e565b33600090815260018201602052604090205460ff1662000c8c5760405162461bcd60e51b81526004016200048e90620011ab565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000cd957600080fd5b505af115801562000cee573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000d3662000f28565b62000d42600062000f84565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000dac5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200048e565b33600090815260018201602052604090205460ff1662000de05760405162461bcd60e51b81526004016200048e90620011ab565b805460405163d547741f60e01b81526000805160206200330683398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000e3c57600080fd5b505af115801562000e51573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b62000eb362000f28565b6001600160a01b03811662000f1a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200048e565b62000f258162000f84565b50565b6000546001600160a01b0316331462000d425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200048e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61202c80620012da83390190565b6001600160a01b038116811462000f2557600080fd5b600080604083850312156200100c57600080fd5b8235620010198162000fe2565b915060208301356200102b8162000fe2565b809150509250929050565b6000602082840312156200104957600080fd5b5035919050565b6000602082840312156200106357600080fd5b8135620010708162000fe2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200109f57600080fd5b813567ffffffffffffffff80821115620010bd57620010bd62001077565b604051601f8301601f19908116603f01168101908282118183101715620010e857620010e862001077565b816040528381528660208588010111156200110257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156200113957600080fd5b843567ffffffffffffffff808211156200115257600080fd5b62001160888389016200108d565b955060208701359150808211156200117757600080fd5b5062001186878288016200108d565b935050604085013591506060850135620011a08162000fe2565b939692955090935050565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b604082015260600190565b600060208284031215620011ed57600080fd5b815180151581146200107057600080fd5b6000815180845260005b81811015620012265760208185018101518683018201520162001208565b506000602082860101526020601f19601f83011685010191505092915050565b6080815260006200125b6080830187620011fe565b82810360208401526200126f8187620011fe565b604084019590955250506001600160a01b039190911660609091015292915050565b600060018201620012b257634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215620012cc57600080fd5b8151620010708162000fe256fe60806040523480156200001157600080fd5b506040516200202c3803806200202c833981016040819052620000349162000321565b83838181600562000046838262000444565b50600662000055828262000444565b50506007805460ff19169055506200006f600033620000f7565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f7565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f7565b5050600a91909155600980546001600160a01b0319166001600160a01b0390921691909117905550620005109050565b62000103828262000107565b5050565b6200011e82826200014a60201b62000ac71760201c565b60008281526001602090815260409091206200014591839062000b4b620001ea821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000103576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000201836001600160a01b0384166200020a565b90505b92915050565b6000818152600183016020526040812054620002535750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000204565b50600062000204565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028457600080fd5b81516001600160401b0380821115620002a157620002a16200025c565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc6200025c565b81604052838152602092508683858801011115620002e957600080fd5b600091505b838210156200030d5785820183015181830184015290820190620002ee565b600093810190920192909252949350505050565b600080600080608085870312156200033857600080fd5b84516001600160401b03808211156200035057600080fd5b6200035e8883890162000272565b955060208701519150808211156200037557600080fd5b50620003848782880162000272565b60408701516060880151919550935090506001600160a01b0381168114620003ab57600080fd5b939692955090935050565b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014557600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b505050505050565b81516001600160401b038111156200046057620004606200025c565b6200047881620004718454620003b6565b84620003f2565b602080601f831160018114620004b05760008415620004975750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e157888601518255948401946001909101908401620004c0565b5085821015620005005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0c80620005206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461042b578063d53913931461043e578063d547741f14610465578063dd62ed3e14610478578063e63ab1e91461048b57600080fd5b8063a217fddf146103f5578063a457c2d7146103fd578063a9059cbb14610410578063adb1f0d81461042357600080fd5b806387bbfe0a116100e957806387bbfe0a1461039b5780639010d07c146103c757806391d14854146103da57806395d89b41146103ed57600080fd5b80635c975abb1461034c57806370a082311461035757806379cc6790146103805780638456cb591461039357600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e36600461177c565b6104b2565b60405190151581526020015b60405180910390f35b6102306104dd565b60405161021f91906117ca565b61021361024b366004611819565b61056f565b6004545b60405190815260200161021f565b610213610270366004611843565b610587565b61025461028336600461187f565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d1366004611898565b6105ab565b005b6040516012815260200161021f565b6102d66102f5366004611898565b6105d5565b610254600a5481565b610213610311366004611819565b610658565b6102d661067a565b6102d661032c366004611819565b610720565b6102d661033f36600461187f565b6107bf565b6102d66107cc565b60075460ff16610213565b6102546103653660046118c4565b6001600160a01b031660009081526002602052604090205490565b6102d661038e366004611819565b610869565b6102d661087e565b6102136103a93660046118c4565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d53660046118df565b610922565b6102136103e8366004611898565b610941565b61023061096a565b610254600081565b61021361040b366004611819565b610979565b61021361041e366004611819565b6109f4565b6102d6610a02565b61025461043936600461187f565b610a60565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d6610473366004611898565b610a77565b610254610486366004611901565b610a9c565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d757506104d782610b60565b92915050565b6060600580546104ec9061192b565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061192b565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d818585610b95565b5060019392505050565b600033610595858285610cb9565b6105a0858585610d33565b506001949350505050565b6000828152602081905260409020600101546105c681610dd9565b6105d08383610de3565b505050565b6001600160a01b038116331461064a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106548282610e05565b5050565b60003361057d81858561066b8383610a9c565b610675919061197b565b610b95565b6106a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b6107165760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610641565b61071e610e27565b565b61074a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610941565b6107b55760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610641565b6106548282610e79565b6107c93382610f46565b50565b3360009081526008602052604090205460ff16156107fc5760405162461bcd60e51b81526004016106419061198e565b61080833600a54610e79565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085f914290918252602082015260400190565b60405180910390a2565b610874823383610cb9565b6106548282610f46565b6108a87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b61091a5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610641565b61071e611086565b600082815260016020526040812061093a90836110c3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104ec9061192b565b600033816109878286610a9c565b9050838110156109e75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610641565b6105a08286868403610b95565b60003361057d818585610d33565b3360009081526008602052604090205460ff1615610a325760405162461bcd60e51b81526004016106419061198e565b610a3a6107cc565b6009546107c9906001600160a01b03166fffffffffffffffffffffffffffffffff61056f565b60008181526001602052604081206104d7906110cf565b600082815260208190526040902060010154610a9281610dd9565b6105d08383610e05565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610ad18282610941565b610654576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093a836001600160a01b0384166110d9565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316146104d7565b6001600160a01b038316610bf75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610641565b6001600160a01b038216610c585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610641565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc58484610a9c565b90506000198114610d2d5781811015610d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610641565b610d2d8484848403610b95565b50505050565b6009546001600160a01b0384811691161480610d5c57506009546001600160a01b038381169116145b610dce5760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e207468652061646472657373657300006064820152608401610641565b6105d0838383611128565b6107c981336112de565b610ded8282610ac7565b60008281526001602052604090206105d09082610b4b565b610e0f8282611337565b60008281526001602052604090206105d0908261139c565b610e2f6113b1565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ecf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610641565b610edb600083836113fa565b8060046000828254610eed919061197b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610641565b610fb2826000836113fa565b6001600160a01b038216600090815260026020526040902054818110156110265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610641565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b61108e611405565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e5c3390565b600061093a838361144b565b60006104d7825490565b6000818152600183016020526040812054611120575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d7565b5060006104d7565b6001600160a01b03831661118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610641565b6001600160a01b0382166111ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610641565b6111f98383836113fa565b6001600160a01b038316600090815260026020526040902054818110156112715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610641565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d19086815260200190565b60405180910390a3610d2d565b6112e88282610941565b610654576112f581611475565b611300836020611487565b6040516020016113119291906119de565b60408051601f198184030181529082905262461bcd60e51b8252610641916004016117ca565b6113418282610941565b15610654576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093a836001600160a01b038416611623565b60075460ff1661071e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610641565b6105d0838383611716565b60075460ff161561071e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610641565b600082600001828154811061146257611462611a53565b9060005260206000200154905092915050565b60606104d76001600160a01b03831660145b60606000611496836002611a69565b6114a190600261197b565b67ffffffffffffffff8111156114b9576114b9611a80565b6040519080825280601f01601f1916602001820160405280156114e3576020820181803683370190505b509050600360fc1b816000815181106114fe576114fe611a53565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061152d5761152d611a53565b60200101906001600160f81b031916908160001a9053506000611551846002611a69565b61155c90600161197b565b90505b60018111156115d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159057611590611a53565b1a60f81b8282815181106115a6576115a6611a53565b60200101906001600160f81b031916908160001a90535060049490941c936115cd81611a96565b905061155f565b50831561093a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610641565b6000818152600183016020526040812054801561170c576000611647600183611aad565b855490915060009061165b90600190611aad565b90508181146116c057600086600001828154811061167b5761167b611a53565b906000526020600020015490508087600001848154811061169e5761169e611a53565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116d1576116d1611ac0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d7565b60009150506104d7565b60075460ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610641565b60006020828403121561178e57600080fd5b81356001600160e01b03198116811461093a57600080fd5b60005b838110156117c15781810151838201526020016117a9565b50506000910152565b60208152600082518060208401526117e98160408501602087016117a6565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461181457600080fd5b919050565b6000806040838503121561182c57600080fd5b611835836117fd565b946020939093013593505050565b60008060006060848603121561185857600080fd5b611861846117fd565b925061186f602085016117fd565b9150604084013590509250925092565b60006020828403121561189157600080fd5b5035919050565b600080604083850312156118ab57600080fd5b823591506118bb602084016117fd565b90509250929050565b6000602082840312156118d657600080fd5b61093a826117fd565b600080604083850312156118f257600080fd5b50508035926020909101359150565b6000806040838503121561191457600080fd5b61191d836117fd565b91506118bb602084016117fd565b600181811c9082168061193f57607f821691505b60208210810361195f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d7576104d7611965565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a168160178501602088016117a6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a478160288401602088016117a6565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d7576104d7611965565b634e487b7160e01b600052604160045260246000fd5b600081611aa557611aa5611965565b506000190190565b818103818111156104d7576104d7611965565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e167717c6f5d7d3fa2b17f9645cf6e8f6ed55a0fe6c77f7e675e3c1e7dc9af7564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a2646970667358221220864139d5a29479e8c513210de56cfe4dc5023d03e9fa0926b04b4c4cced3ba1464736f6c63430008120033608060405234801561001057600080fd5b506040516109ef3803806109ef83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61095c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063316b3739146100465780637726f7761461008b578063b816f513146100a0575b600080fd5b61006f61005436600461077c565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461077c565b6100b3565b005b60005461006f906001600160a01b031681565b6001600160a01b0381811660009081526001602052604090205416156101455760405162461bcd60e51b815260206004820152603960248201527f54686572652073686f756c64206f6e6c79206265206f6e65206465706c6f796d60448201527f656e74207065722076657273696f6e2070657220746f6b656e00000000000000606482015260840160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906107ac565b90506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102139190810190610809565b600080549192509061022d906001600160a01b031661072a565b60405163144fa6d760e01b81526001600160a01b0386811660048301529192509082169063144fa6d790602401600060405180830381600087803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b50506040516383bf460960e01b815260206004820152603f60248201527f7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c2060448201527f2263617465676f7279223a20222573222c20226c616e67223a20222573227d0060648201526001600160a01b03841692506383bf460991506084016020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906108b6565b506040516383bf460960e01b815260206004820152604f60248201527f7b227469746c65223a20222573222c202274797065223a202275696e74222c2060448201527f22646563696d616c73223a2031382c202263617465676f7279223a202225732260648201526e2c20226c616e67223a20222573227d60881b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906108b6565b506040516383bf460960e01b815260206004820152605a60248201527f7b227469746c65223a20222573222c202274797065223a202273696e676c652d60448201527f73656c656374222c20226f7574636f6d6573223a205b25735d2c20226361746560648201527f676f7279223a20222573222c20226c616e67223a20222573227d00000000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906108b6565b506040516383bf460960e01b815260206004820152605c60248201527f7b227469746c65223a20222573222c202274797065223a20226d756c7469706c60448201527f652d73656c656374222c20226f7574636f6d6573223a205b25735d2c2022636160648201527f7465676f7279223a20222573222c20226c616e67223a20222573227d0000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb91906108b6565b506040516383bf460960e01b815260206004820152604360248201527f7b227469746c65223a20222573222c202274797065223a20226461746574696d60448201527f65222c202263617465676f7279223a20222573222c20226c616e67223a20222560648201526273227d60e81b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b691906108b6565b506001600160a01b038481166000908152600160205260409081902080546001600160a01b03191692841692909217909155517fbe87db3b58b5f4d26d54d6f8a09bbab3eefdc8879ac48f5e21ccff2a1f50b0729061071c9083908790879087906108cf565b60405180910390a150505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121561078e57600080fd5b81356001600160a01b03811681146107a557600080fd5b9392505050565b6000602082840312156107be57600080fd5b815160ff811681146107a557600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156108005781810151838201526020016107e8565b50506000910152565b60006020828403121561081b57600080fd5b815167ffffffffffffffff8082111561083357600080fd5b818401915084601f83011261084757600080fd5b815181811115610859576108596107cf565b604051601f8201601f19908116603f01168101908382118183101715610881576108816107cf565b8160405282815287602084870101111561089a57600080fd5b6108ab8360208301602088016107e5565b979650505050505050565b6000602082840312156108c857600080fd5b5051919050565b600060018060a01b03808716835280861660208401525060ff8416604083015260806060830152825180608084015261090f8160a08501602087016107e5565b601f01601f19169190910160a0019594505050505056fea26469706673582212200901921801295c1857ea1285857575b749b164c9a87fe108337110039b25924a64736f6c63430008120033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b114620003375780638da5cb5b146200034e578063d13acee11462000360578063d1aeb5c214620001b8578063f2fde38b146200039657600080fd5b80636e3dd8ba14620002ab57806370e9207814620002d3578063715018a614620002ea578063791e051914620002f457600080fd5b806330ccd17a11620000fc57806330ccd17a14620001e057806333b2276014620001f75780634fe62a5b14620002645780635d341ae5146200027d57806367d73c91146200029457600080fd5b80630c27c26c14620001325780631311758b14620001775780631cbe8a65146200019057806325c7205914620001b8575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001cf620001c936600462000ff8565b620003ad565b60405190151581526020016200016e565b6200015a620001f136600462001036565b62000400565b620002396200020836600462001050565b600260208190526000918252604090912080549101546001600160a01b0380831692600160a01b900460ff16911683565b604080516001600160a01b03948516815292151560208401529216918101919091526060016200016e565b6200027b6200027536600462000ff8565b6200042b565b005b6200027b6200028e36600462001050565b62000599565b6200015a620002a536600462001122565b620006df565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6200027b620002e436600462001050565b62000bf1565b6200027b62000d2c565b620001cf6200030536600462000ff8565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b6200027b6200034836600462000ff8565b62000d44565b6000546001600160a01b03166200015a565b620001cf6200037136600462001050565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b6200027b620003a736600462001050565b62000ea9565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff168015620003f857506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200041157600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff16620004975760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b33600090815260018201602052604090205460ff16620004cb5760405162461bcd60e51b81526004016200048e90620011ab565b8054604051632f2ff15d60e01b81526000805160206200330683398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b1580156200052757600080fd5b505af11580156200053c573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1615620006055760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200048e565b33600090815260018201602052604090205460ff16620006395760405162461bcd60e51b81526004016200048e90620011ab565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b1580156200068c57600080fd5b505af1158015620006a1573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b60006001600160a01b038216620007455760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084016200048e565b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620007b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007d89190620011da565b620007e257600080fd5b60008686867f0000000000000000000000000000000000000000000000000000000000000000604051620008169062000fd4565b62000825949392919062001246565b604051809103906000f08015801562000842573d6000803e3d6000fd5b50604051632f2ff15d60e01b81526000805160206200330683398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620008c057600080fd5b505af1158015620008d5573d6000803e3d6000fd5b5050604051632f2ff15d60e01b81526000805160206200330683398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200093057600080fd5b505af115801562000945573d6000803e3d6000fd5b5050506001600160a01b038216600081815260026020908152604080832080546001600160a81b0319168517600160a01b1781553384526001808201909352908320805460ff19168317905560038054928301815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b0319169093179092556004805492935090620009e58362001291565b909155505060405163316b373960e01b81526001600160a01b0386811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000a56573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a7c9190620012b9565b6001600160a01b03160362000b0957604051633b937bbb60e11b81526001600160a01b0386811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b15801562000aef57600080fd5b505af115801562000b04573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa15801562000b70573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b969190620012b9565b6002820180546001600160a01b0319166001600160a01b039283161790556040518682169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a4509695505050505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000c585760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200048e565b33600090815260018201602052604090205460ff1662000c8c5760405162461bcd60e51b81526004016200048e90620011ab565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000cd957600080fd5b505af115801562000cee573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000d3662000f28565b62000d42600062000f84565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000dac5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200048e565b33600090815260018201602052604090205460ff1662000de05760405162461bcd60e51b81526004016200048e90620011ab565b805460405163d547741f60e01b81526000805160206200330683398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000e3c57600080fd5b505af115801562000e51573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b62000eb362000f28565b6001600160a01b03811662000f1a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200048e565b62000f258162000f84565b50565b6000546001600160a01b0316331462000d425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200048e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61202c80620012da83390190565b6001600160a01b038116811462000f2557600080fd5b600080604083850312156200100c57600080fd5b8235620010198162000fe2565b915060208301356200102b8162000fe2565b809150509250929050565b6000602082840312156200104957600080fd5b5035919050565b6000602082840312156200106357600080fd5b8135620010708162000fe2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200109f57600080fd5b813567ffffffffffffffff80821115620010bd57620010bd62001077565b604051601f8301601f19908116603f01168101908282118183101715620010e857620010e862001077565b816040528381528660208588010111156200110257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156200113957600080fd5b843567ffffffffffffffff808211156200115257600080fd5b62001160888389016200108d565b955060208701359150808211156200117757600080fd5b5062001186878288016200108d565b935050604085013591506060850135620011a08162000fe2565b939692955090935050565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b604082015260600190565b600060208284031215620011ed57600080fd5b815180151581146200107057600080fd5b6000815180845260005b81811015620012265760208185018101518683018201520162001208565b506000602082860101526020601f19601f83011685010191505092915050565b6080815260006200125b6080830187620011fe565b82810360208401526200126f8187620011fe565b604084019590955250506001600160a01b039190911660609091015292915050565b600060018201620012b257634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215620012cc57600080fd5b8151620010708162000fe256fe60806040523480156200001157600080fd5b506040516200202c3803806200202c833981016040819052620000349162000321565b83838181600562000046838262000444565b50600662000055828262000444565b50506007805460ff19169055506200006f600033620000f7565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f7565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f7565b5050600a91909155600980546001600160a01b0319166001600160a01b0390921691909117905550620005109050565b62000103828262000107565b5050565b6200011e82826200014a60201b62000ac71760201c565b60008281526001602090815260409091206200014591839062000b4b620001ea821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000103576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000201836001600160a01b0384166200020a565b90505b92915050565b6000818152600183016020526040812054620002535750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000204565b50600062000204565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028457600080fd5b81516001600160401b0380821115620002a157620002a16200025c565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc6200025c565b81604052838152602092508683858801011115620002e957600080fd5b600091505b838210156200030d5785820183015181830184015290820190620002ee565b600093810190920192909252949350505050565b600080600080608085870312156200033857600080fd5b84516001600160401b03808211156200035057600080fd5b6200035e8883890162000272565b955060208701519150808211156200037557600080fd5b50620003848782880162000272565b60408701516060880151919550935090506001600160a01b0381168114620003ab57600080fd5b939692955090935050565b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014557600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b505050505050565b81516001600160401b038111156200046057620004606200025c565b6200047881620004718454620003b6565b84620003f2565b602080601f831160018114620004b05760008415620004975750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e157888601518255948401946001909101908401620004c0565b5085821015620005005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0c80620005206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461042b578063d53913931461043e578063d547741f14610465578063dd62ed3e14610478578063e63ab1e91461048b57600080fd5b8063a217fddf146103f5578063a457c2d7146103fd578063a9059cbb14610410578063adb1f0d81461042357600080fd5b806387bbfe0a116100e957806387bbfe0a1461039b5780639010d07c146103c757806391d14854146103da57806395d89b41146103ed57600080fd5b80635c975abb1461034c57806370a082311461035757806379cc6790146103805780638456cb591461039357600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e36600461177c565b6104b2565b60405190151581526020015b60405180910390f35b6102306104dd565b60405161021f91906117ca565b61021361024b366004611819565b61056f565b6004545b60405190815260200161021f565b610213610270366004611843565b610587565b61025461028336600461187f565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d1366004611898565b6105ab565b005b6040516012815260200161021f565b6102d66102f5366004611898565b6105d5565b610254600a5481565b610213610311366004611819565b610658565b6102d661067a565b6102d661032c366004611819565b610720565b6102d661033f36600461187f565b6107bf565b6102d66107cc565b60075460ff16610213565b6102546103653660046118c4565b6001600160a01b031660009081526002602052604090205490565b6102d661038e366004611819565b610869565b6102d661087e565b6102136103a93660046118c4565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d53660046118df565b610922565b6102136103e8366004611898565b610941565b61023061096a565b610254600081565b61021361040b366004611819565b610979565b61021361041e366004611819565b6109f4565b6102d6610a02565b61025461043936600461187f565b610a60565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d6610473366004611898565b610a77565b610254610486366004611901565b610a9c565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d757506104d782610b60565b92915050565b6060600580546104ec9061192b565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061192b565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d818585610b95565b5060019392505050565b600033610595858285610cb9565b6105a0858585610d33565b506001949350505050565b6000828152602081905260409020600101546105c681610dd9565b6105d08383610de3565b505050565b6001600160a01b038116331461064a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106548282610e05565b5050565b60003361057d81858561066b8383610a9c565b610675919061197b565b610b95565b6106a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b6107165760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610641565b61071e610e27565b565b61074a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610941565b6107b55760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610641565b6106548282610e79565b6107c93382610f46565b50565b3360009081526008602052604090205460ff16156107fc5760405162461bcd60e51b81526004016106419061198e565b61080833600a54610e79565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085f914290918252602082015260400190565b60405180910390a2565b610874823383610cb9565b6106548282610f46565b6108a87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b61091a5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610641565b61071e611086565b600082815260016020526040812061093a90836110c3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104ec9061192b565b600033816109878286610a9c565b9050838110156109e75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610641565b6105a08286868403610b95565b60003361057d818585610d33565b3360009081526008602052604090205460ff1615610a325760405162461bcd60e51b81526004016106419061198e565b610a3a6107cc565b6009546107c9906001600160a01b03166fffffffffffffffffffffffffffffffff61056f565b60008181526001602052604081206104d7906110cf565b600082815260208190526040902060010154610a9281610dd9565b6105d08383610e05565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610ad18282610941565b610654576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093a836001600160a01b0384166110d9565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316146104d7565b6001600160a01b038316610bf75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610641565b6001600160a01b038216610c585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610641565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc58484610a9c565b90506000198114610d2d5781811015610d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610641565b610d2d8484848403610b95565b50505050565b6009546001600160a01b0384811691161480610d5c57506009546001600160a01b038381169116145b610dce5760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e207468652061646472657373657300006064820152608401610641565b6105d0838383611128565b6107c981336112de565b610ded8282610ac7565b60008281526001602052604090206105d09082610b4b565b610e0f8282611337565b60008281526001602052604090206105d0908261139c565b610e2f6113b1565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ecf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610641565b610edb600083836113fa565b8060046000828254610eed919061197b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610641565b610fb2826000836113fa565b6001600160a01b038216600090815260026020526040902054818110156110265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610641565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b61108e611405565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e5c3390565b600061093a838361144b565b60006104d7825490565b6000818152600183016020526040812054611120575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d7565b5060006104d7565b6001600160a01b03831661118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610641565b6001600160a01b0382166111ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610641565b6111f98383836113fa565b6001600160a01b038316600090815260026020526040902054818110156112715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610641565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d19086815260200190565b60405180910390a3610d2d565b6112e88282610941565b610654576112f581611475565b611300836020611487565b6040516020016113119291906119de565b60408051601f198184030181529082905262461bcd60e51b8252610641916004016117ca565b6113418282610941565b15610654576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093a836001600160a01b038416611623565b60075460ff1661071e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610641565b6105d0838383611716565b60075460ff161561071e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610641565b600082600001828154811061146257611462611a53565b9060005260206000200154905092915050565b60606104d76001600160a01b03831660145b60606000611496836002611a69565b6114a190600261197b565b67ffffffffffffffff8111156114b9576114b9611a80565b6040519080825280601f01601f1916602001820160405280156114e3576020820181803683370190505b509050600360fc1b816000815181106114fe576114fe611a53565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061152d5761152d611a53565b60200101906001600160f81b031916908160001a9053506000611551846002611a69565b61155c90600161197b565b90505b60018111156115d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159057611590611a53565b1a60f81b8282815181106115a6576115a6611a53565b60200101906001600160f81b031916908160001a90535060049490941c936115cd81611a96565b905061155f565b50831561093a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610641565b6000818152600183016020526040812054801561170c576000611647600183611aad565b855490915060009061165b90600190611aad565b90508181146116c057600086600001828154811061167b5761167b611a53565b906000526020600020015490508087600001848154811061169e5761169e611a53565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116d1576116d1611ac0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d7565b60009150506104d7565b60075460ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610641565b60006020828403121561178e57600080fd5b81356001600160e01b03198116811461093a57600080fd5b60005b838110156117c15781810151838201526020016117a9565b50506000910152565b60208152600082518060208401526117e98160408501602087016117a6565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461181457600080fd5b919050565b6000806040838503121561182c57600080fd5b611835836117fd565b946020939093013593505050565b60008060006060848603121561185857600080fd5b611861846117fd565b925061186f602085016117fd565b9150604084013590509250925092565b60006020828403121561189157600080fd5b5035919050565b600080604083850312156118ab57600080fd5b823591506118bb602084016117fd565b90509250929050565b6000602082840312156118d657600080fd5b61093a826117fd565b600080604083850312156118f257600080fd5b50508035926020909101359150565b6000806040838503121561191457600080fd5b61191d836117fd565b91506118bb602084016117fd565b600181811c9082168061193f57607f821691505b60208210810361195f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d7576104d7611965565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a168160178501602088016117a6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a478160288401602088016117a6565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d7576104d7611965565b634e487b7160e01b600052604160045260246000fd5b600081611aa557611aa5611965565b506000190190565b818103818111156104d7576104d7611965565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e167717c6f5d7d3fa2b17f9645cf6e8f6ed55a0fe6c77f7e675e3c1e7dc9af7564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a2646970667358221220864139d5a29479e8c513210de56cfe4dc5023d03e9fa0926b04b4c4cced3ba1464736f6c63430008120033",
  "immutableReferences": {
    "9638": [
      {
        "length": 32,
        "start": 406
      },
      {
        "length": 32,
        "start": 2025
      },
      {
        "length": 32,
        "start": 2159
      }
    ],
    "9640": [
      {
        "length": 32,
        "start": 312
      },
      {
        "length": 32,
        "start": 1888
      }
    ],
    "9643": [
      {
        "length": 32,
        "start": 689
      },
      {
        "length": 32,
        "start": 2572
      },
      {
        "length": 32,
        "start": 2730
      },
      {
        "length": 32,
        "start": 2856
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1192:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:31"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:31"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:31",
                "type": ""
              }
            ],
            "src": "14:177:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:263:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "366:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "332:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "341:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "321:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "382:50:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "392:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:40:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "441:59:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "451:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:49:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "441:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "509:59:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "564:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "519:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:49:31"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "292:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "300:6:31",
                "type": ""
              }
            ],
            "src": "196:378:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:229:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "804:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "815:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "820:2:31",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "793:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:31"
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f74206265203020",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "859:34:31",
                        "type": "",
                        "value": "PMV3Factory address cannot be 0 "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "914:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "925:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "910:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:18:31"
                      },
                      {
                        "hexValue": "61646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "930:9:31",
                        "type": "",
                        "value": "address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "903:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "903:37:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "949:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "949:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "744:4:31",
                "type": ""
              }
            ],
            "src": "579:403:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1088:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1098:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1110:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1121:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1106:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1098:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1140:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1155:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1176:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1180:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1163:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1163:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1151:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1133:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1133:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1068:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1079:4:31",
                "type": ""
              }
            ],
            "src": "987:203:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"PMV3Factory address cannot be 0 \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9385:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:31",
                "type": ""
              }
            ],
            "src": "14:203:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:76:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "333:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "333:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "375:9:31"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:25:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "368:25:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "292:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "303:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "314:4:31",
                "type": ""
              }
            ],
            "src": "222:177:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "457:86:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "521:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "530:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "480:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "491:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "511:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "502:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "502:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "515:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "498:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "498:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "487:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "487:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "477:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "477:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "470:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "467:70:31"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "446:5:31",
                "type": ""
              }
            ],
            "src": "404:139:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "650:317:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "696:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "705:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "708:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "698:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "698:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "698:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "671:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "680:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "667:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "667:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "692:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "663:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "663:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "660:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "721:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "747:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "734:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "725:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "799:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "766:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "814:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "824:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "814:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "838:47:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "870:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "881:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "853:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "853:32:31"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "842:7:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "927:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "894:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:41:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "894:41:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "944:17:31",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "954:7:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "944:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "608:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "619:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "631:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "639:6:31",
                "type": ""
              }
            ],
            "src": "548:419:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:92:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1077:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1089:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1100:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1085:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1085:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1077:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1119:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1144:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1137:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1137:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1130:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1112:41:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1112:41:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1036:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1047:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1058:4:31",
                "type": ""
              }
            ],
            "src": "972:187:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1234:110:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1280:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1289:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1292:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1282:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1282:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1282:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1255:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1264:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1247:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1247:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1244:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1305:33:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1328:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1315:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:23:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1305:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1200:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1211:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:31",
                "type": ""
              }
            ],
            "src": "1164:180:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1419:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1465:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1474:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1477:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1467:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1467:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1467:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1440:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1449:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1436:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1436:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1432:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1429:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1490:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1516:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1503:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1503:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1494:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1568:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1535:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1535:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1535:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1583:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1593:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1583:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1385:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1396:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1408:6:31",
                "type": ""
              }
            ],
            "src": "1349:255:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1809:234:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1819:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1831:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1842:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1827:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1819:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1854:29:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1872:3:31",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1877:1:31",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:11:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1864:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:19:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1858:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1899:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1914:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1922:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1910:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1910:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1892:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1892:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1946:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1957:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1942:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1942:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1976:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1969:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1969:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1962:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1962:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1935:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1935:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1935:50:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2005:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2016:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2001:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2001:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2025:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2033:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1994:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:43:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1994:43:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_contract$_IRealityETH_IERC20_$11823__to_t_address_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1762:9:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1773:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1781:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1789:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1800:4:31",
                "type": ""
              }
            ],
            "src": "1609:434:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2133:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2179:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2188:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2191:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2181:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2181:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2181:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2154:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2163:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2175:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2146:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2143:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2204:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2230:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2217:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2208:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2282:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2249:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2249:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2249:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2297:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2307:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2297:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2099:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2110:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2122:6:31",
                "type": ""
              }
            ],
            "src": "2048:270:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2355:95:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2372:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2379:3:31",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2384:10:31",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2375:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:20:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2365:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2365:31:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2365:31:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2412:1:31",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2415:4:31",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2405:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2405:15:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2405:15:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2436:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2439:4:31",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2429:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:15:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2429:15:31"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2323:127:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:666:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2557:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2566:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2569:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2559:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2559:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2559:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2536:6:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2544:4:31",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2532:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2532:17:31"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2551:3:31"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2528:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2528:27:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2521:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2521:35:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2518:55:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2582:30:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2605:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2592:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2592:20:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2586:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2621:28:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2631:18:31",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2625:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2672:22:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2674:16:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2674:18:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2674:18:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2664:2:31"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2668:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2661:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2661:10:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2658:36:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2703:17:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2717:2:31",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2713:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2713:7:31"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2707:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2729:23:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2749:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2743:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:9:31"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2733:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2761:71:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2783:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2807:2:31"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2811:4:31",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2803:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2803:13:31"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2818:2:31"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2799:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2799:22:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2823:2:31",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2795:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2795:31:31"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2828:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2791:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2791:40:31"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2779:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:53:31"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2765:10:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2891:22:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2893:16:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2893:18:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2893:18:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2850:10:31"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2862:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2847:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2870:10:31"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2882:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2867:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2867:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2844:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2844:46:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2841:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2929:2:31",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2933:10:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2922:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2922:22:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2922:22:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2960:6:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2968:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2953:18:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2953:18:31"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3019:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3028:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3031:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3021:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3021:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3021:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2994:6:31"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3002:2:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2990:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2990:15:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3007:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2986:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2986:26:31"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3014:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2983:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2983:35:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2980:55:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3061:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3069:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:17:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3080:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3088:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3076:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3076:17:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3095:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3044:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3044:54:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3044:54:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3122:6:31"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3130:2:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3118:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3118:15:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3135:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3114:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3114:26:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3142:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3107:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3107:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3107:37:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3153:15:31",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3162:6:31"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3153:5:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2482:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2490:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2498:5:31",
                "type": ""
              }
            ],
            "src": "2455:719:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3335:614:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3382:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3391:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3394:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3384:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3384:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3384:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3356:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3365:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3352:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3352:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3377:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3348:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3348:33:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3345:53:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3407:37:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3434:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3421:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3421:23:31"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3411:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3453:28:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3463:18:31",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3457:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3508:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3517:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3520:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3510:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3510:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3510:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3496:6:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3504:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3493:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3493:14:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3490:34:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3533:60:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3565:9:31"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3576:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3561:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3561:22:31"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3585:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3543:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3543:50:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3533:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3602:48:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3635:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3646:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3631:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3631:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3618:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3618:32:31"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "3606:8:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3679:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3688:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3691:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3681:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3681:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3681:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "3665:8:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3675:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3662:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3662:16:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3659:36:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3704:62:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3736:9:31"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "3747:8:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3732:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3732:24:31"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3758:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3714:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3714:52:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3704:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3775:42:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3802:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3813:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3798:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3798:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3785:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3785:32:31"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3775:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3826:45:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3856:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3867:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3852:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3852:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3839:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:32:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3830:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3913:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "3880:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3880:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3880:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3928:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3938:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3928:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3277:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3288:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3300:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3308:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3316:6:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3324:6:31",
                "type": ""
              }
            ],
            "src": "3179:770:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4076:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4086:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4098:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4109:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4094:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4086:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4128:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4143:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4159:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4164:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4155:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4155:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4168:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4151:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4151:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4139:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4139:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4121:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4121:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4045:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4056:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4067:4:31",
                "type": ""
              }
            ],
            "src": "3954:224:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4318:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4328:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4340:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4351:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4336:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4336:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4328:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4370:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4385:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4401:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4406:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4397:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4397:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4410:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4393:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4393:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4381:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4381:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4363:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4363:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4363:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11962__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4287:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4298:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4309:4:31",
                "type": ""
              }
            ],
            "src": "4183:237:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4599:169:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4616:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4627:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4609:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4609:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4609:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4650:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4661:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4646:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4646:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4666:2:31",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4639:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4639:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4639:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4689:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4700:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4685:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4685:18:31"
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4705:21:31",
                        "type": "",
                        "value": "Land does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4678:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:49:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4678:49:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4736:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4748:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4759:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4744:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4744:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4736:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4576:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4590:4:31",
                "type": ""
              }
            ],
            "src": "4425:343:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4947:171:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4964:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4975:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4957:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4957:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4957:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4998:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5009:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5014:2:31",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4987:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4987:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4987:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5037:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5048:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5033:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5033:18:31"
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5053:23:31",
                        "type": "",
                        "value": "Not admin of the land"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5026:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5026:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5026:51:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5086:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5098:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5109:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5094:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5094:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5086:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4924:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4938:4:31",
                "type": ""
              }
            ],
            "src": "4773:345:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5252:145:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5262:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5274:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5285:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5270:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5270:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5262:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5304:9:31"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5315:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5297:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:25:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5297:25:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5342:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5353:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5338:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5338:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5362:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5378:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5383:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5374:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5374:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5387:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5370:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5370:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5358:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5358:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5331:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5331:60:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5331:60:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5213:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5224:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5232:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5243:4:31",
                "type": ""
              }
            ],
            "src": "5123:274:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5576:172:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5593:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5604:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5586:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5586:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5586:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5627:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5638:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5623:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5623:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5643:2:31",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5616:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5616:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5666:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5677:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5662:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5662:18:31"
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5682:24:31",
                        "type": "",
                        "value": "Land is already active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5655:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5655:52:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5655:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5716:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5728:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5739:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5724:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5724:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5716:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5553:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5567:4:31",
                "type": ""
              }
            ],
            "src": "5402:346:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5927:225:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5944:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5955:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5937:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5937:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5937:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5978:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5989:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5974:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5974:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5994:2:31",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5967:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5967:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5967:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6017:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6028:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6013:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6013:18:31"
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6033:34:31",
                        "type": "",
                        "value": "Token to answer cannot be 0 addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6006:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6006:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6006:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6088:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6099:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6084:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6084:18:31"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6104:5:31",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6077:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6077:33:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6119:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6131:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6142:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6127:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6127:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6119:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5904:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5918:4:31",
                "type": ""
              }
            ],
            "src": "5753:399:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6324:175:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6334:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6346:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6357:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6342:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6342:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6334:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6369:29:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6387:3:31",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6392:1:31",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6383:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6383:11:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6396:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6379:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:19:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6373:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6414:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6429:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6437:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6425:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6425:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6407:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6407:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6407:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6461:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6472:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6457:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6457:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6481:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6489:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6477:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6477:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6450:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6450:43:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6450:43:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PredictionMarketV3Controller_$10267_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6285:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6296:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6304:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6315:4:31",
                "type": ""
              }
            ],
            "src": "6157:342:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6582:199:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6628:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6637:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6640:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6630:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6630:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6630:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6603:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6612:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6599:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6599:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6624:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6595:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6595:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "6592:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6653:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6672:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6666:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6666:16:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6657:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6735:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6744:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6747:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6737:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6737:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6737:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6704:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6725:5:31"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6718:6:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6718:13:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6711:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6711:21:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6701:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6701:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6694:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6694:40:31"
                  },
                  "nodeType": "YulIf",
                  "src": "6691:60:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6760:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6770:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6760:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6548:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6559:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6571:6:31",
                "type": ""
              }
            ],
            "src": "6504:277:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6836:373:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6846:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6866:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6860:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6860:12:31"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6850:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6888:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6893:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6881:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6881:19:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6881:19:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6909:10:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6918:1:31",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6913:1:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6980:110:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6994:14:31",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7004:4:31",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "6998:2:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "7036:3:31"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7041:1:31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7032:3:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7032:11:31"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7045:2:31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7028:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7028:20:31"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "7064:5:31"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7071:1:31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7060:3:31"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7060:13:31"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "7075:2:31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7056:3:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7056:22:31"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7050:5:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7050:29:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7021:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7021:59:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7021:59:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6939:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6942:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6936:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6936:13:31"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6950:21:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6952:17:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6961:1:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6964:4:31",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6957:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6957:12:31"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6952:1:31"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6932:3:31",
                    "statements": []
                  },
                  "src": "6928:162:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7114:3:31"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7119:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7110:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7110:16:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7128:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7106:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7106:27:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7135:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7099:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7099:38:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7099:38:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7146:57:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7161:3:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7174:6:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7182:2:31",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7170:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7170:15:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7191:2:31",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7187:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7187:7:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7166:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7166:29:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7157:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7157:39:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7198:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7153:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7153:50:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7146:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6813:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6820:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6828:3:31",
                "type": ""
              }
            ],
            "src": "6786:423:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7439:328:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7456:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7467:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7449:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7449:22:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7449:22:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7480:60:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7512:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7524:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7535:3:31",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7520:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7520:19:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "7494:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7494:46:31"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "7484:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7560:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7571:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7556:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7556:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "7580:6:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7588:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7576:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7576:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7549:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7549:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7549:50:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7608:41:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7634:6:31"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "7642:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "7616:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7616:33:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7608:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7669:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7680:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7665:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7665:18:31"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7685:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7658:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7658:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7658:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7712:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7723:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7708:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7708:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7732:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7748:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7753:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7744:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7744:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7757:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7740:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7740:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7728:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7728:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7701:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7701:60:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7701:60:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7384:9:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7395:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7403:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7411:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7419:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7430:4:31",
                "type": ""
              }
            ],
            "src": "7214:553:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7819:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7858:111:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7879:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7886:3:31",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7891:10:31",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7882:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7882:20:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7872:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7872:31:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7872:31:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7923:1:31",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7926:4:31",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7916:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7916:15:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7916:15:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7951:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7954:4:31",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7944:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7944:15:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7944:15:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7835:5:31"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7846:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7842:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7842:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7832:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7832:17:31"
                  },
                  "nodeType": "YulIf",
                  "src": "7829:140:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7978:20:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7989:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7996:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7985:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7985:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7978:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7801:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7811:3:31",
                "type": ""
              }
            ],
            "src": "7772:232:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8090:178:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8136:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8145:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8148:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8138:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8138:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8138:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8111:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8120:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8107:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8107:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8132:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8103:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8103:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "8100:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8161:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8180:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8174:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8174:16:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8165:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8232:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "8199:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8199:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8199:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8247:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8257:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8247:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8056:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8067:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8079:6:31",
                "type": ""
              }
            ],
            "src": "8009:259:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8447:168:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8464:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8475:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8457:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8457:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8457:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8498:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8509:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8494:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8494:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8514:2:31",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8487:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8487:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8487:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8537:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8548:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8533:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8533:18:31"
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8553:20:31",
                        "type": "",
                        "value": "Land is not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8526:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8526:48:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8526:48:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8583:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8595:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8606:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8591:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8591:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8583:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8424:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8438:4:31",
                "type": ""
              }
            ],
            "src": "8273:342:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8794:228:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8811:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8822:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8804:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8804:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8804:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8845:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8856:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8841:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8841:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8861:2:31",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8834:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8834:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8834:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8884:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8895:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8880:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8880:18:31"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8900:34:31",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8873:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8873:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8873:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8955:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8966:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8951:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8951:18:31"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8971:8:31",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8944:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8944:36:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8944:36:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8989:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9001:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9012:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8997:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8997:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8989:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8771:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8785:4:31",
                "type": ""
              }
            ],
            "src": "8620:402:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9201:182:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9218:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9229:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9211:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9211:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9211:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9252:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9263:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9248:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9248:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9268:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9241:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9241:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9241:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9291:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9302:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9287:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9287:18:31"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9307:34:31",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9280:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9280:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9280:62:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9351:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9363:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9374:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9359:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9359:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9351:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9178:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9192:4:31",
                "type": ""
              }
            ],
            "src": "9027:356:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_contract$_IRealityETH_IERC20_$11823__to_t_address_t_bool_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_contract_IERC20(value)\n        value3 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11962__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Land does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not admin of the land\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Land is already active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token to answer cannot be 0 addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_PredictionMarketV3Controller_$10267_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Land is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "328:5466:27:-:0;;;1336:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:16;936:18:4;:32::i;:::-;1716:1:6;1821:22;;-1:-1:-1;;;;;1448:26:27;;1440:78;;;;-1:-1:-1;;;1440:78:27;;781:2:31;1440:78:27;;;763:21:31;820:2;800:18;;;793:30;859:34;839:18;;;832:62;-1:-1:-1;;;910:18:31;;;903:37;957:19;;1440:78:27;;;;;;;;-1:-1:-1;;;;;1525:12:27;;;;1561:53;;1590:23;;1561:53;;;:::i;:::-;-1:-1:-1;;;;;1151:32:31;;;1133:51;;1121:2;1106:18;1561:53:27;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1543:71:27;;;;;1620:26;;;-1:-1:-1;328:5466:27;;-1:-1:-1;328:5466:27;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;328:5466:27:-;;;;;;;;:::o;14:177:31:-;93:13;;-1:-1:-1;;;;;135:31:31;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;987:203::-;328:5466:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "328:5466:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:36;;;;;;;;-1:-1:-1;;;;;178:32:31;;;160:51;;148:2;133:18;462:36:27;;;;;;;;1300:31;;;;;;;;;368:25:31;;;356:2;341:18;1300:31:27;222:177:31;398:29:27;;;;;5047:198;;;;;;:::i;:::-;;:::i;:::-;;;1137:14:31;;1130:22;1112:41;;1100:2;1085:18;5047:198:27;972:187:31;1269:27:27;;;;;;:::i;:::-;;:::i;1228:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1228:37:27;;;;-1:-1:-1;;;1228:37:27;;;;;;;;;;;;-1:-1:-1;;;;;1910:15:31;;;1892:34;;1969:14;;1962:22;1957:2;1942:18;;1935:50;2021:15;;2001:18;;;1994:43;;;;1842:2;1827:18;1228:37:27;1609:434:31;4150:438:27;;;;;;:::i;:::-;;:::i;:::-;;3751:395;;;;;;:::i;:::-;;:::i;1885:1468::-;;;;;;:::i;:::-;;:::i;539:57::-;;;;;3357:390;;;;;;:::i;:::-;;:::i;1831:101:4:-;;;:::i;5619:173:27:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5729:27:27;;;5697:4;5729:27;;;:5;:27;;;;;;;;5770:17;;;;;;:11;;;;:17;;;;;;;;5619:173;4592:451;;;;;;:::i;:::-;;:::i;1201:85:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;5454:161:27;;;;;;:::i;:::-;-1:-1:-1;;;;;5558:27:27;5526:4;5558:27;;;:5;:27;;;;;5599:11;-1:-1:-1;;;5599:11:27;;;;;5454:161;2081:198:4;;;;;;:::i;:::-;;:::i;5047::27:-;-1:-1:-1;;;;;5167:27:27;;5135:4;5167:27;;;:5;:27;;;;;5208:11;;-1:-1:-1;;;5208:11:27;;;;:32;;;;-1:-1:-1;;;;;;5223:17:27;;;;;;:11;;;:17;;;;;;;;5208:32;5201:39;5047:198;-1:-1:-1;;;;5047:198:27:o;1269:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1269:27:27;;-1:-1:-1;1269:27:27;:::o;4150:438::-;-1:-1:-1;;;;;4242:25:27;;4222:17;4242:25;;;:5;:25;;;;;4282:11;;-1:-1:-1;;;4282:11:27;;;;4274:43;;;;-1:-1:-1;;;4274:43:27;;4627:2:31;4274:43:27;;;4609:21:31;4666:2;4646:18;;;4639:30;-1:-1:-1;;;4685:18:31;;;4678:49;4744:18;;4274:43:27;;;;;;;;;4343:10;4331:23;;;;:11;;;:23;;;;;;;;4323:57;;;;-1:-1:-1;;;4323:57:27;;;;;;;:::i;:::-;4433:10;;:53;;-1:-1:-1;;;4433:53:27;;-1:-1:-1;;;;;;;;;;;4433:53:27;;;5297:25:31;-1:-1:-1;;;;;5358:32:31;;;5338:18;;;5331:60;4433:10:27;;;;:20;;5270:18:31;;4433:53:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4493:18:27;;;;;;;4514:4;4493:11;;;:18;;;;;;:25;;-1:-1:-1;;4493:25:27;;;;;;;4530:53;4493:18;;4530:53;;;4545:10;;4530:53;;;4216:372;4150:438;;:::o;3751:395::-;-1:-1:-1;;;;;3824:25:27;;3804:17;3824:25;;;:5;:25;;;;;3865:11;;-1:-1:-1;;;3865:11:27;;;;3864:12;3856:47;;;;-1:-1:-1;;;3856:47:27;;5604:2:31;3856:47:27;;;5586:21:31;5643:2;5623:18;;;5616:30;-1:-1:-1;;;5662:18:31;;;5655:52;5724:18;;3856:47:27;5402:346:31;3856:47:27;3929:10;3917:23;;;;:11;;;:23;;;;;;;;3909:57;;;;-1:-1:-1;;;3909:57:27;;;;;;;:::i;:::-;3996:18;;-1:-1:-1;;;;3996:18:27;-1:-1:-1;;;3996:18:27;;;4044:42;;;-1:-1:-1;;;4044:42:27;;;;-1:-1:-1;;;;;4044:40:27;;;;;:42;;;;;3996:11;;4044:42;;;;;;;3996:11;4044:40;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4098:43:27;;-1:-1:-1;;;;;4098:43:27;;;-1:-1:-1;4110:10:27;;-1:-1:-1;4098:43:27;;;;;3798:348;3751:395;:::o;1885:1468::-;2035:12;-1:-1:-1;;;;;2064:36:27;;2056:84;;;;-1:-1:-1;;;2056:84:27;;5955:2:31;2056:84:27;;;5937:21:31;5994:2;5974:18;;;5967:30;6033:34;6013:18;;;6006:62;-1:-1:-1;;;6084:18:31;;;6077:33;6127:19;;2056:84:27;5753:399:31;2056:84:27;2280:61;;-1:-1:-1;;;2280:61:27;;2324:4;2280:61;;;6407:34:31;2330:10:27;6457:18:31;;;6450:43;2225:11:27;;-1:-1:-1;;;;;2280:43:27;;;;;6342:18:31;;2280:61:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2272:70;;;;;;2388:22;2430:4;2436:6;2444:18;2472:4;2413:65;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2539:60:27;;-1:-1:-1;;;2539:60:27;;-1:-1:-1;;;;;;;;;;;2539:60:27;;;5297:25:31;-1:-1:-1;;;;;2593:4:27;5358:32:31;;5338:18;;;5331:60;2388:90:27;;-1:-1:-1;2539:19:27;;;;;;5270:18:31;;2539:60:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:57:27;;-1:-1:-1;;;2656:57:27;;-1:-1:-1;;;;;;;;;;;2656:57:27;;;5297:25:31;2702:10:27;5338:18:31;;;5331:60;-1:-1:-1;;;;;2656:19:27;;;-1:-1:-1;2656:19:27;;-1:-1:-1;5270:18:31;;2656:57:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;2783:25:27;;2763:17;2783:25;;;:5;:25;;;;;;;;2814:22;;-1:-1:-1;;;;;;2842:18:27;;;-1:-1:-1;;;2842:18:27;;;2878:10;2866:23;;2814:22;2866:11;;;:23;;;;;;:30;;-1:-1:-1;;2866:30:27;;;;;2902:10;:35;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2902:35:27;;;;;;;2943:16;:18;;2783:25;;-1:-1:-1;2943:16:27;:18;;;:::i;:::-;;;;-1:-1:-1;;3018:51:27;;-1:-1:-1;;;3018:51:27;;-1:-1:-1;;;;;178:32:31;;;3018:51:27;;;160::31;-1:-1:-1;;3018:15:27;:27;;;;;;133:18:31;;3018:51:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3018:65:27;;3014:140;;3093:54;;-1:-1:-1;;;3093:54:27;;-1:-1:-1;;;;;178:32:31;;;3093:54:27;;;160:51:31;3093:15:27;:30;;;;133:18:31;;3093:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3014:140;3194:51;;-1:-1:-1;;;3194:51:27;;-1:-1:-1;;;;;178:32:31;;;3194:51:27;;;160::31;3194:15:27;:27;;;;133:18:31;;3194:51:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3159:13;;;:87;;-1:-1:-1;;;;;;3159:87:27;-1:-1:-1;;;;;3159:87:27;;;;;;3258:67;;;;;;;;;3270:10;;3258:67;;-1:-1:-1;;3258:67:27;-1:-1:-1;3339:9:27;1885:1468;-1:-1:-1;;;;;;1885:1468:27:o;3357:390::-;-1:-1:-1;;;;;3431:25:27;;3411:17;3431:25;;;:5;:25;;;;;3471:11;;-1:-1:-1;;;3471:11:27;;;;3463:42;;;;-1:-1:-1;;;3463:42:27;;8475:2:31;3463:42:27;;;8457:21:31;8514:2;8494:18;;;8487:30;-1:-1:-1;;;8533:18:31;;;8526:48;8591:18;;3463:42:27;8273:342:31;3463:42:27;3531:10;3519:23;;;;:11;;;:23;;;;;;;;3511:57;;;;-1:-1:-1;;;3511:57:27;;;;;;;:::i;:::-;3599:19;;-1:-1:-1;;;;3599:19:27;;;3646:40;;;-1:-1:-1;;;3646:40:27;;;;-1:-1:-1;;;;;3646:38:27;;;;;:40;;;;;3613:5;;3646:40;;;;;;;3613:5;3646:38;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3698:44:27;;-1:-1:-1;;;;;3698:44:27;;;-1:-1:-1;3711:10:27;;-1:-1:-1;3698:44:27;;;;;3405:342;3357:390;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4592:451:27:-;-1:-1:-1;;;;;4689:25:27;;4669:17;4689:25;;;:5;:25;;;;;4729:11;;-1:-1:-1;;;4729:11:27;;;;4721:43;;;;-1:-1:-1;;;4721:43:27;;4627:2:31;4721:43:27;;;4609:21:31;4666:2;4646:18;;;4639:30;-1:-1:-1;;;4685:18:31;;;4678:49;4744:18;;4721:43:27;4425:343:31;4721:43:27;4790:10;4778:23;;;;:11;;;:23;;;;;;;;4770:57;;;;-1:-1:-1;;;4770:57:27;;;;;;;:::i;:::-;4884:10;;:54;;-1:-1:-1;;;4884:54:27;;-1:-1:-1;;;;;;;;;;;4884:54:27;;;5297:25:31;-1:-1:-1;;;;;5358:32:31;;;5338:18;;;5331:60;4884:10:27;;;;:21;;5270:18:31;;4884:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4945:18:27;;;4966:5;4945:18;;;:11;;;:18;;;;;;:26;;-1:-1:-1;;4945:26:27;;;4983:55;4945:18;;4983:55;;;5000:10;;4983:55;;;4663:380;4592:451;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;8822:2:31;2161:73:4::1;::::0;::::1;8804:21:31::0;8861:2;8841:18;;;8834:30;8900:34;8880:18;;;8873:62;-1:-1:-1;;;8951:18:31;;;8944:36;8997:19;;2161:73:4::1;8620:402:31::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:16;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;9229:2:31;1414:68:4;;;9211:21:31;;;9248:18;;;9241:30;9307:34;9287:18;;;9280:62;9359:18;;1414:68:4;9027:356:31;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;404:139:31:-;-1:-1:-1;;;;;487:31:31;;477:42;;467:70;;533:1;530;523:12;548:419;631:6;639;692:2;680:9;671:7;667:23;663:32;660:52;;;708:1;705;698:12;660:52;747:9;734:23;766:39;799:5;766:39;:::i;:::-;824:5;-1:-1:-1;881:2:31;866:18;;853:32;894:41;853:32;894:41;:::i;:::-;954:7;944:17;;;548:419;;;;;:::o;1164:180::-;1223:6;1276:2;1264:9;1255:7;1251:23;1247:32;1244:52;;;1292:1;1289;1282:12;1244:52;-1:-1:-1;1315:23:31;;1164:180;-1:-1:-1;1164:180:31:o;1349:255::-;1408:6;1461:2;1449:9;1440:7;1436:23;1432:32;1429:52;;;1477:1;1474;1467:12;1429:52;1516:9;1503:23;1535:39;1568:5;1535:39;:::i;:::-;1593:5;1349:255;-1:-1:-1;;;1349:255:31:o;2323:127::-;2384:10;2379:3;2375:20;2372:1;2365:31;2415:4;2412:1;2405:15;2439:4;2436:1;2429:15;2455:719;2498:5;2551:3;2544:4;2536:6;2532:17;2528:27;2518:55;;2569:1;2566;2559:12;2518:55;2605:6;2592:20;2631:18;2668:2;2664;2661:10;2658:36;;;2674:18;;:::i;:::-;2749:2;2743:9;2717:2;2803:13;;-1:-1:-1;;2799:22:31;;;2823:2;2795:31;2791:40;2779:53;;;2847:18;;;2867:22;;;2844:46;2841:72;;;2893:18;;:::i;:::-;2933:10;2929:2;2922:22;2968:2;2960:6;2953:18;3014:3;3007:4;3002:2;2994:6;2990:15;2986:26;2983:35;2980:55;;;3031:1;3028;3021:12;2980:55;3095:2;3088:4;3080:6;3076:17;3069:4;3061:6;3057:17;3044:54;3142:1;3135:4;3130:2;3122:6;3118:15;3114:26;3107:37;3162:6;3153:15;;;;;;2455:719;;;;:::o;3179:770::-;3300:6;3308;3316;3324;3377:3;3365:9;3356:7;3352:23;3348:33;3345:53;;;3394:1;3391;3384:12;3345:53;3434:9;3421:23;3463:18;3504:2;3496:6;3493:14;3490:34;;;3520:1;3517;3510:12;3490:34;3543:50;3585:7;3576:6;3565:9;3561:22;3543:50;:::i;:::-;3533:60;;3646:2;3635:9;3631:18;3618:32;3602:48;;3675:2;3665:8;3662:16;3659:36;;;3691:1;3688;3681:12;3659:36;;3714:52;3758:7;3747:8;3736:9;3732:24;3714:52;:::i;:::-;3704:62;;;3813:2;3802:9;3798:18;3785:32;3775:42;;3867:2;3856:9;3852:18;3839:32;3880:39;3913:5;3880:39;:::i;:::-;3179:770;;;;-1:-1:-1;3179:770:31;;-1:-1:-1;;3179:770:31:o;4773:345::-;4975:2;4957:21;;;5014:2;4994:18;;;4987:30;-1:-1:-1;;;5048:2:31;5033:18;;5026:51;5109:2;5094:18;;4773:345::o;6504:277::-;6571:6;6624:2;6612:9;6603:7;6599:23;6595:32;6592:52;;;6640:1;6637;6630:12;6592:52;6672:9;6666:16;6725:5;6718:13;6711:21;6704:5;6701:32;6691:60;;6747:1;6744;6737:12;6786:423;6828:3;6866:5;6860:12;6893:6;6888:3;6881:19;6918:1;6928:162;6942:6;6939:1;6936:13;6928:162;;;7004:4;7060:13;;;7056:22;;7050:29;7032:11;;;7028:20;;7021:59;6957:12;6928:162;;;6932:3;7135:1;7128:4;7119:6;7114:3;7110:16;7106:27;7099:38;7198:4;7191:2;7187:7;7182:2;7174:6;7170:15;7166:29;7161:3;7157:39;7153:50;7146:57;;;6786:423;;;;:::o;7214:553::-;7467:3;7456:9;7449:22;7430:4;7494:46;7535:3;7524:9;7520:19;7512:6;7494:46;:::i;:::-;7588:9;7580:6;7576:22;7571:2;7560:9;7556:18;7549:50;7616:33;7642:6;7634;7616:33;:::i;:::-;7680:2;7665:18;;7658:34;;;;-1:-1:-1;;;;;;;7728:32:31;;;;7723:2;7708:18;;;7701:60;7608:41;7214:553;-1:-1:-1;;7214:553:31:o;7772:232::-;7811:3;7832:17;;;7829:140;;7891:10;7886:3;7882:20;7879:1;7872:31;7926:4;7923:1;7916:15;7954:4;7951:1;7944:15;7829:140;-1:-1:-1;7996:1:31;7985:13;;7772:232::o;8009:259::-;8079:6;8132:2;8120:9;8111:7;8107:23;8103:32;8100:52;;;8148:1;8145;8138:12;8100:52;8180:9;8174:16;8199:39;8232:5;8199:39;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./FantasyERC20.sol\";\nimport \"./RealityETH_ERC20_Factory.sol\";\nimport \"./PredictionMarketV3Factory.sol\";\n\n// openzeppelin ownable contract import\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract PredictionMarketV3Controller is Ownable, ReentrancyGuard {\n  address public immutable PMV3; // PredictionMarketV3 contract\n  address public immutable PMV3Factory; // PredictionMarketFactory contract\n\n  RealityETH_ERC20_Factory public immutable realitioFactory;\n\n  event LandCreated(address indexed user, address indexed token, address indexed tokenToAnswer);\n\n  event LandDisabled(address indexed user, address indexed token);\n\n  event LandEnabled(address indexed user, address indexed token);\n\n  event LandOffsetUnlocked(address indexed user, address indexed token);\n\n  event LandAdminAdded(address indexed user, address indexed token, address indexed admin);\n\n  event LandAdminRemoved(address indexed user, address indexed token, address indexed admin);\n\n  struct Land {\n    FantasyERC20 token;\n    bool active;\n    mapping(address => bool) admins;\n    IRealityETH_IERC20 realitio;\n  }\n\n  mapping(address => Land) public lands;\n  address[] public landTokens;\n  uint256 public landTokensLength;\n\n  constructor(\n    address _PMV3,\n    address _realitioLibraryAddress,\n    address _PMV3Factory\n  ) {\n    require(_PMV3Factory != address(0), \"PMV3Factory address cannot be 0 address\");\n\n    PMV3 = _PMV3;\n    realitioFactory = new RealityETH_ERC20_Factory(_realitioLibraryAddress);\n    PMV3Factory = _PMV3Factory;\n  }\n\n  // lockAmount is the amount of tokens that the user needs to lock to create a land\n  // by locking the amount the factory will create a fantasyERC20 token and store it in the contract\n  // the user will be the admin of the land\n  function createLand(\n    string memory name,\n    string memory symbol,\n    uint256 tokenAmountToClaim,\n    IERC20 tokenToAnswer\n  ) external returns (FantasyERC20) {\n\n    require(address(tokenToAnswer) != address(0), \"Token to answer cannot be 0 address\");\n\n    PredictionMarketV3Factory predictionMarketFactory = PredictionMarketV3Factory(PMV3Factory); // FIXME change to interface\n    require(predictionMarketFactory.isPMControllerAdmin(this, msg.sender));\n\n    // create a new fantasyERC20 token\n    FantasyERC20 landToken = new FantasyERC20(name, symbol, tokenAmountToClaim, address(PMV3));\n\n    // adding minting privileges to the PMV3 contract\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), address(PMV3));\n    // adding minting privileges to the msg.sender\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), msg.sender);\n\n    // store the new token in the contract\n    Land storage land = lands[address(landToken)];\n    land.token = landToken;\n    land.active = true;\n    land.admins[msg.sender] = true;\n    landTokens.push(address(landToken));\n    landTokensLength++;\n\n    // creating the realityETH_ERC20 contract\n    if (realitioFactory.deployments(address(tokenToAnswer)) == address(0)) {\n      realitioFactory.createInstance(address(tokenToAnswer));\n    }\n    land.realitio = IRealityETH_IERC20(realitioFactory.deployments(address(tokenToAnswer)));\n\n    emit LandCreated(msg.sender, address(landToken), address(tokenToAnswer));\n\n    return landToken;\n  }\n\n  function disableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land is not active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // disable the land\n    land.active = false;\n\n    // pausing token\n    FantasyERC20(address(landToken)).pause();\n\n    emit LandDisabled(msg.sender, address(landToken));\n  }\n\n  function enableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(!land.active, \"Land is already active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // enable the land\n    land.active = true;\n\n    // unpausing token\n    FantasyERC20(address(landToken)).unpause();\n\n    emit LandEnabled(msg.sender, address(landToken));\n  }\n\n  function addAdminToLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // adding minting privileges to the admin\n    land.token.grantRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = true;\n\n    emit LandAdminAdded(msg.sender, address(landToken), admin);\n  }\n\n  function removeAdminFromLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // removing minting privileges from the admin\n    land.token.revokeRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = false;\n\n    emit LandAdminRemoved(msg.sender, address(landToken), admin);\n  }\n\n  function isAllowedToCreateMarket(IERC20 marketToken, address user) public view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isAllowedToResolveMarket(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isIERC20TokenSocial(IERC20 marketToken) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active;\n  }\n\n  function isLandAdmin(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.admins[user];\n  }\n}\n",
  "sourcePath": "/Users/andregoncalves/sideprojects/polkamarkets/polkamarkets-js/contracts/PredictionMarketV3Controller.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarketV3Controller.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Address": [
        2367
      ],
      "CeilDiv": [
        4901
      ],
      "Context": [
        2389
      ],
      "ERC165": [
        2588
      ],
      "ERC20": [
        1400
      ],
      "ERC20Burnable": [
        1522
      ],
      "ERC20Pausable": [
        1559
      ],
      "ERC20PresetMinterPauser": [
        1756
      ],
      "EnumerableSet": [
        4078
      ],
      "FantasyERC20": [
        4229
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "IERC165": [
        2600
      ],
      "IERC20": [
        1478
      ],
      "IERC20Metadata": [
        1584
      ],
      "IERC20Permit": [
        1620
      ],
      "IFantasyERC20": [
        4262
      ],
      "IPredictionMarketV3Manager": [
        4294
      ],
      "IRealityETH_ERC20": [
        4865
      ],
      "IRealityETH_IERC20": [
        11823
      ],
      "IWETH": [
        4928
      ],
      "Math": [
        3465
      ],
      "Ownable": [
        651
      ],
      "Pausable": [
        759
      ],
      "PredictionMarketV3": [
        9625
      ],
      "PredictionMarketV3Controller": [
        10267
      ],
      "PredictionMarketV3Factory": [
        10949
      ],
      "RealityETH_ERC20_Factory": [
        11962
      ],
      "ReentrancyGuard": [
        813
      ],
      "SafeERC20": [
        2037
      ],
      "Strings": [
        2564
      ]
    },
    "id": 10268,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9627,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:27"
      },
      {
        "absolutePath": "project:/contracts/FantasyERC20.sol",
        "file": "./FantasyERC20.sol",
        "id": 9628,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10268,
        "sourceUnit": 4230,
        "src": "58:28:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RealityETH_ERC20_Factory.sol",
        "file": "./RealityETH_ERC20_Factory.sol",
        "id": 9629,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10268,
        "sourceUnit": 11963,
        "src": "87:40:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PredictionMarketV3Factory.sol",
        "file": "./PredictionMarketV3Factory.sol",
        "id": 9630,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10268,
        "sourceUnit": 10950,
        "src": "128:41:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9631,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10268,
        "sourceUnit": 652,
        "src": "211:52:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 9632,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10268,
        "sourceUnit": 814,
        "src": "264:62:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9633,
              "name": "Ownable",
              "nameLocations": [
                "369:7:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "369:7:27"
            },
            "id": 9634,
            "nodeType": "InheritanceSpecifier",
            "src": "369:7:27"
          },
          {
            "baseName": {
              "id": 9635,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "378:15:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 813,
              "src": "378:15:27"
            },
            "id": 9636,
            "nodeType": "InheritanceSpecifier",
            "src": "378:15:27"
          }
        ],
        "canonicalName": "PredictionMarketV3Controller",
        "contractDependencies": [
          4229,
          11962
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10267,
        "linearizedBaseContracts": [
          10267,
          813,
          651,
          2389
        ],
        "name": "PredictionMarketV3Controller",
        "nameLocation": "337:28:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1cbe8a65",
            "id": 9638,
            "mutability": "immutable",
            "name": "PMV3",
            "nameLocation": "423:4:27",
            "nodeType": "VariableDeclaration",
            "scope": 10267,
            "src": "398:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9637,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "398:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c27c26c",
            "id": 9640,
            "mutability": "immutable",
            "name": "PMV3Factory",
            "nameLocation": "487:11:27",
            "nodeType": "VariableDeclaration",
            "scope": 10267,
            "src": "462:36:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9639,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e3dd8ba",
            "id": 9643,
            "mutability": "immutable",
            "name": "realitioFactory",
            "nameLocation": "581:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 10267,
            "src": "539:57:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
              "typeString": "contract RealityETH_ERC20_Factory"
            },
            "typeName": {
              "id": 9642,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9641,
                "name": "RealityETH_ERC20_Factory",
                "nameLocations": [
                  "539:24:27"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11962,
                "src": "539:24:27"
              },
              "referencedDeclaration": 11962,
              "src": "539:24:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                "typeString": "contract RealityETH_ERC20_Factory"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03",
            "id": 9651,
            "name": "LandCreated",
            "nameLocation": "607:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9645,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "635:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "619:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9647,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "657:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "641:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9649,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "680:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "664:29:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:76:27"
            },
            "src": "601:94:27"
          },
          {
            "anonymous": false,
            "eventSelector": "8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc4",
            "id": 9657,
            "name": "LandDisabled",
            "nameLocation": "705:12:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9653,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "734:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9657,
                  "src": "718:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9655,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "756:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9657,
                  "src": "740:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "717:45:27"
            },
            "src": "699:64:27"
          },
          {
            "anonymous": false,
            "eventSelector": "db2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f650",
            "id": 9663,
            "name": "LandEnabled",
            "nameLocation": "773:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9659,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "801:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9663,
                  "src": "785:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9661,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "823:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9663,
                  "src": "807:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:45:27"
            },
            "src": "767:63:27"
          },
          {
            "anonymous": false,
            "eventSelector": "d4f6618e5a71236611ad6e76f5eb1b23884c77efbb410f3beedada00549181b3",
            "id": 9669,
            "name": "LandOffsetUnlocked",
            "nameLocation": "840:18:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9665,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "875:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9669,
                  "src": "859:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9667,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "897:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9669,
                  "src": "881:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "858:45:27"
            },
            "src": "834:70:27"
          },
          {
            "anonymous": false,
            "eventSelector": "b8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68",
            "id": 9677,
            "name": "LandAdminAdded",
            "nameLocation": "914:14:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9671,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "945:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9677,
                  "src": "929:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9673,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "967:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9677,
                  "src": "951:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9675,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "990:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9677,
                  "src": "974:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "928:68:27"
            },
            "src": "908:89:27"
          },
          {
            "anonymous": false,
            "eventSelector": "5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560",
            "id": 9685,
            "name": "LandAdminRemoved",
            "nameLocation": "1007:16:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9679,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1040:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9685,
                  "src": "1024:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9681,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1062:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9685,
                  "src": "1046:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9683,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1085:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9685,
                  "src": "1069:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:68:27"
            },
            "src": "1001:91:27"
          },
          {
            "canonicalName": "PredictionMarketV3Controller.Land",
            "id": 9698,
            "members": [
              {
                "constant": false,
                "id": 9688,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1127:5:27",
                "nodeType": "VariableDeclaration",
                "scope": 9698,
                "src": "1114:18:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                  "typeString": "contract FantasyERC20"
                },
                "typeName": {
                  "id": 9687,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9686,
                    "name": "FantasyERC20",
                    "nameLocations": [
                      "1114:12:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4229,
                    "src": "1114:12:27"
                  },
                  "referencedDeclaration": 4229,
                  "src": "1114:12:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9690,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1143:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 9698,
                "src": "1138:11:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9689,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1138:4:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9694,
                "mutability": "mutable",
                "name": "admins",
                "nameLocation": "1180:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 9698,
                "src": "1155:31:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 9693,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 9691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1155:24:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 9692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9697,
                "mutability": "mutable",
                "name": "realitio",
                "nameLocation": "1211:8:27",
                "nodeType": "VariableDeclaration",
                "scope": 9698,
                "src": "1192:27:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11823",
                  "typeString": "contract IRealityETH_IERC20"
                },
                "typeName": {
                  "id": 9696,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9695,
                    "name": "IRealityETH_IERC20",
                    "nameLocations": [
                      "1192:18:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11823,
                    "src": "1192:18:27"
                  },
                  "referencedDeclaration": 11823,
                  "src": "1192:18:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11823",
                    "typeString": "contract IRealityETH_IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Land",
            "nameLocation": "1103:4:27",
            "nodeType": "StructDefinition",
            "scope": 10267,
            "src": "1096:128:27",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33b22760",
            "id": 9703,
            "mutability": "mutable",
            "name": "lands",
            "nameLocation": "1260:5:27",
            "nodeType": "VariableDeclaration",
            "scope": 10267,
            "src": "1228:37:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
              "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
            },
            "typeName": {
              "id": 9702,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9699,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1236:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1228:24:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9701,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9700,
                  "name": "Land",
                  "nameLocations": [
                    "1247:4:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9698,
                  "src": "1247:4:27"
                },
                "referencedDeclaration": 9698,
                "src": "1247:4:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                  "typeString": "struct PredictionMarketV3Controller.Land"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "30ccd17a",
            "id": 9706,
            "mutability": "mutable",
            "name": "landTokens",
            "nameLocation": "1286:10:27",
            "nodeType": "VariableDeclaration",
            "scope": 10267,
            "src": "1269:27:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9704,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1269:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9705,
              "nodeType": "ArrayTypeName",
              "src": "1269:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1311758b",
            "id": 9708,
            "mutability": "mutable",
            "name": "landTokensLength",
            "nameLocation": "1315:16:27",
            "nodeType": "VariableDeclaration",
            "scope": 10267,
            "src": "1300:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9707,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1300:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9743,
              "nodeType": "Block",
              "src": "1434:217:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9718,
                          "name": "_PMV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9714,
                          "src": "1448:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1472:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1464:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9719,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1464:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1464:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1448:26:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f7420626520302061646472657373",
                        "id": 9724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1476:41:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        },
                        "value": "PMV3Factory address cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        }
                      ],
                      "id": 9717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1440:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1440:78:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9726,
                  "nodeType": "ExpressionStatement",
                  "src": "1440:78:27"
                },
                {
                  "expression": {
                    "id": 9729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9727,
                      "name": "PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9638,
                      "src": "1525:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9728,
                      "name": "_PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9710,
                      "src": "1532:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1525:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9730,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:12:27"
                },
                {
                  "expression": {
                    "id": 9737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9731,
                      "name": "realitioFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9643,
                      "src": "1543:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9735,
                          "name": "_realitioLibraryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9712,
                          "src": "1590:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1561:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_RealityETH_ERC20_Factory_$11962_$",
                          "typeString": "function (address) returns (contract RealityETH_ERC20_Factory)"
                        },
                        "typeName": {
                          "id": 9733,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9732,
                            "name": "RealityETH_ERC20_Factory",
                            "nameLocations": [
                              "1565:24:27"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11962,
                            "src": "1565:24:27"
                          },
                          "referencedDeclaration": 11962,
                          "src": "1565:24:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        }
                      },
                      "id": 9736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1561:53:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "src": "1543:71:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                      "typeString": "contract RealityETH_ERC20_Factory"
                    }
                  },
                  "id": 9738,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:71:27"
                },
                {
                  "expression": {
                    "id": 9741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9739,
                      "name": "PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9640,
                      "src": "1620:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9740,
                      "name": "_PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9714,
                      "src": "1634:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1620:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9742,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:26:27"
                }
              ]
            },
            "id": 9744,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9710,
                  "mutability": "mutable",
                  "name": "_PMV3",
                  "nameLocation": "1361:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9744,
                  "src": "1353:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9712,
                  "mutability": "mutable",
                  "name": "_realitioLibraryAddress",
                  "nameLocation": "1380:23:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9744,
                  "src": "1372:31:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9714,
                  "mutability": "mutable",
                  "name": "_PMV3Factory",
                  "nameLocation": "1417:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9744,
                  "src": "1409:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:86:27"
            },
            "returnParameters": {
              "id": 9716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:27"
            },
            "scope": 10267,
            "src": "1336:315:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9920,
              "nodeType": "Block",
              "src": "2049:1304:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9762,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9753,
                              "src": "2072:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2064:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9760,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2064:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:22:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2098:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2090:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9764,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2090:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2090:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2064:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472657373",
                        "id": 9769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2102:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        },
                        "value": "Token to answer cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        }
                      ],
                      "id": 9759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2056:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:84:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9771,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:84:27"
                },
                {
                  "assignments": [
                    9774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9774,
                      "mutability": "mutable",
                      "name": "predictionMarketFactory",
                      "nameLocation": "2173:23:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9920,
                      "src": "2147:49:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10949",
                        "typeString": "contract PredictionMarketV3Factory"
                      },
                      "typeName": {
                        "id": 9773,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9772,
                          "name": "PredictionMarketV3Factory",
                          "nameLocations": [
                            "2147:25:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10949,
                          "src": "2147:25:27"
                        },
                        "referencedDeclaration": 10949,
                        "src": "2147:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10949",
                          "typeString": "contract PredictionMarketV3Factory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9778,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9776,
                        "name": "PMV3Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9640,
                        "src": "2225:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9775,
                      "name": "PredictionMarketV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10949,
                      "src": "2199:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PredictionMarketV3Factory_$10949_$",
                        "typeString": "type(contract PredictionMarketV3Factory)"
                      }
                    },
                    "id": 9777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:38:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10949",
                      "typeString": "contract PredictionMarketV3Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2147:90:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9782,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2324:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10267",
                              "typeString": "contract PredictionMarketV3Controller"
                            }
                          },
                          {
                            "expression": {
                              "id": 9783,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2330:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2334:6:27",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2330:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10267",
                              "typeString": "contract PredictionMarketV3Controller"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9780,
                            "name": "predictionMarketFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9774,
                            "src": "2280:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Factory_$10949",
                              "typeString": "contract PredictionMarketV3Factory"
                            }
                          },
                          "id": 9781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2304:19:27",
                          "memberName": "isPMControllerAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10948,
                          "src": "2280:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_PredictionMarketV3Controller_$10267_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (contract PredictionMarketV3Controller,address) view external returns (bool)"
                          }
                        },
                        "id": 9785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2280:61:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2272:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:70:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9787,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:70:27"
                },
                {
                  "assignments": [
                    9790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9790,
                      "mutability": "mutable",
                      "name": "landToken",
                      "nameLocation": "2401:9:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9920,
                      "src": "2388:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      },
                      "typeName": {
                        "id": 9789,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9788,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2388:12:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2388:12:27"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2388:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9802,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9794,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9746,
                        "src": "2430:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9795,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9748,
                        "src": "2436:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9796,
                        "name": "tokenAmountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9750,
                        "src": "2444:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9799,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9638,
                            "src": "2472:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2464:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9797,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2464:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2464:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2413:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_FantasyERC20_$4229_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract FantasyERC20)"
                      },
                      "typeName": {
                        "id": 9792,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9791,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2417:12:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2417:12:27"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2417:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      }
                    },
                    "id": 9801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:65:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2388:90:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2569:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9806,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2559:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2559:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9811,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9638,
                            "src": "2593:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2585:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9809,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2585:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2585:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9803,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9790,
                        "src": "2539:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2549:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2539:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2539:60:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9814,
                  "nodeType": "ExpressionStatement",
                  "src": "2539:60:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2686:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9818,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2676:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2676:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 9821,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2702:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2706:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2702:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9815,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9790,
                        "src": "2656:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2666:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2656:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2656:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9824,
                  "nodeType": "ExpressionStatement",
                  "src": "2656:57:27"
                },
                {
                  "assignments": [
                    9827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9827,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "2776:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9920,
                      "src": "2763:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9826,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9825,
                          "name": "Land",
                          "nameLocations": [
                            "2763:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "2763:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "2763:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9834,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9828,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "2783:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9833,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9831,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9790,
                          "src": "2797:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        ],
                        "id": 9830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2789:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9829,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2789:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2789:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2783:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2763:45:27"
                },
                {
                  "expression": {
                    "id": 9839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9835,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9827,
                        "src": "2814:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9837,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2819:5:27",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9688,
                      "src": "2814:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9838,
                      "name": "landToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9790,
                      "src": "2827:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "src": "2814:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "id": 9840,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:22:27"
                },
                {
                  "expression": {
                    "id": 9845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9841,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9827,
                        "src": "2842:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9843,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2847:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "2842:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2856:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2842:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9846,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:18:27"
                },
                {
                  "expression": {
                    "id": 9854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 9847,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9827,
                          "src": "2866:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 9851,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2871:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "2866:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9852,
                      "indexExpression": {
                        "expression": {
                          "id": 9849,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2878:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2882:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2878:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2866:23:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2892:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2866:30:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9855,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9861,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9790,
                            "src": "2926:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2918:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2918:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2918:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9856,
                        "name": "landTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9706,
                        "src": "2902:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2913:4:27",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2902:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 9863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2902:35:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9864,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:35:27"
                },
                {
                  "expression": {
                    "id": 9866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2943:18:27",
                    "subExpression": {
                      "id": 9865,
                      "name": "landTokensLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9708,
                      "src": "2943:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9867,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:18:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9872,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9753,
                              "src": "3054:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3046:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9870,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3046:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3046:22:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 9868,
                          "name": "realitioFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9643,
                          "src": "3018:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        },
                        "id": 9869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3034:11:27",
                        "memberName": "deployments",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11829,
                        "src": "3018:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) view external returns (address)"
                        }
                      },
                      "id": 9874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3018:51:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3081:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3073:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3073:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3073:10:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3018:65:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9890,
                  "nodeType": "IfStatement",
                  "src": "3014:140:27",
                  "trueBody": {
                    "id": 9889,
                    "nodeType": "Block",
                    "src": "3085:69:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9885,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9753,
                                  "src": "3132:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3124:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9883,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3124:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3124:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9880,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9643,
                              "src": "3093:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3109:14:27",
                            "memberName": "createInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11961,
                            "src": "3093:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 9887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3093:54:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9888,
                        "nodeType": "ExpressionStatement",
                        "src": "3093:54:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9891,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9827,
                        "src": "3159:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3164:8:27",
                      "memberName": "realitio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9697,
                      "src": "3159:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11823",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9899,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9753,
                                  "src": "3230:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3222:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9897,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3222:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3222:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9895,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9643,
                              "src": "3194:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11962",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3210:11:27",
                            "memberName": "deployments",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11829,
                            "src": "3194:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 9901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3194:51:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9894,
                        "name": "IRealityETH_IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11823,
                        "src": "3175:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRealityETH_IERC20_$11823_$",
                          "typeString": "type(contract IRealityETH_IERC20)"
                        }
                      },
                      "id": 9902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3175:71:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11823",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "src": "3159:87:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11823",
                      "typeString": "contract IRealityETH_IERC20"
                    }
                  },
                  "id": 9904,
                  "nodeType": "ExpressionStatement",
                  "src": "3159:87:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9906,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3270:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3274:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3270:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9910,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9790,
                            "src": "3290:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3282:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9908,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3282:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3282:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9914,
                            "name": "tokenToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9753,
                            "src": "3310:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3302:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3302:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3302:22:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9905,
                      "name": "LandCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9651,
                      "src": "3258:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 9916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:67:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9917,
                  "nodeType": "EmitStatement",
                  "src": "3253:72:27"
                },
                {
                  "expression": {
                    "id": 9918,
                    "name": "landToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9790,
                    "src": "3339:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "functionReturnParameters": 9758,
                  "id": 9919,
                  "nodeType": "Return",
                  "src": "3332:16:27"
                }
              ]
            },
            "functionSelector": "67d73c91",
            "id": 9921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLand",
            "nameLocation": "1894:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9746,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1924:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9921,
                  "src": "1910:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9745,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9748,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1948:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9921,
                  "src": "1934:20:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9750,
                  "mutability": "mutable",
                  "name": "tokenAmountToClaim",
                  "nameLocation": "1968:18:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9921,
                  "src": "1960:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9753,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "1999:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9921,
                  "src": "1992:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9752,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9751,
                      "name": "IERC20",
                      "nameLocations": [
                        "1992:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "1992:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "1992:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:112:27"
            },
            "returnParameters": {
              "id": 9758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9921,
                  "src": "2035:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  },
                  "typeName": {
                    "id": 9756,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9755,
                      "name": "FantasyERC20",
                      "nameLocations": [
                        "2035:12:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4229,
                      "src": "2035:12:27"
                    },
                    "referencedDeclaration": 4229,
                    "src": "2035:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2034:14:27"
            },
            "scope": 10267,
            "src": "1885:1468:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9976,
              "nodeType": "Block",
              "src": "3405:342:27",
              "statements": [
                {
                  "assignments": [
                    9929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9929,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3424:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9976,
                      "src": "3411:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9928,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9927,
                          "name": "Land",
                          "nameLocations": [
                            "3411:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "3411:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "3411:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9936,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9930,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "3431:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9935,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9933,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9924,
                          "src": "3445:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 9932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3437:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3437:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3437:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3431:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3411:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9938,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9929,
                          "src": "3471:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 9939,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3476:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9690,
                        "src": "3471:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "id": 9940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3484:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        },
                        "value": "Land is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        }
                      ],
                      "id": 9937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3463:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3463:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9942,
                  "nodeType": "ExpressionStatement",
                  "src": "3463:42:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 9944,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9929,
                            "src": "3519:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 9945,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3524:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "3519:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 9948,
                        "indexExpression": {
                          "expression": {
                            "id": 9946,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3531:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3535:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3531:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3519:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 9949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3544:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 9943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3511:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3511:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9951,
                  "nodeType": "ExpressionStatement",
                  "src": "3511:57:27"
                },
                {
                  "expression": {
                    "id": 9956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9952,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9929,
                        "src": "3599:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3604:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "3599:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 9955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3613:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3599:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9957,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:19:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9961,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9924,
                                "src": "3667:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 9960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3659:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3659:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3659:18:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9958,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "3646:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 9963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3646:32:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3679:5:27",
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "3646:38:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3646:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "3646:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9968,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3711:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3715:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3711:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9972,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9924,
                            "src": "3731:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3723:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3723:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3723:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9967,
                      "name": "LandDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9657,
                      "src": "3698:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3698:44:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9975,
                  "nodeType": "EmitStatement",
                  "src": "3693:49:27"
                }
              ]
            },
            "functionSelector": "70e92078",
            "id": 9977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableLand",
            "nameLocation": "3366:11:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9924,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3385:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9977,
                  "src": "3378:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9922,
                      "name": "IERC20",
                      "nameLocations": [
                        "3378:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3378:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3378:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3377:18:27"
            },
            "returnParameters": {
              "id": 9926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:0:27"
            },
            "scope": 10267,
            "src": "3357:390:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10033,
              "nodeType": "Block",
              "src": "3798:348:27",
              "statements": [
                {
                  "assignments": [
                    9985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9985,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3817:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10033,
                      "src": "3804:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9984,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9983,
                          "name": "Land",
                          "nameLocations": [
                            "3804:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "3804:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "3804:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9992,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9986,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "3824:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9991,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9989,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9980,
                          "src": "3838:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 9988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3830:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9987,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3830:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3830:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3824:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3804:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3864:12:27",
                        "subExpression": {
                          "expression": {
                            "id": 9994,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9985,
                            "src": "3865:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 9995,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3870:6:27",
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9690,
                          "src": "3865:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "id": 9997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3878:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        },
                        "value": "Land is already active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        }
                      ],
                      "id": 9993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3856:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9999,
                  "nodeType": "ExpressionStatement",
                  "src": "3856:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10001,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9985,
                            "src": "3917:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10002,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3922:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "3917:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10005,
                        "indexExpression": {
                          "expression": {
                            "id": 10003,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3929:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3933:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3929:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3917:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3942:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3909:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10008,
                  "nodeType": "ExpressionStatement",
                  "src": "3909:57:27"
                },
                {
                  "expression": {
                    "id": 10013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10009,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "3996:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10011,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4001:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "3996:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4010:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3996:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10014,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:18:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10018,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9980,
                                "src": "4065:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4057:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10016,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4057:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4057:18:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10015,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "4044:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 10020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4044:32:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4077:7:27",
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "4044:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4044:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10023,
                  "nodeType": "ExpressionStatement",
                  "src": "4044:42:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10025,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4110:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4114:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4110:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10029,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9980,
                            "src": "4130:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4122:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4122:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4122:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10024,
                      "name": "LandEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9663,
                      "src": "4098:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4098:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10032,
                  "nodeType": "EmitStatement",
                  "src": "4093:48:27"
                }
              ]
            },
            "functionSelector": "5d341ae5",
            "id": 10034,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableLand",
            "nameLocation": "3760:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9980,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3778:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10034,
                  "src": "3771:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9979,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9978,
                      "name": "IERC20",
                      "nameLocations": [
                        "3771:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3771:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3771:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3770:18:27"
            },
            "returnParameters": {
              "id": 9982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3798:0:27"
            },
            "scope": 10267,
            "src": "3751:395:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10096,
              "nodeType": "Block",
              "src": "4216:372:27",
              "statements": [
                {
                  "assignments": [
                    10044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10044,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4235:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10096,
                      "src": "4222:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10043,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10042,
                          "name": "Land",
                          "nameLocations": [
                            "4222:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "4222:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "4222:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10051,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10045,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "4242:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10050,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10048,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10037,
                          "src": "4256:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4248:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4248:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4248:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4242:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4222:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10053,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10044,
                          "src": "4282:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4287:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9690,
                        "src": "4282:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4295:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4274:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4274:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10057,
                  "nodeType": "ExpressionStatement",
                  "src": "4274:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10059,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10044,
                            "src": "4331:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10060,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4336:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "4331:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10063,
                        "indexExpression": {
                          "expression": {
                            "id": 10061,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4343:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4347:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4343:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4331:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4356:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4323:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4323:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10066,
                  "nodeType": "ExpressionStatement",
                  "src": "4323:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4464:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10072,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "4454:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4454:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10075,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10039,
                        "src": "4480:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10067,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10044,
                          "src": "4433:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10070,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4438:5:27",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9688,
                        "src": "4433:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4444:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "4433:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10077,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:53:27"
                },
                {
                  "expression": {
                    "id": 10084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10078,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10044,
                          "src": "4493:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10081,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4498:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "4493:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10082,
                      "indexExpression": {
                        "id": 10080,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10039,
                        "src": "4505:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4493:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4514:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4493:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10085,
                  "nodeType": "ExpressionStatement",
                  "src": "4493:25:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10087,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4545:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4549:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4545:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10091,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10037,
                            "src": "4565:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4557:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4557:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4557:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10093,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10039,
                        "src": "4577:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10086,
                      "name": "LandAdminAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9677,
                      "src": "4530:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4530:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10095,
                  "nodeType": "EmitStatement",
                  "src": "4525:58:27"
                }
              ]
            },
            "functionSelector": "4fe62a5b",
            "id": 10097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAdminToLand",
            "nameLocation": "4159:14:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10037,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4181:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10097,
                  "src": "4174:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10035,
                      "name": "IERC20",
                      "nameLocations": [
                        "4174:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4174:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4174:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10039,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4200:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10097,
                  "src": "4192:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4192:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4173:33:27"
            },
            "returnParameters": {
              "id": 10041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4216:0:27"
            },
            "scope": 10267,
            "src": "4150:438:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10159,
              "nodeType": "Block",
              "src": "4663:380:27",
              "statements": [
                {
                  "assignments": [
                    10107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10107,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4682:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10159,
                      "src": "4669:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10106,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10105,
                          "name": "Land",
                          "nameLocations": [
                            "4669:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "4669:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "4669:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10114,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10108,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "4689:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10113,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10111,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10100,
                          "src": "4703:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4695:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4695:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4695:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4689:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4669:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10116,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10107,
                          "src": "4729:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4734:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9690,
                        "src": "4729:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4742:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4721:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4721:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10120,
                  "nodeType": "ExpressionStatement",
                  "src": "4721:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10122,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10107,
                            "src": "4778:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10123,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4783:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9694,
                          "src": "4778:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10126,
                        "indexExpression": {
                          "expression": {
                            "id": 10124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4790:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4794:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4790:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4778:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4803:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4770:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10129,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4916:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10135,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "4906:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4906:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10138,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10102,
                        "src": "4932:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10130,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10107,
                          "src": "4884:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10133,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4889:5:27",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9688,
                        "src": "4884:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4895:10:27",
                      "memberName": "revokeRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "4884:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4884:54:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10140,
                  "nodeType": "ExpressionStatement",
                  "src": "4884:54:27"
                },
                {
                  "expression": {
                    "id": 10147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10141,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10107,
                          "src": "4945:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10144,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4950:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "4945:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10145,
                      "indexExpression": {
                        "id": 10143,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10102,
                        "src": "4957:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4945:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4966:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4945:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10148,
                  "nodeType": "ExpressionStatement",
                  "src": "4945:26:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5000:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5004:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5000:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10154,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10100,
                            "src": "5020:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5012:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5012:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5012:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10156,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10102,
                        "src": "5032:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10149,
                      "name": "LandAdminRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9685,
                      "src": "4983:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4983:55:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10158,
                  "nodeType": "EmitStatement",
                  "src": "4978:60:27"
                }
              ]
            },
            "functionSelector": "86b5c5b1",
            "id": 10160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdminFromLand",
            "nameLocation": "4601:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10100,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4628:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10160,
                  "src": "4621:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10099,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10098,
                      "name": "IERC20",
                      "nameLocations": [
                        "4621:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4621:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4621:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10102,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4647:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10160,
                  "src": "4639:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4639:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4620:33:27"
            },
            "returnParameters": {
              "id": 10104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4663:0:27"
            },
            "scope": 10267,
            "src": "4592:451:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10188,
              "nodeType": "Block",
              "src": "5141:104:27",
              "statements": [
                {
                  "assignments": [
                    10172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10172,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5160:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "5147:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10171,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10170,
                          "name": "Land",
                          "nameLocations": [
                            "5147:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "5147:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "5147:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10179,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10173,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "5167:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10178,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10176,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10163,
                          "src": "5181:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5173:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5173:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5173:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5167:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5147:47:27"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10180,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10172,
                        "src": "5208:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5213:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "5208:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 10182,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10172,
                          "src": "5223:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10183,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5228:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "5223:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10185,
                      "indexExpression": {
                        "id": 10184,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10165,
                        "src": "5235:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5223:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5208:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10169,
                  "id": 10187,
                  "nodeType": "Return",
                  "src": "5201:39:27"
                }
              ]
            },
            "functionSelector": "25c72059",
            "id": 10189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToCreateMarket",
            "nameLocation": "5056:23:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10163,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5087:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "5080:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10162,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10161,
                      "name": "IERC20",
                      "nameLocations": [
                        "5080:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5080:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5080:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10165,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5108:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "5100:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5100:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5079:34:27"
            },
            "returnParameters": {
              "id": 10169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "5135:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5135:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5134:6:27"
            },
            "scope": 10267,
            "src": "5047:198:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10217,
              "nodeType": "Block",
              "src": "5346:104:27",
              "statements": [
                {
                  "assignments": [
                    10201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10201,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5365:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10217,
                      "src": "5352:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10200,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10199,
                          "name": "Land",
                          "nameLocations": [
                            "5352:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "5352:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "5352:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10208,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10202,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "5372:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10207,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10205,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10192,
                          "src": "5386:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5378:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5378:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5378:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5372:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5352:47:27"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10209,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10201,
                        "src": "5413:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5418:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9690,
                      "src": "5413:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 10211,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10201,
                          "src": "5428:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5433:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9694,
                        "src": "5428:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10214,
                      "indexExpression": {
                        "id": 10213,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10194,
                        "src": "5440:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5428:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5413:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10198,
                  "id": 10216,
                  "nodeType": "Return",
                  "src": "5406:39:27"
                }
              ]
            },
            "functionSelector": "d1aeb5c2",
            "id": 10218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToResolveMarket",
            "nameLocation": "5258:24:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10192,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5290:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10218,
                  "src": "5283:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10191,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10190,
                      "name": "IERC20",
                      "nameLocations": [
                        "5283:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5283:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5283:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5311:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10218,
                  "src": "5303:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5303:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5282:34:27"
            },
            "returnParameters": {
              "id": 10198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10218,
                  "src": "5340:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5339:6:27"
            },
            "scope": 10267,
            "src": "5249:201:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10239,
              "nodeType": "Block",
              "src": "5532:83:27",
              "statements": [
                {
                  "assignments": [
                    10228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10228,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5551:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10239,
                      "src": "5538:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10227,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10226,
                          "name": "Land",
                          "nameLocations": [
                            "5538:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "5538:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "5538:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10235,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10229,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "5558:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10234,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10232,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10221,
                          "src": "5572:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5564:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5564:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5564:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5558:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5538:47:27"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 10236,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10228,
                      "src": "5599:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                      }
                    },
                    "id": 10237,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5604:6:27",
                    "memberName": "active",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9690,
                    "src": "5599:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10225,
                  "id": 10238,
                  "nodeType": "Return",
                  "src": "5592:18:27"
                }
              ]
            },
            "functionSelector": "d13acee1",
            "id": 10240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIERC20TokenSocial",
            "nameLocation": "5463:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10221,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5490:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10240,
                  "src": "5483:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10220,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10219,
                      "name": "IERC20",
                      "nameLocations": [
                        "5483:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5483:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5483:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5482:20:27"
            },
            "returnParameters": {
              "id": 10225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10224,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10240,
                  "src": "5526:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:6:27"
            },
            "scope": 10267,
            "src": "5454:161:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10265,
              "nodeType": "Block",
              "src": "5703:89:27",
              "statements": [
                {
                  "assignments": [
                    10252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10252,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5722:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10265,
                      "src": "5709:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10251,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10250,
                          "name": "Land",
                          "nameLocations": [
                            "5709:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9698,
                          "src": "5709:4:27"
                        },
                        "referencedDeclaration": 9698,
                        "src": "5709:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10259,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10253,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9703,
                      "src": "5729:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9698_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10258,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10256,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10243,
                          "src": "5743:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5735:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5735:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5729:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9698_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5709:47:27"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 10260,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10252,
                        "src": "5770:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9698_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5775:6:27",
                      "memberName": "admins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9694,
                      "src": "5770:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 10263,
                    "indexExpression": {
                      "id": 10262,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10245,
                      "src": "5782:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5770:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10249,
                  "id": 10264,
                  "nodeType": "Return",
                  "src": "5763:24:27"
                }
              ]
            },
            "functionSelector": "791e0519",
            "id": 10266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLandAdmin",
            "nameLocation": "5628:11:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10243,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5647:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10266,
                  "src": "5640:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10242,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10241,
                      "name": "IERC20",
                      "nameLocations": [
                        "5640:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5640:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5640:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10245,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5668:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10266,
                  "src": "5660:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5660:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:34:27"
            },
            "returnParameters": {
              "id": 10249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10266,
                  "src": "5697:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10247,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5697:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5696:6:27"
            },
            "scope": 10267,
            "src": "5619:173:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10268,
        "src": "328:5466:27",
        "usedErrors": []
      }
    ],
    "src": "32:5763:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2024-05-28T18:17:29.621Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}