{
  "contractName": "PredictionMarketV3Controller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PMV3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_realitioLibraryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_PMV3Factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenToAnswer",
          "type": "address"
        }
      ],
      "name": "LandCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandOffsetUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PMV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PMV3Factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lands",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "everyoneCanCreateMarkets",
          "type": "bool"
        },
        {
          "internalType": "contract IRealityETH_IERC20",
          "name": "realitio",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realitioFactory",
      "outputs": [
        {
          "internalType": "contract RealityETH_ERC20_Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountToClaim",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAnswer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "everyoneCanCreateMarkets",
          "type": "bool"
        }
      ],
      "name": "createLand",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "disableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "enableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdminToLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdminFromLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToCreateMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToResolveMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        }
      ],
      "name": "isIERC20TokenSocial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isLandAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PMV3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_realitioLibraryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_PMV3Factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenToAnswer\",\"type\":\"address\"}],\"name\":\"LandCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandOffsetUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PMV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PMV3Factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdminToLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountToClaim\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAnswer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"everyoneCanCreateMarkets\",\"type\":\"bool\"}],\"name\":\"createLand\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"disableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"enableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToCreateMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToResolveMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"}],\"name\":\"isIERC20TokenSocial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isLandAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lands\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"everyoneCanCreateMarkets\",\"type\":\"bool\"},{\"internalType\":\"contract IRealityETH_IERC20\",\"name\":\"realitio\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realitioFactory\",\"outputs\":[{\"internalType\":\"contract RealityETH_ERC20_Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdminFromLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarketV3Controller.sol\":\"PredictionMarketV3Controller\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x6eabd0f1326073b2aaf4298cb3b15b7cfc96966586dbaca2f126409f4fd11688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b67ef6927ae0b5afd4faf7cf6bf6bce6ad0ebe3b07bd75ae24891ecd8ddf2c4\",\"dweb:/ipfs/QmfLFWECbFNfb9Vh1ftmj1E6KmHa8wJkpzaWgBvujo56Wp\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"project:/contracts/FantasyERC20.sol\":{\"keccak256\":\"0xff65ee1c80ebce18a3172dc4b45560df80e6b844d7df449d951f7eea56339661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0990a3f351247eb6d9af3fe1c9b9508cdefb0a45cb3996c603991aa472c5d7d\",\"dweb:/ipfs/QmQKMBk8L7HhDZ5bZZdYfTYwFbEL2muL6PqFQw9rB8piis\"]},\"project:/contracts/IPredictionMarketV3Factory.sol\":{\"keccak256\":\"0xa3de4b1938216555f6c8cd7d1605d68e5055ba5c3c8f415b8062d1a2bcc7b83e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e116fb3c70ac1629e9b2d33e69a3cb7ecb0b264e3b9cef2efbc61c694afcfcf\",\"dweb:/ipfs/QmWSZ3MFxLwhV87mqkcadeG3qRnxET21PoHQ8vNQkejgYT\"]},\"project:/contracts/IRealityETH_ERC20.sol\":{\"keccak256\":\"0x829f84252e4c06a9563be80b9bd93d4eb875ac865629bc312c20c2fc48a27c67\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4486fd8f19077689309998e39f63e47a6c84ef819c708887460d24cb6748cc98\",\"dweb:/ipfs/QmcFNnjyJfbh885rV7YW3WZfP1xRwHmmoVfGyTZyjhhk7N\"]},\"project:/contracts/PredictionMarketV3Controller.sol\":{\"keccak256\":\"0x08216bcd289203646c36e8c474ba6be8520a1654958bc2cd86d2bd4a61053b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8e754a7197c0007f3f07d25b4ad6d0a0304f1d8f43c52228d5104e5607a7f4\",\"dweb:/ipfs/QmZSE4hq4Tu8wrw2uNf36jMn22oetN9F2Mm5zoYdr7MR4P\"]},\"project:/contracts/RealityETH_ERC20_Factory.sol\":{\"keccak256\":\"0xfa3c12a43c9d3bb54a90a050a33f8fc9b97cb1cc46c8f9d22a83d3d042131c61\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8e73d6c105df45f7d43fc8b5b86855d6c53ea4cef89ff848d986fbf53d0e2473\",\"dweb:/ipfs/QmSkFHJZX61HZmfw49j28R14u6sXshcPCKVQtwVwUmTx8m\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620041b4380380620041b483398101604081905262000034916200018f565b6200003f3362000114565b600180556001600160a01b038116620000ae5760405162461bcd60e51b815260206004820152602760248201527f504d5633466163746f727920616464726573732063616e6e6f742062652030206044820152666164647265737360c81b606482015260840160405180910390fd5b6001600160a01b0383166080526040518290620000cb9062000164565b6001600160a01b039091168152602001604051809103906000f080158015620000f8573d6000803e3d6000fd5b506001600160a01b0390811660c0521660a05250620001d99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109ef80620037c583390190565b80516001600160a01b03811681146200018a57600080fd5b919050565b600080600060608486031215620001a557600080fd5b620001b08462000172565b9250620001c06020850162000172565b9150620001d06040850162000172565b90509250925092565b60805160a05160c05161358b6200023a600039600081816102c60152818161073e015281816107dc015261085a0152600081816101380152818161045e01526105080152600081816101ad015281816104e70152610591015261358b6000f3fe60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b1146200034c5780638da5cb5b1462000363578063d13acee11462000375578063d1aeb5c214620003ab578063f2fde38b14620003c257600080fd5b80636e3dd8ba14620002c057806370e9207814620002e8578063715018a614620002ff578063791e0519146200030957600080fd5b806325c7205911620000fc57806325c7205914620001cf57806330ccd17a14620001f757806333b22760146200020e5780634fe62a5b14620002905780635d341ae514620002a957600080fd5b80630c27c26c14620001325780631311758b14620001775780631b4d534e14620001905780631cbe8a6514620001a7575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a620001a13660046200117a565b620003d9565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001e6620001e03660046200121a565b62000929565b60405190151581526020016200016e565b6200015a6200020836600462001258565b6200098b565b6200025c6200021f36600462001272565b600260208190526000918252604090912080549101546001600160a01b038083169260ff600160a01b909104811692908116916101009091041684565b604080516001600160a01b03958616815293151560208501529115159183019190915290911660608201526080016200016e565b620002a7620002a13660046200121a565b620009b6565b005b620002a7620002ba36600462001272565b62000b20565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620002a7620002f936600462001272565b62000c66565b620002a762000da1565b620001e66200031a3660046200121a565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b620002a76200035d3660046200121a565b62000db9565b6000546001600160a01b03166200015a565b620001e66200038636600462001272565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b620001e6620003bc3660046200121a565b62000f1e565b620002a7620003d336600462001272565b62000f71565b60006001600160a01b038316620004435760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084015b60405180910390fd5b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620004b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d6919062001299565b620004e057600080fd5b60008787877f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000003060405162000536906200109c565b620005479695949392919062001301565b604051809103906000f08015801562000564573d6000803e3d6000fd5b50604051632f2ff15d60e01b81526000805160206200353683398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620005e257600080fd5b505af1158015620005f7573d6000803e3d6000fd5b5050604051632f2ff15d60e01b81526000805160206200353683398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200065257600080fd5b505af115801562000667573d6000803e3d6000fd5b505050506001600160a01b03811660008181526002602081815260408084208054600160a01b6001600160a81b031990911687171781553385526001808201909352908420805460ff19908116841790915592810180549093168915151790925560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916909317909255600480549162000717836200135b565b909155505060405163316b373960e01b81526001600160a01b0387811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000788573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ae919062001383565b6001600160a01b0316036200083b57604051633b937bbb60e11b81526001600160a01b0387811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b1580156200082157600080fd5b505af115801562000836573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa158015620008a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c8919062001383565b600282018054610100600160a81b0319166101006001600160a01b03938416021790556040518782169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a450979650505050505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff168015620009835750600281015460ff16806200098357506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200099c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000a1e5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000a525760405162461bcd60e51b81526004016200043a90620013a3565b8054604051632f2ff15d60e01b81526000805160206200353683398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b15801562000aae57600080fd5b505af115801562000ac3573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff161562000b8c5760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000bc05760405162461bcd60e51b81526004016200043a90620013a3565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b15801562000c1357600080fd5b505af115801562000c28573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000ccd5760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000d015760405162461bcd60e51b81526004016200043a90620013a3565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000d4e57600080fd5b505af115801562000d63573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000dab62000ff0565b62000db760006200104c565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000e215760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000e555760405162461bcd60e51b81526004016200043a90620013a3565b805460405163d547741f60e01b81526000805160206200353683398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000eb157600080fd5b505af115801562000ec6573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200098357506001600160a01b038316600090815260018201602052604090205460ff1691505092915050565b62000f7b62000ff0565b6001600160a01b03811662000fe25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200043a565b62000fed816200104c565b50565b6000546001600160a01b0316331462000db75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200043a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61216380620013d383390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620010d257600080fd5b813567ffffffffffffffff80821115620010f057620010f0620010aa565b604051601f8301601f19908116603f011681019082821181831017156200111b576200111b620010aa565b816040528381528660208588010111156200113557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462000fed57600080fd5b801515811462000fed57600080fd5b600080600080600060a086880312156200119357600080fd5b853567ffffffffffffffff80821115620011ac57600080fd5b620011ba89838a01620010c0565b96506020880135915080821115620011d157600080fd5b50620011e088828901620010c0565b945050604086013592506060860135620011fa8162001155565b915060808601356200120c816200116b565b809150509295509295909350565b600080604083850312156200122e57600080fd5b82356200123b8162001155565b915060208301356200124d8162001155565b809150509250929050565b6000602082840312156200126b57600080fd5b5035919050565b6000602082840312156200128557600080fd5b8135620012928162001155565b9392505050565b600060208284031215620012ac57600080fd5b815162001292816200116b565b6000815180845260005b81811015620012e157602081850181015186830182015201620012c3565b506000602082860101526020601f19601f83011685010191505092915050565b60c0815260006200131660c0830189620012b9565b82810360208401526200132a8189620012b9565b604084019790975250506001600160a01b039384166060820152918316608083015290911660a09091015292915050565b6000600182016200137c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200139657600080fd5b8151620012928162001155565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b60408201526060019056fe60806040523480156200001157600080fd5b50604051620021633803806200216383398101604081905262000034916200035c565b85858181600562000046838262000494565b50600662000055828262000494565b50506007805460ff19169055506200006f60003362000115565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63362000115565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3362000115565b5050600a93909355600980546001600160a01b03199081166001600160a01b0394851617909155600b8054821692841692909217909155600c80549091169190921617905550620005609050565b62000121828262000125565b5050565b6200013c82826200016860201b62000b8b1760201c565b60008281526001602090815260409091206200016391839062000c0f62000208821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000121576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001c43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200021f836001600160a01b03841662000228565b90505b92915050565b6000818152600183016020526040812054620002715750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000222565b50600062000222565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a257600080fd5b81516001600160401b0380821115620002bf57620002bf6200027a565b604051601f8301601f19908116603f01168101908282118183101715620002ea57620002ea6200027a565b816040528381526020925086838588010111156200030757600080fd5b600091505b838210156200032b57858201830151818301840152908201906200030c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200035757600080fd5b919050565b60008060008060008060c087890312156200037657600080fd5b86516001600160401b03808211156200038e57600080fd5b6200039c8a838b0162000290565b97506020890151915080821115620003b357600080fd5b50620003c289828a0162000290565b95505060408701519350620003da606088016200033f565b9250620003ea608088016200033f565b9150620003fa60a088016200033f565b90509295509295509295565b600181811c908216806200041b57607f821691505b6020821081036200043c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016357600081815260208120601f850160051c810160208610156200046b5750805b601f850160051c820191505b818110156200048c5782815560010162000477565b505050505050565b81516001600160401b03811115620004b057620004b06200027a565b620004c881620004c1845462000406565b8462000442565b602080601f831160018114620005005760008415620004e75750858301515b600019600386901b1c1916600185901b1785556200048c565b600085815260208120601f198616915b82811015620005315788860151825594840194600190910190840162000510565b5085821015620005505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611bf380620005706000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c87314610428578063d53913931461043b578063d547741f14610462578063dd62ed3e14610475578063e63ab1e91461048857600080fd5b8063a217fddf146103f2578063a457c2d7146103fa578063a9059cbb1461040d578063adb1f0d81461042057600080fd5b806387bbfe0a116100e957806387bbfe0a146103985780639010d07c146103c457806391d14854146103d757806395d89b41146103ea57600080fd5b80635c975abb1461034c57806370a082311461035457806379cc67901461037d5780638456cb591461039057600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e366004611846565b6104af565b60405190151581526020015b60405180910390f35b6102306104da565b60405161021f9190611894565b61021361024b3660046118de565b61056c565b6004545b60405190815260200161021f565b610213610270366004611908565b610584565b610254610283366004611944565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d136600461195d565b6105a8565b005b6040516012815260200161021f565b6102d66102f536600461195d565b6105d2565b610254600a5481565b6102136103113660046118de565b610655565b6102d6610677565b6102d661032c3660046118de565b61071d565b6102d661033f366004611944565b6107bc565b6102d66107c9565b610213610866565b610254610362366004611989565b6001600160a01b031660009081526002602052604090205490565b6102d661038b3660046118de565b61092d565b6102d6610942565b6102136103a6366004611989565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d23660046119a4565b6109e6565b6102136103e536600461195d565b610a05565b610230610a2e565b610254600081565b6102136104083660046118de565b610a3d565b61021361041b3660046118de565b610ab8565b6102d6610ac6565b610254610436366004611944565b610b24565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d661047036600461195d565b610b3b565b6102546104833660046119c6565b610b60565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d457506104d482610c24565b92915050565b6060600580546104e9906119f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610515906119f0565b80156105625780601f1061053757610100808354040283529160200191610562565b820191906000526020600020905b81548152906001019060200180831161054557829003601f168201915b5050505050905090565b60003361057a818585610c59565b5060019392505050565b600033610592858285610d7d565b61059d858585610df7565b506001949350505050565b6000828152602081905260409020600101546105c381610e9d565b6105cd8383610ea7565b505050565b6001600160a01b03811633146106475760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106518282610ec9565b5050565b60003361057a8185856106688383610b60565b6106729190611a40565b610c59565b6106a17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6107135760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606482015260840161063e565b61071b610eeb565b565b6107477f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a05565b6107b25760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606482015260840161063e565b6106518282610f3d565b6107c6338261100a565b50565b3360009081526008602052604090205460ff16156107f95760405162461bcd60e51b815260040161063e90611a53565b61080533600a54610f3d565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085c914290918252602082015260400190565b60405180910390a2565b60008061087560075460ff1690565b600b549091506001600160a01b03161580159061089c5750600c546001600160a01b031615155b1561092857600b546001600160a01b031681806109245750600c54604051630617ed9d60e01b81526001600160a01b03918216600482015290821690630617ed9d90602401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611aa3565b155b9150505b919050565b610938823383610d7d565b610651828261100a565b61096c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6109de5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f207061757365000000000000000000606482015260840161063e565b61071b61114a565b60008281526001602052604081206109fe9083611187565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104e9906119f0565b60003381610a4b8286610b60565b905083811015610aab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161063e565b61059d8286868403610c59565b60003361057a818585610df7565b3360009081526008602052604090205460ff1615610af65760405162461bcd60e51b815260040161063e90611a53565b610afe6107c9565b6009546107c6906001600160a01b03166fffffffffffffffffffffffffffffffff61056c565b60008181526001602052604081206104d490611193565b600082815260208190526040902060010154610b5681610e9d565b6105cd8383610ec9565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610b958282610a05565b610651576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610bcb3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006109fe836001600160a01b03841661119d565b60006001600160e01b03198216637965db0b60e01b14806104d457506301ffc9a760e01b6001600160e01b03198316146104d4565b6001600160a01b038316610cbb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161063e565b6001600160a01b038216610d1c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161063e565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d898484610b60565b90506000198114610df15781811015610de45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161063e565b610df18484848403610c59565b50505050565b6009546001600160a01b0384811691161480610e2057506009546001600160a01b038381169116145b610e925760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e20746865206164647265737365730000606482015260840161063e565b6105cd8383836111ec565b6107c681336113a2565b610eb18282610b8b565b60008281526001602052604090206105cd9082610c0f565b610ed382826113fb565b60008281526001602052604090206105cd9082611460565b610ef3611475565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610f935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161063e565b610f9f600083836114c0565b8060046000828254610fb19190611a40565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661106a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161063e565b611076826000836114c0565b6001600160a01b038216600090815260026020526040902054818110156110ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161063e565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6111526114cb565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f203390565b60006109fe8383611513565b60006104d4825490565b60008181526001830160205260408120546111e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d4565b5060006104d4565b6001600160a01b0383166112505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161063e565b6001600160a01b0382166112b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161063e565b6112bd8383836114c0565b6001600160a01b038316600090815260026020526040902054818110156113355760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161063e565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113959086815260200190565b60405180910390a3610df1565b6113ac8282610a05565b610651576113b98161153d565b6113c483602061154f565b6040516020016113d5929190611ac5565b60408051601f198184030181529082905262461bcd60e51b825261063e91600401611894565b6114058282610a05565b15610651576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006109fe836001600160a01b0384166116eb565b61147d610866565b61071b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161063e565b6105cd8383836117de565b6114d3610866565b1561071b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161063e565b600082600001828154811061152a5761152a611b3a565b9060005260206000200154905092915050565b60606104d46001600160a01b03831660145b6060600061155e836002611b50565b611569906002611a40565b67ffffffffffffffff81111561158157611581611b67565b6040519080825280601f01601f1916602001820160405280156115ab576020820181803683370190505b509050600360fc1b816000815181106115c6576115c6611b3a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115f5576115f5611b3a565b60200101906001600160f81b031916908160001a9053506000611619846002611b50565b611624906001611a40565b90505b600181111561169c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061165857611658611b3a565b1a60f81b82828151811061166e5761166e611b3a565b60200101906001600160f81b031916908160001a90535060049490941c9361169581611b7d565b9050611627565b5083156109fe5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161063e565b600081815260018301602052604081205480156117d457600061170f600183611b94565b855490915060009061172390600190611b94565b905081811461178857600086600001828154811061174357611743611b3a565b906000526020600020015490508087600001848154811061176657611766611b3a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061179957611799611ba7565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d4565b60009150506104d4565b6117e6610866565b156105cd5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840161063e565b60006020828403121561185857600080fd5b81356001600160e01b0319811681146109fe57600080fd5b60005b8381101561188b578181015183820152602001611873565b50506000910152565b60208152600082518060208401526118b3816040850160208701611870565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461092857600080fd5b600080604083850312156118f157600080fd5b6118fa836118c7565b946020939093013593505050565b60008060006060848603121561191d57600080fd5b611926846118c7565b9250611934602085016118c7565b9150604084013590509250925092565b60006020828403121561195657600080fd5b5035919050565b6000806040838503121561197057600080fd5b82359150611980602084016118c7565b90509250929050565b60006020828403121561199b57600080fd5b6109fe826118c7565b600080604083850312156119b757600080fd5b50508035926020909101359150565b600080604083850312156119d957600080fd5b6119e2836118c7565b9150611980602084016118c7565b600181811c90821680611a0457607f821691505b602082108103611a2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d4576104d4611a2a565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b600060208284031215611ab557600080fd5b815180151581146109fe57600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afd816017850160208801611870565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2e816028840160208801611870565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d4576104d4611a2a565b634e487b7160e01b600052604160045260246000fd5b600081611b8c57611b8c611a2a565b506000190190565b818103818111156104d4576104d4611a2a565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a180bd76517920e0b56e6307e6845d5fef08bd68ec6f905e8bc5ab9e192446564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a2646970667358221220408a46e5cadf4644f5954bd168c42ac06c776221bfbb76dda8e37a24605005c164736f6c63430008120033608060405234801561001057600080fd5b506040516109ef3803806109ef83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61095c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063316b3739146100465780637726f7761461008b578063b816f513146100a0575b600080fd5b61006f61005436600461077c565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461077c565b6100b3565b005b60005461006f906001600160a01b031681565b6001600160a01b0381811660009081526001602052604090205416156101455760405162461bcd60e51b815260206004820152603960248201527f54686572652073686f756c64206f6e6c79206265206f6e65206465706c6f796d60448201527f656e74207065722076657273696f6e2070657220746f6b656e00000000000000606482015260840160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906107ac565b90506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102139190810190610809565b600080549192509061022d906001600160a01b031661072a565b60405163144fa6d760e01b81526001600160a01b0386811660048301529192509082169063144fa6d790602401600060405180830381600087803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b50506040516383bf460960e01b815260206004820152603f60248201527f7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c2060448201527f2263617465676f7279223a20222573222c20226c616e67223a20222573227d0060648201526001600160a01b03841692506383bf460991506084016020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906108b6565b506040516383bf460960e01b815260206004820152604f60248201527f7b227469746c65223a20222573222c202274797065223a202275696e74222c2060448201527f22646563696d616c73223a2031382c202263617465676f7279223a202225732260648201526e2c20226c616e67223a20222573227d60881b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906108b6565b506040516383bf460960e01b815260206004820152605a60248201527f7b227469746c65223a20222573222c202274797065223a202273696e676c652d60448201527f73656c656374222c20226f7574636f6d6573223a205b25735d2c20226361746560648201527f676f7279223a20222573222c20226c616e67223a20222573227d00000000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906108b6565b506040516383bf460960e01b815260206004820152605c60248201527f7b227469746c65223a20222573222c202274797065223a20226d756c7469706c60448201527f652d73656c656374222c20226f7574636f6d6573223a205b25735d2c2022636160648201527f7465676f7279223a20222573222c20226c616e67223a20222573227d0000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb91906108b6565b506040516383bf460960e01b815260206004820152604360248201527f7b227469746c65223a20222573222c202274797065223a20226461746574696d60448201527f65222c202263617465676f7279223a20222573222c20226c616e67223a20222560648201526273227d60e81b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b691906108b6565b506001600160a01b038481166000908152600160205260409081902080546001600160a01b03191692841692909217909155517fbe87db3b58b5f4d26d54d6f8a09bbab3eefdc8879ac48f5e21ccff2a1f50b0729061071c9083908790879087906108cf565b60405180910390a150505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121561078e57600080fd5b81356001600160a01b03811681146107a557600080fd5b9392505050565b6000602082840312156107be57600080fd5b815160ff811681146107a557600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156108005781810151838201526020016107e8565b50506000910152565b60006020828403121561081b57600080fd5b815167ffffffffffffffff8082111561083357600080fd5b818401915084601f83011261084757600080fd5b815181811115610859576108596107cf565b604051601f8201601f19908116603f01168101908382118183101715610881576108816107cf565b8160405282815287602084870101111561089a57600080fd5b6108ab8360208301602088016107e5565b979650505050505050565b6000602082840312156108c857600080fd5b5051919050565b600060018060a01b03808716835280861660208401525060ff8416604083015260806060830152825180608084015261090f8160a08501602087016107e5565b601f01601f19169190910160a0019594505050505056fea26469706673582212200901921801295c1857ea1285857575b749b164c9a87fe108337110039b25924a64736f6c63430008120033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b1146200034c5780638da5cb5b1462000363578063d13acee11462000375578063d1aeb5c214620003ab578063f2fde38b14620003c257600080fd5b80636e3dd8ba14620002c057806370e9207814620002e8578063715018a614620002ff578063791e0519146200030957600080fd5b806325c7205911620000fc57806325c7205914620001cf57806330ccd17a14620001f757806333b22760146200020e5780634fe62a5b14620002905780635d341ae514620002a957600080fd5b80630c27c26c14620001325780631311758b14620001775780631b4d534e14620001905780631cbe8a6514620001a7575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a620001a13660046200117a565b620003d9565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001e6620001e03660046200121a565b62000929565b60405190151581526020016200016e565b6200015a6200020836600462001258565b6200098b565b6200025c6200021f36600462001272565b600260208190526000918252604090912080549101546001600160a01b038083169260ff600160a01b909104811692908116916101009091041684565b604080516001600160a01b03958616815293151560208501529115159183019190915290911660608201526080016200016e565b620002a7620002a13660046200121a565b620009b6565b005b620002a7620002ba36600462001272565b62000b20565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620002a7620002f936600462001272565b62000c66565b620002a762000da1565b620001e66200031a3660046200121a565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b620002a76200035d3660046200121a565b62000db9565b6000546001600160a01b03166200015a565b620001e66200038636600462001272565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b620001e6620003bc3660046200121a565b62000f1e565b620002a7620003d336600462001272565b62000f71565b60006001600160a01b038316620004435760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084015b60405180910390fd5b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620004b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d6919062001299565b620004e057600080fd5b60008787877f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000003060405162000536906200109c565b620005479695949392919062001301565b604051809103906000f08015801562000564573d6000803e3d6000fd5b50604051632f2ff15d60e01b81526000805160206200353683398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620005e257600080fd5b505af1158015620005f7573d6000803e3d6000fd5b5050604051632f2ff15d60e01b81526000805160206200353683398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200065257600080fd5b505af115801562000667573d6000803e3d6000fd5b505050506001600160a01b03811660008181526002602081815260408084208054600160a01b6001600160a81b031990911687171781553385526001808201909352908420805460ff19908116841790915592810180549093168915151790925560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916909317909255600480549162000717836200135b565b909155505060405163316b373960e01b81526001600160a01b0387811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000788573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ae919062001383565b6001600160a01b0316036200083b57604051633b937bbb60e11b81526001600160a01b0387811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b1580156200082157600080fd5b505af115801562000836573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa158015620008a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c8919062001383565b600282018054610100600160a81b0319166101006001600160a01b03938416021790556040518782169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a450979650505050505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff168015620009835750600281015460ff16806200098357506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200099c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000a1e5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000a525760405162461bcd60e51b81526004016200043a90620013a3565b8054604051632f2ff15d60e01b81526000805160206200353683398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b15801562000aae57600080fd5b505af115801562000ac3573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff161562000b8c5760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000bc05760405162461bcd60e51b81526004016200043a90620013a3565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b15801562000c1357600080fd5b505af115801562000c28573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000ccd5760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000d015760405162461bcd60e51b81526004016200043a90620013a3565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000d4e57600080fd5b505af115801562000d63573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000dab62000ff0565b62000db760006200104c565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000e215760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000e555760405162461bcd60e51b81526004016200043a90620013a3565b805460405163d547741f60e01b81526000805160206200353683398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000eb157600080fd5b505af115801562000ec6573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200098357506001600160a01b038316600090815260018201602052604090205460ff1691505092915050565b62000f7b62000ff0565b6001600160a01b03811662000fe25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200043a565b62000fed816200104c565b50565b6000546001600160a01b0316331462000db75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200043a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61216380620013d383390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620010d257600080fd5b813567ffffffffffffffff80821115620010f057620010f0620010aa565b604051601f8301601f19908116603f011681019082821181831017156200111b576200111b620010aa565b816040528381528660208588010111156200113557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462000fed57600080fd5b801515811462000fed57600080fd5b600080600080600060a086880312156200119357600080fd5b853567ffffffffffffffff80821115620011ac57600080fd5b620011ba89838a01620010c0565b96506020880135915080821115620011d157600080fd5b50620011e088828901620010c0565b945050604086013592506060860135620011fa8162001155565b915060808601356200120c816200116b565b809150509295509295909350565b600080604083850312156200122e57600080fd5b82356200123b8162001155565b915060208301356200124d8162001155565b809150509250929050565b6000602082840312156200126b57600080fd5b5035919050565b6000602082840312156200128557600080fd5b8135620012928162001155565b9392505050565b600060208284031215620012ac57600080fd5b815162001292816200116b565b6000815180845260005b81811015620012e157602081850181015186830182015201620012c3565b506000602082860101526020601f19601f83011685010191505092915050565b60c0815260006200131660c0830189620012b9565b82810360208401526200132a8189620012b9565b604084019790975250506001600160a01b039384166060820152918316608083015290911660a09091015292915050565b6000600182016200137c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200139657600080fd5b8151620012928162001155565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b60408201526060019056fe60806040523480156200001157600080fd5b50604051620021633803806200216383398101604081905262000034916200035c565b85858181600562000046838262000494565b50600662000055828262000494565b50506007805460ff19169055506200006f60003362000115565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63362000115565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3362000115565b5050600a93909355600980546001600160a01b03199081166001600160a01b0394851617909155600b8054821692841692909217909155600c80549091169190921617905550620005609050565b62000121828262000125565b5050565b6200013c82826200016860201b62000b8b1760201c565b60008281526001602090815260409091206200016391839062000c0f62000208821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000121576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001c43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200021f836001600160a01b03841662000228565b90505b92915050565b6000818152600183016020526040812054620002715750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000222565b50600062000222565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a257600080fd5b81516001600160401b0380821115620002bf57620002bf6200027a565b604051601f8301601f19908116603f01168101908282118183101715620002ea57620002ea6200027a565b816040528381526020925086838588010111156200030757600080fd5b600091505b838210156200032b57858201830151818301840152908201906200030c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200035757600080fd5b919050565b60008060008060008060c087890312156200037657600080fd5b86516001600160401b03808211156200038e57600080fd5b6200039c8a838b0162000290565b97506020890151915080821115620003b357600080fd5b50620003c289828a0162000290565b95505060408701519350620003da606088016200033f565b9250620003ea608088016200033f565b9150620003fa60a088016200033f565b90509295509295509295565b600181811c908216806200041b57607f821691505b6020821081036200043c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016357600081815260208120601f850160051c810160208610156200046b5750805b601f850160051c820191505b818110156200048c5782815560010162000477565b505050505050565b81516001600160401b03811115620004b057620004b06200027a565b620004c881620004c1845462000406565b8462000442565b602080601f831160018114620005005760008415620004e75750858301515b600019600386901b1c1916600185901b1785556200048c565b600085815260208120601f198616915b82811015620005315788860151825594840194600190910190840162000510565b5085821015620005505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611bf380620005706000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c87314610428578063d53913931461043b578063d547741f14610462578063dd62ed3e14610475578063e63ab1e91461048857600080fd5b8063a217fddf146103f2578063a457c2d7146103fa578063a9059cbb1461040d578063adb1f0d81461042057600080fd5b806387bbfe0a116100e957806387bbfe0a146103985780639010d07c146103c457806391d14854146103d757806395d89b41146103ea57600080fd5b80635c975abb1461034c57806370a082311461035457806379cc67901461037d5780638456cb591461039057600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e366004611846565b6104af565b60405190151581526020015b60405180910390f35b6102306104da565b60405161021f9190611894565b61021361024b3660046118de565b61056c565b6004545b60405190815260200161021f565b610213610270366004611908565b610584565b610254610283366004611944565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d136600461195d565b6105a8565b005b6040516012815260200161021f565b6102d66102f536600461195d565b6105d2565b610254600a5481565b6102136103113660046118de565b610655565b6102d6610677565b6102d661032c3660046118de565b61071d565b6102d661033f366004611944565b6107bc565b6102d66107c9565b610213610866565b610254610362366004611989565b6001600160a01b031660009081526002602052604090205490565b6102d661038b3660046118de565b61092d565b6102d6610942565b6102136103a6366004611989565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d23660046119a4565b6109e6565b6102136103e536600461195d565b610a05565b610230610a2e565b610254600081565b6102136104083660046118de565b610a3d565b61021361041b3660046118de565b610ab8565b6102d6610ac6565b610254610436366004611944565b610b24565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d661047036600461195d565b610b3b565b6102546104833660046119c6565b610b60565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d457506104d482610c24565b92915050565b6060600580546104e9906119f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610515906119f0565b80156105625780601f1061053757610100808354040283529160200191610562565b820191906000526020600020905b81548152906001019060200180831161054557829003601f168201915b5050505050905090565b60003361057a818585610c59565b5060019392505050565b600033610592858285610d7d565b61059d858585610df7565b506001949350505050565b6000828152602081905260409020600101546105c381610e9d565b6105cd8383610ea7565b505050565b6001600160a01b03811633146106475760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106518282610ec9565b5050565b60003361057a8185856106688383610b60565b6106729190611a40565b610c59565b6106a17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6107135760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606482015260840161063e565b61071b610eeb565b565b6107477f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a05565b6107b25760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606482015260840161063e565b6106518282610f3d565b6107c6338261100a565b50565b3360009081526008602052604090205460ff16156107f95760405162461bcd60e51b815260040161063e90611a53565b61080533600a54610f3d565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085c914290918252602082015260400190565b60405180910390a2565b60008061087560075460ff1690565b600b549091506001600160a01b03161580159061089c5750600c546001600160a01b031615155b1561092857600b546001600160a01b031681806109245750600c54604051630617ed9d60e01b81526001600160a01b03918216600482015290821690630617ed9d90602401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611aa3565b155b9150505b919050565b610938823383610d7d565b610651828261100a565b61096c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6109de5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f207061757365000000000000000000606482015260840161063e565b61071b61114a565b60008281526001602052604081206109fe9083611187565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104e9906119f0565b60003381610a4b8286610b60565b905083811015610aab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161063e565b61059d8286868403610c59565b60003361057a818585610df7565b3360009081526008602052604090205460ff1615610af65760405162461bcd60e51b815260040161063e90611a53565b610afe6107c9565b6009546107c6906001600160a01b03166fffffffffffffffffffffffffffffffff61056c565b60008181526001602052604081206104d490611193565b600082815260208190526040902060010154610b5681610e9d565b6105cd8383610ec9565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610b958282610a05565b610651576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610bcb3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006109fe836001600160a01b03841661119d565b60006001600160e01b03198216637965db0b60e01b14806104d457506301ffc9a760e01b6001600160e01b03198316146104d4565b6001600160a01b038316610cbb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161063e565b6001600160a01b038216610d1c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161063e565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d898484610b60565b90506000198114610df15781811015610de45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161063e565b610df18484848403610c59565b50505050565b6009546001600160a01b0384811691161480610e2057506009546001600160a01b038381169116145b610e925760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e20746865206164647265737365730000606482015260840161063e565b6105cd8383836111ec565b6107c681336113a2565b610eb18282610b8b565b60008281526001602052604090206105cd9082610c0f565b610ed382826113fb565b60008281526001602052604090206105cd9082611460565b610ef3611475565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610f935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161063e565b610f9f600083836114c0565b8060046000828254610fb19190611a40565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661106a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161063e565b611076826000836114c0565b6001600160a01b038216600090815260026020526040902054818110156110ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161063e565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6111526114cb565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f203390565b60006109fe8383611513565b60006104d4825490565b60008181526001830160205260408120546111e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d4565b5060006104d4565b6001600160a01b0383166112505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161063e565b6001600160a01b0382166112b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161063e565b6112bd8383836114c0565b6001600160a01b038316600090815260026020526040902054818110156113355760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161063e565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113959086815260200190565b60405180910390a3610df1565b6113ac8282610a05565b610651576113b98161153d565b6113c483602061154f565b6040516020016113d5929190611ac5565b60408051601f198184030181529082905262461bcd60e51b825261063e91600401611894565b6114058282610a05565b15610651576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006109fe836001600160a01b0384166116eb565b61147d610866565b61071b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161063e565b6105cd8383836117de565b6114d3610866565b1561071b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161063e565b600082600001828154811061152a5761152a611b3a565b9060005260206000200154905092915050565b60606104d46001600160a01b03831660145b6060600061155e836002611b50565b611569906002611a40565b67ffffffffffffffff81111561158157611581611b67565b6040519080825280601f01601f1916602001820160405280156115ab576020820181803683370190505b509050600360fc1b816000815181106115c6576115c6611b3a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115f5576115f5611b3a565b60200101906001600160f81b031916908160001a9053506000611619846002611b50565b611624906001611a40565b90505b600181111561169c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061165857611658611b3a565b1a60f81b82828151811061166e5761166e611b3a565b60200101906001600160f81b031916908160001a90535060049490941c9361169581611b7d565b9050611627565b5083156109fe5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161063e565b600081815260018301602052604081205480156117d457600061170f600183611b94565b855490915060009061172390600190611b94565b905081811461178857600086600001828154811061174357611743611b3a565b906000526020600020015490508087600001848154811061176657611766611b3a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061179957611799611ba7565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d4565b60009150506104d4565b6117e6610866565b156105cd5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840161063e565b60006020828403121561185857600080fd5b81356001600160e01b0319811681146109fe57600080fd5b60005b8381101561188b578181015183820152602001611873565b50506000910152565b60208152600082518060208401526118b3816040850160208701611870565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461092857600080fd5b600080604083850312156118f157600080fd5b6118fa836118c7565b946020939093013593505050565b60008060006060848603121561191d57600080fd5b611926846118c7565b9250611934602085016118c7565b9150604084013590509250925092565b60006020828403121561195657600080fd5b5035919050565b6000806040838503121561197057600080fd5b82359150611980602084016118c7565b90509250929050565b60006020828403121561199b57600080fd5b6109fe826118c7565b600080604083850312156119b757600080fd5b50508035926020909101359150565b600080604083850312156119d957600080fd5b6119e2836118c7565b9150611980602084016118c7565b600181811c90821680611a0457607f821691505b602082108103611a2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d4576104d4611a2a565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b600060208284031215611ab557600080fd5b815180151581146109fe57600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afd816017850160208801611870565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2e816028840160208801611870565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d4576104d4611a2a565b634e487b7160e01b600052604160045260246000fd5b600081611b8c57611b8c611a2a565b506000190190565b818103818111156104d4576104d4611a2a565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a180bd76517920e0b56e6307e6845d5fef08bd68ec6f905e8bc5ab9e192446564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a2646970667358221220408a46e5cadf4644f5954bd168c42ac06c776221bfbb76dda8e37a24605005c164736f6c63430008120033",
  "immutableReferences": {
    "9722": [
      {
        "length": 32,
        "start": 429
      },
      {
        "length": 32,
        "start": 1255
      },
      {
        "length": 32,
        "start": 1425
      }
    ],
    "9724": [
      {
        "length": 32,
        "start": 312
      },
      {
        "length": 32,
        "start": 1118
      },
      {
        "length": 32,
        "start": 1288
      }
    ],
    "9727": [
      {
        "length": 32,
        "start": 710
      },
      {
        "length": 32,
        "start": 1854
      },
      {
        "length": 32,
        "start": 2012
      },
      {
        "length": 32,
        "start": 2138
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1192:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:31"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:31"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:31",
                "type": ""
              }
            ],
            "src": "14:177:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:263:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "366:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "332:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "341:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "321:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "382:50:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "392:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:40:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "441:59:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "451:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:49:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "441:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "509:59:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "564:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "519:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:49:31"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "292:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "300:6:31",
                "type": ""
              }
            ],
            "src": "196:378:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:229:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "804:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "815:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "820:2:31",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "793:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:31"
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f74206265203020",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "859:34:31",
                        "type": "",
                        "value": "PMV3Factory address cannot be 0 "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "914:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "925:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "910:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:18:31"
                      },
                      {
                        "hexValue": "61646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "930:9:31",
                        "type": "",
                        "value": "address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "903:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "903:37:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "949:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "949:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "744:4:31",
                "type": ""
              }
            ],
            "src": "579:403:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1088:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1098:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1110:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1121:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1106:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1098:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1140:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1155:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1176:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1180:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1163:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1163:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1151:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1133:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1133:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1068:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1079:4:31",
                "type": ""
              }
            ],
            "src": "987:203:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"PMV3Factory address cannot be 0 \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9839:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:31",
                "type": ""
              }
            ],
            "src": "14:203:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:76:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "333:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "333:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "375:9:31"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:25:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "368:25:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "292:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "303:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "314:4:31",
                "type": ""
              }
            ],
            "src": "222:177:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:95:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "453:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:3:31",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "465:10:31",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "456:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:20:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:31:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "446:31:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "493:1:31",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:4:31",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "486:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:15:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "486:15:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "520:4:31",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "510:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:15:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "510:15:31"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "404:127:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "589:666:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "647:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "650:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "617:6:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "625:4:31",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "613:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "613:17:31"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "632:3:31"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "609:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:27:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "602:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:35:31"
                  },
                  "nodeType": "YulIf",
                  "src": "599:55:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "663:30:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "686:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "673:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "673:20:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "667:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "702:28:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "712:18:31",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "706:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "753:22:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "755:16:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "755:18:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "755:18:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "745:2:31"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "749:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "742:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:10:31"
                  },
                  "nodeType": "YulIf",
                  "src": "739:36:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "784:17:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:31",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "794:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "794:7:31"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "788:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:23:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "830:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "824:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:9:31"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "814:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "842:71:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "864:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "888:2:31"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "892:4:31",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "884:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "884:13:31"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "899:2:31"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "880:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "880:22:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "904:2:31",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "876:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "876:31:31"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "909:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "872:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "872:40:31"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "860:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:53:31"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "846:10:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "972:22:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "974:16:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "974:18:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "974:18:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "931:10:31"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "943:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "928:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "951:10:31"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "963:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "948:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "925:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:46:31"
                  },
                  "nodeType": "YulIf",
                  "src": "922:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1010:2:31",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1014:10:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:22:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1003:22:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1041:6:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1049:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:18:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1034:18:31"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1100:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1102:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1102:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1102:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1075:6:31"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1083:2:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1071:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1071:15:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1088:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:26:31"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1095:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1064:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1064:35:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1061:55:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1142:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1150:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1138:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1138:17:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1161:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1169:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1157:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:17:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1176:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1125:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:54:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:54:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1203:6:31"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1211:2:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1199:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1199:15:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1216:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1195:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:26:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1223:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1188:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1188:37:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1234:15:31",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1243:6:31"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1234:5:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "563:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "571:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "579:5:31",
                "type": ""
              }
            ],
            "src": "536:719:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1313:86:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1377:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1386:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1389:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1336:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1347:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1362:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1367:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1358:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1358:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1371:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1354:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1354:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1333:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1333:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1326:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1323:70:31"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:31",
                "type": ""
              }
            ],
            "src": "1260:139:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1446:76:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1500:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1509:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1512:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1502:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1502:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1502:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1469:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1490:5:31"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1483:6:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1483:13:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1476:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1476:21:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1466:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1466:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1459:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1459:40:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1456:60:31"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1435:5:31",
                "type": ""
              }
            ],
            "src": "1404:118:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1697:736:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1744:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1753:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1756:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1746:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1746:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1746:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1718:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1727:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1714:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1714:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1739:3:31",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1710:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:33:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1707:53:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1769:37:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1796:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1783:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1783:23:31"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1773:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1815:28:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1825:18:31",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1819:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1870:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1879:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1882:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1872:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1872:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1872:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1858:6:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1866:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1855:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:14:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1852:34:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1895:60:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1927:9:31"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1938:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1923:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:22:31"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1947:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1905:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1905:50:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1895:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1964:48:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1980:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:32:31"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1968:8:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2041:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2053:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2043:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2043:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2043:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2027:8:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2037:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2024:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:16:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2021:36:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2066:62:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2098:9:31"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2109:8:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2094:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2094:24:31"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2120:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2076:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:52:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2066:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2137:42:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2164:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2175:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2147:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:32:31"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2137:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2188:45:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2218:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2229:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2214:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2214:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2201:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2201:32:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2192:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2275:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2242:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2242:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2290:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2300:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2290:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2314:48:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2346:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2357:3:31",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:19:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2329:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:33:31"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2318:7:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2393:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2371:21:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2371:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2371:30:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2410:17:31",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2420:7:31"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2410:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1631:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1642:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1654:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1662:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1670:6:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1678:6:31",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1686:6:31",
                "type": ""
              }
            ],
            "src": "1527:906:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2560:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2570:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2582:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2593:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2578:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2578:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2570:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2612:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2627:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2643:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2648:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2639:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2639:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2652:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2635:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2635:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2605:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2605:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2605:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4293__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2529:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2540:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2551:4:31",
                "type": ""
              }
            ],
            "src": "2438:224:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2769:317:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2815:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2824:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2827:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2817:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2817:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2817:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2790:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2799:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2786:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2786:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2811:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2782:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2782:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2779:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2840:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2866:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2853:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2844:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2918:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2885:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2885:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2933:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2943:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2933:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2957:47:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2989:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3000:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2985:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2985:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2972:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:32:31"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2961:7:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3046:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "3013:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:41:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:41:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3063:17:31",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3073:7:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3063:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2727:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2738:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2750:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2758:6:31",
                "type": ""
              }
            ],
            "src": "2667:419:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3186:92:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3196:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3208:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3219:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3204:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3196:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3238:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3263:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3256:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3256:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3249:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3249:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3231:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:41:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3231:41:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3155:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3166:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3177:4:31",
                "type": ""
              }
            ],
            "src": "3091:187:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3353:110:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3399:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3408:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3411:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3401:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3401:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3401:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3374:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3383:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3370:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3370:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3395:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3366:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3366:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3363:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3424:33:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3447:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3434:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:23:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3424:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3319:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3330:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3342:6:31",
                "type": ""
              }
            ],
            "src": "3283:180:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3538:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3584:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3593:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3596:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3586:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3586:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3586:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3559:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3568:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3555:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3555:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3551:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3548:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3609:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3635:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3622:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3613:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3687:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "3654:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3654:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3654:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3702:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3712:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3504:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3515:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3527:6:31",
                "type": ""
              }
            ],
            "src": "3468:255:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3950:294:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3960:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3972:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3983:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3968:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3968:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3960:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3996:29:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4014:3:31",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4019:1:31",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4010:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4010:11:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4023:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4006:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:19:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4000:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4041:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4056:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4064:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4052:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4052:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4034:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4034:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4088:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4099:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4084:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4084:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4118:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4111:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4111:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4104:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4077:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4077:50:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4147:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4143:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4177:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4170:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4170:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4163:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4163:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:50:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4206:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4217:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4202:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4202:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4226:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4234:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4195:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4195:43:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4195:43:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4293_t_bool_t_bool_t_contract$_IRealityETH_IERC20_$11051__to_t_address_t_bool_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3895:9:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3906:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3914:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3922:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3930:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3941:4:31",
                "type": ""
              }
            ],
            "src": "3728:516:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4334:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4380:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4389:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4392:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4382:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4382:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4382:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4355:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4364:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4351:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4351:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4376:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4347:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "4344:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4405:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4431:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4418:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4409:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4483:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "4450:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4450:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4450:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4498:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4508:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4498:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4300:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4311:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4323:6:31",
                "type": ""
              }
            ],
            "src": "4249:270:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4659:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4669:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4681:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4692:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4677:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4669:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4711:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4726:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4742:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4747:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4738:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4738:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4751:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4734:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4734:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4722:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4722:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4704:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4704:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11190__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4628:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4639:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4650:4:31",
                "type": ""
              }
            ],
            "src": "4524:237:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4940:225:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4957:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4968:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4950:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4950:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4991:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5002:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4987:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4987:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5007:2:31",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4980:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4980:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5041:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5026:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5026:18:31"
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5046:34:31",
                        "type": "",
                        "value": "Token to answer cannot be 0 addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5101:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5112:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5097:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5097:18:31"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5117:5:31",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5090:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:33:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5132:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5144:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5155:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5140:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5132:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4917:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4931:4:31",
                "type": ""
              }
            ],
            "src": "4766:399:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5299:175:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5309:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5321:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5332:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5317:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5317:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5309:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5344:29:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5362:3:31",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5367:1:31",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5358:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5358:11:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5371:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5354:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5354:19:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5348:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5389:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5404:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5412:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5400:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5400:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5382:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5382:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5382:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5436:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5447:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5432:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5432:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5456:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5464:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5452:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5452:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5425:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5425:43:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5425:43:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5260:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5271:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5279:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5290:4:31",
                "type": ""
              }
            ],
            "src": "5170:304:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5557:167:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5603:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5612:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5615:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5605:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5605:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5605:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5578:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5587:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5574:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5574:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5599:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5570:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5570:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "5567:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5628:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5647:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5641:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5641:16:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5632:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5688:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5666:21:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5666:28:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5666:28:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5703:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5713:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5703:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5523:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5534:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5546:6:31",
                "type": ""
              }
            ],
            "src": "5479:245:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5779:373:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5789:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5809:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5803:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5803:12:31"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5793:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5831:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5836:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5824:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5824:19:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5824:19:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5852:10:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5861:1:31",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5856:1:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5923:110:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5937:14:31",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5947:4:31",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "5941:2:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "5979:3:31"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5984:1:31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5975:3:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5975:11:31"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5988:2:31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5971:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5971:20:31"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "6007:5:31"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6014:1:31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6003:3:31"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6003:13:31"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6018:2:31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5999:3:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5999:22:31"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5993:5:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5993:29:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5964:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5964:59:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5964:59:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5882:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5885:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5879:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5879:13:31"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5893:21:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5895:17:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5904:1:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5907:4:31",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5900:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5900:12:31"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5895:1:31"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5875:3:31",
                    "statements": []
                  },
                  "src": "5871:162:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6057:3:31"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6062:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6053:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6053:16:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6071:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6049:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6049:27:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6078:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6042:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:38:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6042:38:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6089:57:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6104:3:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6117:6:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6125:2:31",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6113:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6113:15:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6134:2:31",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6130:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6130:7:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6109:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6109:29:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6100:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6100:39:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6141:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6096:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6096:50:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6089:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5756:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5763:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5771:3:31",
                "type": ""
              }
            ],
            "src": "5729:423:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6438:455:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6455:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6466:3:31",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6448:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6448:22:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6448:22:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6479:60:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6511:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6523:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6534:3:31",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6519:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6519:19:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6493:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6493:46:31"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6483:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6559:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6570:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6555:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6555:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6579:6:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6587:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6575:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6575:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:50:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6607:41:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6633:6:31"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6641:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6615:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6615:33:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6607:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6679:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6664:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6664:18:31"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6684:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6657:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6657:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6657:34:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6700:29:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6718:3:31",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6723:1:31",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6714:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6714:11:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6727:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6710:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6710:19:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6704:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6749:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6760:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6745:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6745:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6769:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6777:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6765:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6765:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6738:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:43:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6738:43:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6801:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6812:3:31",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6797:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6797:19:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "6822:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6830:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6818:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6818:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6790:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6790:44:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6790:44:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6854:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6865:3:31",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6850:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6850:19:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "6875:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6883:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6871:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6871:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6843:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6843:44:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6843:44:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6367:9:31",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6378:6:31",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6386:6:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6394:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6402:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6410:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6418:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6429:4:31",
                "type": ""
              }
            ],
            "src": "6157:736:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7027:145:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7037:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7049:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7060:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7045:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7045:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7037:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7079:9:31"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7090:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7072:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7072:25:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7072:25:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7117:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7128:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7113:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7113:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7137:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7153:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7158:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7149:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7149:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7162:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7145:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7145:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7133:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7133:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7106:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7106:60:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7106:60:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6988:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6999:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7007:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7018:4:31",
                "type": ""
              }
            ],
            "src": "6898:274:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7224:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7263:111:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7284:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7291:3:31",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7296:10:31",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7287:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7287:20:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7277:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7277:31:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7277:31:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7328:1:31",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7331:4:31",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7321:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7321:15:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7321:15:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7356:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7359:4:31",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7349:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7349:15:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7349:15:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7240:5:31"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7251:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7247:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7247:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7237:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7237:17:31"
                  },
                  "nodeType": "YulIf",
                  "src": "7234:140:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7383:20:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7394:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7401:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7390:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7390:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7383:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7206:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7216:3:31",
                "type": ""
              }
            ],
            "src": "7177:232:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7495:178:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7541:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7550:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7553:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7543:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7543:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7543:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7516:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7525:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7512:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7512:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7537:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7508:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7508:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "7505:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7566:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7585:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7579:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7579:16:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7570:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7637:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "7604:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7604:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7604:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7652:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7662:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7652:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7461:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7472:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7484:6:31",
                "type": ""
              }
            ],
            "src": "7414:259:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7852:169:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7869:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7880:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7862:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7903:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7914:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7899:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7899:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7919:2:31",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7892:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7892:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7892:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7942:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7953:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7938:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7938:18:31"
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7958:21:31",
                        "type": "",
                        "value": "Land does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7931:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7931:49:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7931:49:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7989:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8001:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8012:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7997:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7997:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7989:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7829:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7843:4:31",
                "type": ""
              }
            ],
            "src": "7678:343:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8200:171:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8217:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8228:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8210:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8210:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8210:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8251:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8262:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8247:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8247:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8267:2:31",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8240:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8240:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8240:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8290:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8301:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8286:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8286:18:31"
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8306:23:31",
                        "type": "",
                        "value": "Not admin of the land"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8279:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8279:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8279:51:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8339:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8351:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8362:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8347:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8347:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8339:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8177:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8191:4:31",
                "type": ""
              }
            ],
            "src": "8026:345:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8550:172:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8567:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8578:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8560:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8560:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8560:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8601:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8612:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8597:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8597:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8617:2:31",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8590:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8590:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8590:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8640:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8651:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8636:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8636:18:31"
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8656:24:31",
                        "type": "",
                        "value": "Land is already active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8629:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8629:52:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8629:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8690:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8702:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8713:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8698:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8698:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8690:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8527:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8541:4:31",
                "type": ""
              }
            ],
            "src": "8376:346:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8901:168:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8918:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8929:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8911:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8911:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8911:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8952:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8963:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8948:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8948:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8968:2:31",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8941:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8941:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8941:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8991:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9002:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8987:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8987:18:31"
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9007:20:31",
                        "type": "",
                        "value": "Land is not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8980:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8980:48:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8980:48:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9037:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9049:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9060:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9045:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9045:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9037:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8878:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8892:4:31",
                "type": ""
              }
            ],
            "src": "8727:342:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9248:228:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9265:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9276:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9258:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9258:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9258:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9299:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9310:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9295:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9295:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9315:2:31",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9288:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9288:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9288:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9338:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9349:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9334:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9334:18:31"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9354:34:31",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9327:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9327:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9327:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9409:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9420:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9405:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9405:18:31"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9425:8:31",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9398:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9398:36:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9398:36:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9443:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9455:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9466:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9451:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9451:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9443:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9225:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9239:4:31",
                "type": ""
              }
            ],
            "src": "9074:402:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9655:182:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9672:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9683:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9665:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9665:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9665:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9706:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9717:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9702:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9702:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9722:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9695:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9695:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9695:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9745:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9756:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9741:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9741:18:31"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9761:34:31",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9734:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9734:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9734:62:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9805:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9817:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9828:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9813:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9813:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9805:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9632:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9646:4:31",
                "type": ""
              }
            ],
            "src": "9481:356:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_contract_IERC20(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4293__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4293_t_bool_t_bool_t_contract$_IRealityETH_IERC20_$11051__to_t_address_t_bool_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11190__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token to answer cannot be 0 addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        let tail_1 := abi_encode_string(value0, add(headStart, 192))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Land does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not admin of the land\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Land is already active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Land is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "329:5643:28:-:0;;;1372:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:16;936:18:4;:32::i;:::-;1716:1:6;1821:22;;-1:-1:-1;;;;;1484:26:28;;1476:78;;;;-1:-1:-1;;;1476:78:28;;781:2:31;1476:78:28;;;763:21:31;820:2;800:18;;;793:30;859:34;839:18;;;832:62;-1:-1:-1;;;910:18:31;;;903:37;957:19;;1476:78:28;;;;;;;;-1:-1:-1;;;;;1561:12:28;;;;1597:53;;1626:23;;1597:53;;;:::i;:::-;-1:-1:-1;;;;;1151:32:31;;;1133:51;;1121:2;1106:18;1597:53:28;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1579:71:28;;;;;1656:26;;;-1:-1:-1;329:5643:28;;-1:-1:-1;329:5643:28;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;329:5643:28:-;;;;;;;;:::o;14:177:31:-;93:13;;-1:-1:-1;;;;;135:31:31;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;987:203::-;329:5643:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "329:5643:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:36;;;;;;;;-1:-1:-1;;;;;178:32:31;;;160:51;;148:2;133:18;463:36:28;;;;;;;;1336:31;;;;;;;;;368:25:31;;;356:2;341:18;1336:31:28;222:177:31;1921:1575:28;;;;;;:::i;:::-;;:::i;399:29::-;;;;;5190:233;;;;;;:::i;:::-;;:::i;:::-;;;3256:14:31;;3249:22;3231:41;;3219:2;3204:18;5190:233:28;3091:187:31;1305:27:28;;;;;;:::i;:::-;;:::i;1264:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1264:37:28;;;;;-1:-1:-1;;;1264:37:28;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4052:15:31;;;4034:34;;4111:14;;4104:22;4099:2;4084:18;;4077:50;4170:14;;4163:22;4143:18;;;4136:50;;;;4222:15;;;4217:2;4202:18;;4195:43;3983:3;3968:19;1264:37:28;3728:516:31;4293:438:28;;;;;;:::i;:::-;;:::i;:::-;;3894:395;;;;;;:::i;:::-;;:::i;540:57::-;;;;;3500:390;;;;;;:::i;:::-;;:::i;1831:101:4:-;;;:::i;5797:173:28:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5907:27:28;;;5875:4;5907:27;;;:5;:27;;;;;;;;5948:17;;;;;;:11;;;;:17;;;;;;;;5797:173;4735:451;;;;;;:::i;:::-;;:::i;1201:85:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;5632:161:28;;;;;;:::i;:::-;-1:-1:-1;;;;;5736:27:28;5704:4;5736:27;;;:5;:27;;;;;5777:11;-1:-1:-1;;;5777:11:28;;;;;5632:161;5427:201;;;;;;:::i;:::-;;:::i;2081:198:4:-;;;;;;:::i;:::-;;:::i;1921:1575:28:-;2106:12;-1:-1:-1;;;;;2135:36:28;;2127:84;;;;-1:-1:-1;;;2127:84:28;;4968:2:31;2127:84:28;;;4950:21:31;5007:2;4987:18;;;4980:30;5046:34;5026:18;;;5019:62;-1:-1:-1;;;5097:18:31;;;5090:33;5140:19;;2127:84:28;;;;;;;;;2324:70;;-1:-1:-1;;;2324:70:28;;2376:4;2324:70;;;5382:34:31;2383:10:28;5432:18:31;;;5425:43;2298:11:28;;-1:-1:-1;;;;;2324:43:28;;;;;5317:18:31;;2324:70:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2316:79;;;;;;2441:22;2483:4;2489:6;2497:18;2525:4;2532:11;2553:4;2466:93;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2620:60:28;;-1:-1:-1;;;2620:60:28;;-1:-1:-1;;;;;;;;;;;2620:60:28;;;7072:25:31;-1:-1:-1;;;;;2674:4:28;7133:32:31;;7113:18;;;7106:60;2441:118:28;;-1:-1:-1;2620:19:28;;;;;;7045:18:31;;2620:60:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2737:57:28;;-1:-1:-1;;;2737:57:28;;-1:-1:-1;;;;;;;;;;;2737:57:28;;;7072:25:31;2783:10:28;7113:18:31;;;7106:60;-1:-1:-1;;;;;2737:19:28;;;-1:-1:-1;2737:19:28;;-1:-1:-1;7045:18:31;;2737:57:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;2864:25:28;;2844:17;2864:25;;;:5;:25;;;;;;;;2895:22;;-1:-1:-1;;;;;;;;;2923:18:28;;;;;;;;2959:10;2947:23;;-1:-1:-1;2947:11:28;;;:23;;;;;;:30;;-1:-1:-1;;2947:30:28;;;;;;;;2983:29;;;:56;;;;;;;;;;;;3045:10;:35;;;;;;;;;;;;;-1:-1:-1;;;;;;3045:35:28;;;;;;;3086:16;:18;;;;;;:::i;:::-;;;;-1:-1:-1;;3161:51:28;;-1:-1:-1;;;3161:51:28;;-1:-1:-1;;;;;178:32:31;;;3161:51:28;;;160::31;-1:-1:-1;;3161:15:28;:27;;;;;;133:18:31;;3161:51:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3161:65:28;;3157:140;;3236:54;;-1:-1:-1;;;3236:54:28;;-1:-1:-1;;;;;178:32:31;;;3236:54:28;;;160:51:31;3236:15:28;:30;;;;133:18:31;;3236:54:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:140;3337:51;;-1:-1:-1;;;3337:51:28;;-1:-1:-1;;;;;178:32:31;;;3337:51:28;;;160::31;3337:15:28;:27;;;;133:18:31;;3337:51:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3302:13;;;:87;;-1:-1:-1;;;;;;3302:87:28;;-1:-1:-1;;;;;3302:87:28;;;;;;;3401:67;;;;;;;;;3413:10;;3401:67;;-1:-1:-1;;3401:67:28;-1:-1:-1;3482:9:28;1921:1575;-1:-1:-1;;;;;;;1921:1575:28:o;5190:233::-;-1:-1:-1;;;;;5310:27:28;;5278:4;5310:27;;;:5;:27;;;;;5351:11;;-1:-1:-1;;;5351:11:28;;;;:67;;;;-1:-1:-1;5367:29:28;;;;;;;:50;;-1:-1:-1;;;;;;5400:17:28;;;;;;:11;;;:17;;;;;;;;5367:50;5344:74;5190:233;-1:-1:-1;;;;5190:233:28:o;1305:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1305:27:28;;-1:-1:-1;1305:27:28;:::o;4293:438::-;-1:-1:-1;;;;;4385:25:28;;4365:17;4385:25;;;:5;:25;;;;;4425:11;;-1:-1:-1;;;4425:11:28;;;;4417:43;;;;-1:-1:-1;;;4417:43:28;;7880:2:31;4417:43:28;;;7862:21:31;7919:2;7899:18;;;7892:30;-1:-1:-1;;;7938:18:31;;;7931:49;7997:18;;4417:43:28;7678:343:31;4417:43:28;4486:10;4474:23;;;;:11;;;:23;;;;;;;;4466:57;;;;-1:-1:-1;;;4466:57:28;;;;;;;:::i;:::-;4576:10;;:53;;-1:-1:-1;;;4576:53:28;;-1:-1:-1;;;;;;;;;;;4576:53:28;;;7072:25:31;-1:-1:-1;;;;;7133:32:31;;;7113:18;;;7106:60;4576:10:28;;;;:20;;7045:18:31;;4576:53:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4636:18:28;;;;;;;4657:4;4636:11;;;:18;;;;;;:25;;-1:-1:-1;;4636:25:28;;;;;;;4673:53;4636:18;;4673:53;;;4688:10;;4673:53;;;4359:372;4293:438;;:::o;3894:395::-;-1:-1:-1;;;;;3967:25:28;;3947:17;3967:25;;;:5;:25;;;;;4008:11;;-1:-1:-1;;;4008:11:28;;;;4007:12;3999:47;;;;-1:-1:-1;;;3999:47:28;;8578:2:31;3999:47:28;;;8560:21:31;8617:2;8597:18;;;8590:30;-1:-1:-1;;;8636:18:31;;;8629:52;8698:18;;3999:47:28;8376:346:31;3999:47:28;4072:10;4060:23;;;;:11;;;:23;;;;;;;;4052:57;;;;-1:-1:-1;;;4052:57:28;;;;;;;:::i;:::-;4139:18;;-1:-1:-1;;;;4139:18:28;-1:-1:-1;;;4139:18:28;;;4187:42;;;-1:-1:-1;;;4187:42:28;;;;-1:-1:-1;;;;;4187:40:28;;;;;:42;;;;;4139:11;;4187:42;;;;;;;4139:11;4187:40;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4241:43:28;;-1:-1:-1;;;;;4241:43:28;;;-1:-1:-1;4253:10:28;;-1:-1:-1;4241:43:28;;;;;3941:348;3894:395;:::o;3500:390::-;-1:-1:-1;;;;;3574:25:28;;3554:17;3574:25;;;:5;:25;;;;;3614:11;;-1:-1:-1;;;3614:11:28;;;;3606:42;;;;-1:-1:-1;;;3606:42:28;;8929:2:31;3606:42:28;;;8911:21:31;8968:2;8948:18;;;8941:30;-1:-1:-1;;;8987:18:31;;;8980:48;9045:18;;3606:42:28;8727:342:31;3606:42:28;3674:10;3662:23;;;;:11;;;:23;;;;;;;;3654:57;;;;-1:-1:-1;;;3654:57:28;;;;;;;:::i;:::-;3742:19;;-1:-1:-1;;;;3742:19:28;;;3789:40;;;-1:-1:-1;;;3789:40:28;;;;-1:-1:-1;;;;;3789:38:28;;;;;:40;;;;;3756:5;;3789:40;;;;;;;3756:5;3789:38;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3841:44:28;;-1:-1:-1;;;;;3841:44:28;;;-1:-1:-1;3854:10:28;;-1:-1:-1;3841:44:28;;;;;3548:342;3500:390;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4735:451:28:-;-1:-1:-1;;;;;4832:25:28;;4812:17;4832:25;;;:5;:25;;;;;4872:11;;-1:-1:-1;;;4872:11:28;;;;4864:43;;;;-1:-1:-1;;;4864:43:28;;7880:2:31;4864:43:28;;;7862:21:31;7919:2;7899:18;;;7892:30;-1:-1:-1;;;7938:18:31;;;7931:49;7997:18;;4864:43:28;7678:343:31;4864:43:28;4933:10;4921:23;;;;:11;;;:23;;;;;;;;4913:57;;;;-1:-1:-1;;;4913:57:28;;;;;;;:::i;:::-;5027:10;;:54;;-1:-1:-1;;;5027:54:28;;-1:-1:-1;;;;;;;;;;;5027:54:28;;;7072:25:31;-1:-1:-1;;;;;7133:32:31;;;7113:18;;;7106:60;5027:10:28;;;;:21;;7045:18:31;;5027:54:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5088:18:28;;;5109:5;5088:18;;;:11;;;:18;;;;;;:26;;-1:-1:-1;;5088:26:28;;;5126:55;5088:18;;5126:55;;;5143:10;;5126:55;;;4806:380;4735:451;;:::o;5427:201::-;-1:-1:-1;;;;;5550:27:28;;5518:4;5550:27;;;:5;:27;;;;;5591:11;;-1:-1:-1;;;5591:11:28;;;;:32;;;;-1:-1:-1;;;;;;5606:17:28;;;;;;:11;;;:17;;;;;;;;5584:39;;;5427:201;;;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;9276:2:31;2161:73:4::1;::::0;::::1;9258:21:31::0;9315:2;9295:18;;;9288:30;9354:34;9334:18;;;9327:62;-1:-1:-1;;;9405:18:31;;;9398:36;9451:19;;2161:73:4::1;9074:402:31::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:16;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;9683:2:31;1414:68:4;;;9665:21:31;;;9702:18;;;9695:30;9761:34;9741:18;;;9734:62;9813:18;;1414:68:4;9481:356:31;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;404:127:31:-;465:10;460:3;456:20;453:1;446:31;496:4;493:1;486:15;520:4;517:1;510:15;536:719;579:5;632:3;625:4;617:6;613:17;609:27;599:55;;650:1;647;640:12;599:55;686:6;673:20;712:18;749:2;745;742:10;739:36;;;755:18;;:::i;:::-;830:2;824:9;798:2;884:13;;-1:-1:-1;;880:22:31;;;904:2;876:31;872:40;860:53;;;928:18;;;948:22;;;925:46;922:72;;;974:18;;:::i;:::-;1014:10;1010:2;1003:22;1049:2;1041:6;1034:18;1095:3;1088:4;1083:2;1075:6;1071:15;1067:26;1064:35;1061:55;;;1112:1;1109;1102:12;1061:55;1176:2;1169:4;1161:6;1157:17;1150:4;1142:6;1138:17;1125:54;1223:1;1216:4;1211:2;1203:6;1199:15;1195:26;1188:37;1243:6;1234:15;;;;;;536:719;;;;:::o;1260:139::-;-1:-1:-1;;;;;1343:31:31;;1333:42;;1323:70;;1389:1;1386;1379:12;1404:118;1490:5;1483:13;1476:21;1469:5;1466:32;1456:60;;1512:1;1509;1502:12;1527:906;1654:6;1662;1670;1678;1686;1739:3;1727:9;1718:7;1714:23;1710:33;1707:53;;;1756:1;1753;1746:12;1707:53;1796:9;1783:23;1825:18;1866:2;1858:6;1855:14;1852:34;;;1882:1;1879;1872:12;1852:34;1905:50;1947:7;1938:6;1927:9;1923:22;1905:50;:::i;:::-;1895:60;;2008:2;1997:9;1993:18;1980:32;1964:48;;2037:2;2027:8;2024:16;2021:36;;;2053:1;2050;2043:12;2021:36;;2076:52;2120:7;2109:8;2098:9;2094:24;2076:52;:::i;:::-;2066:62;;;2175:2;2164:9;2160:18;2147:32;2137:42;;2229:2;2218:9;2214:18;2201:32;2242:39;2275:5;2242:39;:::i;:::-;2300:5;-1:-1:-1;2357:3:31;2342:19;;2329:33;2371:30;2329:33;2371:30;:::i;:::-;2420:7;2410:17;;;1527:906;;;;;;;;:::o;2667:419::-;2750:6;2758;2811:2;2799:9;2790:7;2786:23;2782:32;2779:52;;;2827:1;2824;2817:12;2779:52;2866:9;2853:23;2885:39;2918:5;2885:39;:::i;:::-;2943:5;-1:-1:-1;3000:2:31;2985:18;;2972:32;3013:41;2972:32;3013:41;:::i;:::-;3073:7;3063:17;;;2667:419;;;;;:::o;3283:180::-;3342:6;3395:2;3383:9;3374:7;3370:23;3366:32;3363:52;;;3411:1;3408;3401:12;3363:52;-1:-1:-1;3434:23:31;;3283:180;-1:-1:-1;3283:180:31:o;3468:255::-;3527:6;3580:2;3568:9;3559:7;3555:23;3551:32;3548:52;;;3596:1;3593;3586:12;3548:52;3635:9;3622:23;3654:39;3687:5;3654:39;:::i;:::-;3712:5;3468:255;-1:-1:-1;;;3468:255:31:o;5479:245::-;5546:6;5599:2;5587:9;5578:7;5574:23;5570:32;5567:52;;;5615:1;5612;5605:12;5567:52;5647:9;5641:16;5666:28;5688:5;5666:28;:::i;5729:423::-;5771:3;5809:5;5803:12;5836:6;5831:3;5824:19;5861:1;5871:162;5885:6;5882:1;5879:13;5871:162;;;5947:4;6003:13;;;5999:22;;5993:29;5975:11;;;5971:20;;5964:59;5900:12;5871:162;;;5875:3;6078:1;6071:4;6062:6;6057:3;6053:16;6049:27;6042:38;6141:4;6134:2;6130:7;6125:2;6117:6;6113:15;6109:29;6104:3;6100:39;6096:50;6089:57;;;5729:423;;;;:::o;6157:736::-;6466:3;6455:9;6448:22;6429:4;6493:46;6534:3;6523:9;6519:19;6511:6;6493:46;:::i;:::-;6587:9;6579:6;6575:22;6570:2;6559:9;6555:18;6548:50;6615:33;6641:6;6633;6615:33;:::i;:::-;6679:2;6664:18;;6657:34;;;;-1:-1:-1;;;;;;;6765:15:31;;;6760:2;6745:18;;6738:43;6818:15;;;6812:3;6797:19;;6790:44;6871:15;;;6718:3;6850:19;;;6843:44;6607:41;6157:736;-1:-1:-1;;6157:736:31:o;7177:232::-;7216:3;7237:17;;;7234:140;;7296:10;7291:3;7287:20;7284:1;7277:31;7331:4;7328:1;7321:15;7359:4;7356:1;7349:15;7234:140;-1:-1:-1;7401:1:31;7390:13;;7177:232::o;7414:259::-;7484:6;7537:2;7525:9;7516:7;7512:23;7508:32;7505:52;;;7553:1;7550;7543:12;7505:52;7585:9;7579:16;7604:39;7637:5;7604:39;:::i;8026:345::-;8228:2;8210:21;;;8267:2;8247:18;;;8240:30;-1:-1:-1;;;8301:2:31;8286:18;;8279:51;8362:2;8347:18;;8026:345::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./FantasyERC20.sol\";\nimport \"./RealityETH_ERC20_Factory.sol\";\nimport \"./IPredictionMarketV3Factory.sol\";\n\n// openzeppelin ownable contract import\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract PredictionMarketV3Controller is Ownable, ReentrancyGuard {\n  address public immutable PMV3; // PredictionMarketV3 contract\n  address public immutable PMV3Factory; // PredictionMarketFactory contract\n\n  RealityETH_ERC20_Factory public immutable realitioFactory;\n\n  event LandCreated(address indexed user, address indexed token, address indexed tokenToAnswer);\n\n  event LandDisabled(address indexed user, address indexed token);\n\n  event LandEnabled(address indexed user, address indexed token);\n\n  event LandOffsetUnlocked(address indexed user, address indexed token);\n\n  event LandAdminAdded(address indexed user, address indexed token, address indexed admin);\n\n  event LandAdminRemoved(address indexed user, address indexed token, address indexed admin);\n\n  struct Land {\n    FantasyERC20 token;\n    bool active;\n    mapping(address => bool) admins;\n    bool everyoneCanCreateMarkets;\n    IRealityETH_IERC20 realitio;\n  }\n\n  mapping(address => Land) public lands;\n  address[] public landTokens;\n  uint256 public landTokensLength;\n\n  constructor(\n    address _PMV3,\n    address _realitioLibraryAddress,\n    address _PMV3Factory\n  ) {\n    require(_PMV3Factory != address(0), \"PMV3Factory address cannot be 0 address\");\n\n    PMV3 = _PMV3;\n    realitioFactory = new RealityETH_ERC20_Factory(_realitioLibraryAddress);\n    PMV3Factory = _PMV3Factory;\n  }\n\n  // lockAmount is the amount of tokens that the user needs to lock to create a land\n  // by locking the amount the factory will create a fantasyERC20 token and store it in the contract\n  // the user will be the admin of the land\n  function createLand(\n    string memory name,\n    string memory symbol,\n    uint256 tokenAmountToClaim,\n    IERC20 tokenToAnswer,\n    bool everyoneCanCreateMarkets\n  ) external returns (FantasyERC20) {\n\n    require(address(tokenToAnswer) != address(0), \"Token to answer cannot be 0 address\");\n\n    IPredictionMarketV3Factory predictionMarketFactory = IPredictionMarketV3Factory(PMV3Factory);\n    require(predictionMarketFactory.isPMControllerAdmin(address(this), msg.sender));\n\n    // create a new fantasyERC20 token\n    FantasyERC20 landToken = new FantasyERC20(name, symbol, tokenAmountToClaim, address(PMV3), PMV3Factory, address(this));\n\n    // adding minting privileges to the PMV3 contract\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), address(PMV3));\n    // adding minting privileges to the msg.sender\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), msg.sender);\n\n    // store the new token in the contract\n    Land storage land = lands[address(landToken)];\n    land.token = landToken;\n    land.active = true;\n    land.admins[msg.sender] = true;\n    land.everyoneCanCreateMarkets = everyoneCanCreateMarkets;\n    landTokens.push(address(landToken));\n    landTokensLength++;\n\n    // creating the realityETH_ERC20 contract\n    if (realitioFactory.deployments(address(tokenToAnswer)) == address(0)) {\n      realitioFactory.createInstance(address(tokenToAnswer));\n    }\n    land.realitio = IRealityETH_IERC20(realitioFactory.deployments(address(tokenToAnswer)));\n\n    emit LandCreated(msg.sender, address(landToken), address(tokenToAnswer));\n\n    return landToken;\n  }\n\n  function disableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land is not active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // disable the land\n    land.active = false;\n\n    // pausing token\n    FantasyERC20(address(landToken)).pause();\n\n    emit LandDisabled(msg.sender, address(landToken));\n  }\n\n  function enableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(!land.active, \"Land is already active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // enable the land\n    land.active = true;\n\n    // unpausing token\n    FantasyERC20(address(landToken)).unpause();\n\n    emit LandEnabled(msg.sender, address(landToken));\n  }\n\n  function addAdminToLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // adding minting privileges to the admin\n    land.token.grantRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = true;\n\n    emit LandAdminAdded(msg.sender, address(landToken), admin);\n  }\n\n  function removeAdminFromLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // removing minting privileges from the admin\n    land.token.revokeRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = false;\n\n    emit LandAdminRemoved(msg.sender, address(landToken), admin);\n  }\n\n  function isAllowedToCreateMarket(IERC20 marketToken, address user) public view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && (land.everyoneCanCreateMarkets || land.admins[user]);\n  }\n\n  function isAllowedToResolveMarket(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isIERC20TokenSocial(IERC20 marketToken) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active;\n  }\n\n  function isLandAdmin(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.admins[user];\n  }\n}\n",
  "sourcePath": "/Users/andregoncalves/sideprojects/polkamarkets/polkamarkets-js/contracts/PredictionMarketV3Controller.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarketV3Controller.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Context": [
        2389
      ],
      "ERC165": [
        2588
      ],
      "ERC20": [
        1400
      ],
      "ERC20Burnable": [
        1522
      ],
      "ERC20Pausable": [
        1559
      ],
      "ERC20PresetMinterPauser": [
        1756
      ],
      "EnumerableSet": [
        4078
      ],
      "FantasyERC20": [
        4293
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "IERC165": [
        2600
      ],
      "IERC20": [
        1478
      ],
      "IERC20Metadata": [
        1584
      ],
      "IPredictionMarketV3Factory": [
        4346
      ],
      "IRealityETH_ERC20": [
        4949
      ],
      "IRealityETH_IERC20": [
        11051
      ],
      "Math": [
        3465
      ],
      "Ownable": [
        651
      ],
      "Pausable": [
        759
      ],
      "PredictionMarketV3Controller": [
        10373
      ],
      "RealityETH_ERC20_Factory": [
        11190
      ],
      "ReentrancyGuard": [
        813
      ],
      "Strings": [
        2564
      ]
    },
    "id": 10374,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9711,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:28"
      },
      {
        "absolutePath": "project:/contracts/FantasyERC20.sol",
        "file": "./FantasyERC20.sol",
        "id": 9712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10374,
        "sourceUnit": 4294,
        "src": "58:28:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RealityETH_ERC20_Factory.sol",
        "file": "./RealityETH_ERC20_Factory.sol",
        "id": 9713,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10374,
        "sourceUnit": 11191,
        "src": "87:40:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IPredictionMarketV3Factory.sol",
        "file": "./IPredictionMarketV3Factory.sol",
        "id": 9714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10374,
        "sourceUnit": 4347,
        "src": "128:42:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10374,
        "sourceUnit": 652,
        "src": "212:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 9716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10374,
        "sourceUnit": 814,
        "src": "265:62:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9717,
              "name": "Ownable",
              "nameLocations": [
                "370:7:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "370:7:28"
            },
            "id": 9718,
            "nodeType": "InheritanceSpecifier",
            "src": "370:7:28"
          },
          {
            "baseName": {
              "id": 9719,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "379:15:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 813,
              "src": "379:15:28"
            },
            "id": 9720,
            "nodeType": "InheritanceSpecifier",
            "src": "379:15:28"
          }
        ],
        "canonicalName": "PredictionMarketV3Controller",
        "contractDependencies": [
          4293,
          11190
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10373,
        "linearizedBaseContracts": [
          10373,
          813,
          651,
          2389
        ],
        "name": "PredictionMarketV3Controller",
        "nameLocation": "338:28:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1cbe8a65",
            "id": 9722,
            "mutability": "immutable",
            "name": "PMV3",
            "nameLocation": "424:4:28",
            "nodeType": "VariableDeclaration",
            "scope": 10373,
            "src": "399:29:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9721,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c27c26c",
            "id": 9724,
            "mutability": "immutable",
            "name": "PMV3Factory",
            "nameLocation": "488:11:28",
            "nodeType": "VariableDeclaration",
            "scope": 10373,
            "src": "463:36:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9723,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e3dd8ba",
            "id": 9727,
            "mutability": "immutable",
            "name": "realitioFactory",
            "nameLocation": "582:15:28",
            "nodeType": "VariableDeclaration",
            "scope": 10373,
            "src": "540:57:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
              "typeString": "contract RealityETH_ERC20_Factory"
            },
            "typeName": {
              "id": 9726,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9725,
                "name": "RealityETH_ERC20_Factory",
                "nameLocations": [
                  "540:24:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11190,
                "src": "540:24:28"
              },
              "referencedDeclaration": 11190,
              "src": "540:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                "typeString": "contract RealityETH_ERC20_Factory"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03",
            "id": 9735,
            "name": "LandCreated",
            "nameLocation": "608:11:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9729,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "636:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9735,
                  "src": "620:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9731,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "658:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9735,
                  "src": "642:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9733,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "681:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9735,
                  "src": "665:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "619:76:28"
            },
            "src": "602:94:28"
          },
          {
            "anonymous": false,
            "eventSelector": "8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc4",
            "id": 9741,
            "name": "LandDisabled",
            "nameLocation": "706:12:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9737,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "735:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9741,
                  "src": "719:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9739,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "757:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9741,
                  "src": "741:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:45:28"
            },
            "src": "700:64:28"
          },
          {
            "anonymous": false,
            "eventSelector": "db2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f650",
            "id": 9747,
            "name": "LandEnabled",
            "nameLocation": "774:11:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9743,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "802:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9747,
                  "src": "786:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9745,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "824:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9747,
                  "src": "808:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:45:28"
            },
            "src": "768:63:28"
          },
          {
            "anonymous": false,
            "eventSelector": "d4f6618e5a71236611ad6e76f5eb1b23884c77efbb410f3beedada00549181b3",
            "id": 9753,
            "name": "LandOffsetUnlocked",
            "nameLocation": "841:18:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9749,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "876:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9753,
                  "src": "860:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9751,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "898:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9753,
                  "src": "882:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:45:28"
            },
            "src": "835:70:28"
          },
          {
            "anonymous": false,
            "eventSelector": "b8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68",
            "id": 9761,
            "name": "LandAdminAdded",
            "nameLocation": "915:14:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9755,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "946:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9761,
                  "src": "930:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9757,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "968:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9761,
                  "src": "952:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9759,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "991:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9761,
                  "src": "975:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "929:68:28"
            },
            "src": "909:89:28"
          },
          {
            "anonymous": false,
            "eventSelector": "5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560",
            "id": 9769,
            "name": "LandAdminRemoved",
            "nameLocation": "1008:16:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9763,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1041:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9769,
                  "src": "1025:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9765,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1063:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9769,
                  "src": "1047:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9767,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1086:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9769,
                  "src": "1070:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1024:68:28"
            },
            "src": "1002:91:28"
          },
          {
            "canonicalName": "PredictionMarketV3Controller.Land",
            "id": 9784,
            "members": [
              {
                "constant": false,
                "id": 9772,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1128:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 9784,
                "src": "1115:18:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                  "typeString": "contract FantasyERC20"
                },
                "typeName": {
                  "id": 9771,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9770,
                    "name": "FantasyERC20",
                    "nameLocations": [
                      "1115:12:28"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4293,
                    "src": "1115:12:28"
                  },
                  "referencedDeclaration": 4293,
                  "src": "1115:12:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                    "typeString": "contract FantasyERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9774,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1144:6:28",
                "nodeType": "VariableDeclaration",
                "scope": 9784,
                "src": "1139:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9773,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1139:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9778,
                "mutability": "mutable",
                "name": "admins",
                "nameLocation": "1181:6:28",
                "nodeType": "VariableDeclaration",
                "scope": 9784,
                "src": "1156:31:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 9777,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 9775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1156:24:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 9776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9780,
                "mutability": "mutable",
                "name": "everyoneCanCreateMarkets",
                "nameLocation": "1198:24:28",
                "nodeType": "VariableDeclaration",
                "scope": 9784,
                "src": "1193:29:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9779,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9783,
                "mutability": "mutable",
                "name": "realitio",
                "nameLocation": "1247:8:28",
                "nodeType": "VariableDeclaration",
                "scope": 9784,
                "src": "1228:27:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11051",
                  "typeString": "contract IRealityETH_IERC20"
                },
                "typeName": {
                  "id": 9782,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9781,
                    "name": "IRealityETH_IERC20",
                    "nameLocations": [
                      "1228:18:28"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11051,
                    "src": "1228:18:28"
                  },
                  "referencedDeclaration": 11051,
                  "src": "1228:18:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11051",
                    "typeString": "contract IRealityETH_IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Land",
            "nameLocation": "1104:4:28",
            "nodeType": "StructDefinition",
            "scope": 10373,
            "src": "1097:163:28",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33b22760",
            "id": 9789,
            "mutability": "mutable",
            "name": "lands",
            "nameLocation": "1296:5:28",
            "nodeType": "VariableDeclaration",
            "scope": 10373,
            "src": "1264:37:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
              "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
            },
            "typeName": {
              "id": 9788,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9785,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1272:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1264:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9787,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9786,
                  "name": "Land",
                  "nameLocations": [
                    "1283:4:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9784,
                  "src": "1283:4:28"
                },
                "referencedDeclaration": 9784,
                "src": "1283:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                  "typeString": "struct PredictionMarketV3Controller.Land"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "30ccd17a",
            "id": 9792,
            "mutability": "mutable",
            "name": "landTokens",
            "nameLocation": "1322:10:28",
            "nodeType": "VariableDeclaration",
            "scope": 10373,
            "src": "1305:27:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9790,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1305:7:28",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9791,
              "nodeType": "ArrayTypeName",
              "src": "1305:9:28",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1311758b",
            "id": 9794,
            "mutability": "mutable",
            "name": "landTokensLength",
            "nameLocation": "1351:16:28",
            "nodeType": "VariableDeclaration",
            "scope": 10373,
            "src": "1336:31:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9793,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9829,
              "nodeType": "Block",
              "src": "1470:217:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9804,
                          "name": "_PMV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9800,
                          "src": "1484:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1508:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1500:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9805,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1500:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1500:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1484:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f7420626520302061646472657373",
                        "id": 9810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:41:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        },
                        "value": "PMV3Factory address cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        }
                      ],
                      "id": 9803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1476:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:78:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9812,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:78:28"
                },
                {
                  "expression": {
                    "id": 9815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9813,
                      "name": "PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9722,
                      "src": "1561:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9814,
                      "name": "_PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9796,
                      "src": "1568:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1561:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9816,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:12:28"
                },
                {
                  "expression": {
                    "id": 9823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9817,
                      "name": "realitioFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9727,
                      "src": "1579:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9821,
                          "name": "_realitioLibraryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9798,
                          "src": "1626:23:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1597:28:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_RealityETH_ERC20_Factory_$11190_$",
                          "typeString": "function (address) returns (contract RealityETH_ERC20_Factory)"
                        },
                        "typeName": {
                          "id": 9819,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9818,
                            "name": "RealityETH_ERC20_Factory",
                            "nameLocations": [
                              "1601:24:28"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11190,
                            "src": "1601:24:28"
                          },
                          "referencedDeclaration": 11190,
                          "src": "1601:24:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        }
                      },
                      "id": 9822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1597:53:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "src": "1579:71:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                      "typeString": "contract RealityETH_ERC20_Factory"
                    }
                  },
                  "id": 9824,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:71:28"
                },
                {
                  "expression": {
                    "id": 9827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9825,
                      "name": "PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9724,
                      "src": "1656:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9826,
                      "name": "_PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9800,
                      "src": "1670:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1656:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9828,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:26:28"
                }
              ]
            },
            "id": 9830,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9796,
                  "mutability": "mutable",
                  "name": "_PMV3",
                  "nameLocation": "1397:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9830,
                  "src": "1389:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9798,
                  "mutability": "mutable",
                  "name": "_realitioLibraryAddress",
                  "nameLocation": "1416:23:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9830,
                  "src": "1408:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9800,
                  "mutability": "mutable",
                  "name": "_PMV3Factory",
                  "nameLocation": "1453:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9830,
                  "src": "1445:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1383:86:28"
            },
            "returnParameters": {
              "id": 9802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:28"
            },
            "scope": 10373,
            "src": "1372:315:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10022,
              "nodeType": "Block",
              "src": "2120:1376:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9850,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9839,
                              "src": "2143:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2135:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9848,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2135:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:22:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2169:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2161:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9852,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2161:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2161:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2135:36:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472657373",
                        "id": 9857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2173:37:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        },
                        "value": "Token to answer cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        }
                      ],
                      "id": 9847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2127:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:84:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9859,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:84:28"
                },
                {
                  "assignments": [
                    9862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9862,
                      "mutability": "mutable",
                      "name": "predictionMarketFactory",
                      "nameLocation": "2245:23:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10022,
                      "src": "2218:50:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4346",
                        "typeString": "contract IPredictionMarketV3Factory"
                      },
                      "typeName": {
                        "id": 9861,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9860,
                          "name": "IPredictionMarketV3Factory",
                          "nameLocations": [
                            "2218:26:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4346,
                          "src": "2218:26:28"
                        },
                        "referencedDeclaration": 4346,
                        "src": "2218:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4346",
                          "typeString": "contract IPredictionMarketV3Factory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9866,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9864,
                        "name": "PMV3Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9724,
                        "src": "2298:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9863,
                      "name": "IPredictionMarketV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4346,
                      "src": "2271:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPredictionMarketV3Factory_$4346_$",
                        "typeString": "type(contract IPredictionMarketV3Factory)"
                      }
                    },
                    "id": 9865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4346",
                      "typeString": "contract IPredictionMarketV3Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2218:92:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9872,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2376:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10373",
                                  "typeString": "contract PredictionMarketV3Controller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10373",
                                  "typeString": "contract PredictionMarketV3Controller"
                                }
                              ],
                              "id": 9871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2368:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9870,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2368:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2368:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 9874,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2383:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2387:6:28",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2383:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9868,
                            "name": "predictionMarketFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9862,
                            "src": "2324:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4346",
                              "typeString": "contract IPredictionMarketV3Factory"
                            }
                          },
                          "id": 9869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2348:19:28",
                          "memberName": "isPMControllerAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4338,
                          "src": "2324:43:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 9876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2324:70:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2316:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2316:79:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9878,
                  "nodeType": "ExpressionStatement",
                  "src": "2316:79:28"
                },
                {
                  "assignments": [
                    9881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9881,
                      "mutability": "mutable",
                      "name": "landToken",
                      "nameLocation": "2454:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10022,
                      "src": "2441:22:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                        "typeString": "contract FantasyERC20"
                      },
                      "typeName": {
                        "id": 9880,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9879,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2441:12:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4293,
                          "src": "2441:12:28"
                        },
                        "referencedDeclaration": 4293,
                        "src": "2441:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9898,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9885,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9832,
                        "src": "2483:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9886,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9834,
                        "src": "2489:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9887,
                        "name": "tokenAmountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9836,
                        "src": "2497:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9890,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9722,
                            "src": "2525:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2517:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9888,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2517:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9892,
                        "name": "PMV3Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9724,
                        "src": "2532:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9895,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2553:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10373",
                              "typeString": "contract PredictionMarketV3Controller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10373",
                              "typeString": "contract PredictionMarketV3Controller"
                            }
                          ],
                          "id": 9894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2545:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9893,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2545:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2545:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2466:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_FantasyERC20_$4293_$",
                        "typeString": "function (string memory,string memory,uint256,address,address,address) returns (contract FantasyERC20)"
                      },
                      "typeName": {
                        "id": 9883,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9882,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2470:12:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4293,
                          "src": "2470:12:28"
                        },
                        "referencedDeclaration": 4293,
                        "src": "2470:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      }
                    },
                    "id": 9897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:93:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2441:118:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2650:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9902,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2640:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2640:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9907,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9722,
                            "src": "2674:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2666:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9905,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2666:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2666:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9899,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "2620:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2630:9:28",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2620:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2620:60:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9910,
                  "nodeType": "ExpressionStatement",
                  "src": "2620:60:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2767:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9914,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2757:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2757:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 9917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2783:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2787:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2783:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9911,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "2737:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2747:9:28",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2737:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2737:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9920,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:57:28"
                },
                {
                  "assignments": [
                    9923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9923,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "2857:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10022,
                      "src": "2844:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9922,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9921,
                          "name": "Land",
                          "nameLocations": [
                            "2844:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "2844:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "2844:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9930,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9924,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "2864:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9929,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9927,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9881,
                          "src": "2878:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                            "typeString": "contract FantasyERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                            "typeString": "contract FantasyERC20"
                          }
                        ],
                        "id": 9926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2870:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2870:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2870:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2864:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2844:45:28"
                },
                {
                  "expression": {
                    "id": 9935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9931,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9923,
                        "src": "2895:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2900:5:28",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9772,
                      "src": "2895:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9934,
                      "name": "landToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9881,
                      "src": "2908:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "src": "2895:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "id": 9936,
                  "nodeType": "ExpressionStatement",
                  "src": "2895:22:28"
                },
                {
                  "expression": {
                    "id": 9941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9937,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9923,
                        "src": "2923:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9939,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2928:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "2923:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2937:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2923:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9942,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:18:28"
                },
                {
                  "expression": {
                    "id": 9950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 9943,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9923,
                          "src": "2947:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 9947,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2952:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9778,
                        "src": "2947:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9948,
                      "indexExpression": {
                        "expression": {
                          "id": 9945,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2959:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2963:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2959:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2947:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2973:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2947:30:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9951,
                  "nodeType": "ExpressionStatement",
                  "src": "2947:30:28"
                },
                {
                  "expression": {
                    "id": 9956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9952,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9923,
                        "src": "2983:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2988:24:28",
                      "memberName": "everyoneCanCreateMarkets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9780,
                      "src": "2983:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9955,
                      "name": "everyoneCanCreateMarkets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9841,
                      "src": "3015:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2983:56:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9957,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:56:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9963,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9881,
                            "src": "3069:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3061:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9961,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3061:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3061:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9958,
                        "name": "landTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9792,
                        "src": "3045:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3056:4:28",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3045:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3045:35:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:35:28"
                },
                {
                  "expression": {
                    "id": 9968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3086:18:28",
                    "subExpression": {
                      "id": 9967,
                      "name": "landTokensLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9794,
                      "src": "3086:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9969,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:18:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9974,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9839,
                              "src": "3197:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3189:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9972,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3189:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3189:22:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 9970,
                          "name": "realitioFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9727,
                          "src": "3161:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        },
                        "id": 9971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3177:11:28",
                        "memberName": "deployments",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11057,
                        "src": "3161:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) view external returns (address)"
                        }
                      },
                      "id": 9976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3161:51:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3224:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3216:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9977,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3216:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3216:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3161:65:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9992,
                  "nodeType": "IfStatement",
                  "src": "3157:140:28",
                  "trueBody": {
                    "id": 9991,
                    "nodeType": "Block",
                    "src": "3228:69:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9987,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9839,
                                  "src": "3275:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3267:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9985,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3267:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3267:22:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9982,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9727,
                              "src": "3236:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3252:14:28",
                            "memberName": "createInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11189,
                            "src": "3236:30:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 9989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3236:54:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9990,
                        "nodeType": "ExpressionStatement",
                        "src": "3236:54:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9993,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9923,
                        "src": "3302:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3307:8:28",
                      "memberName": "realitio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9783,
                      "src": "3302:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11051",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 10001,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9839,
                                  "src": "3373:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 10000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3365:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9999,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3365:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3365:22:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9997,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9727,
                              "src": "3337:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11190",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3353:11:28",
                            "memberName": "deployments",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11057,
                            "src": "3337:27:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 10003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3337:51:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9996,
                        "name": "IRealityETH_IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11051,
                        "src": "3318:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRealityETH_IERC20_$11051_$",
                          "typeString": "type(contract IRealityETH_IERC20)"
                        }
                      },
                      "id": 10004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3318:71:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11051",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "src": "3302:87:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11051",
                      "typeString": "contract IRealityETH_IERC20"
                    }
                  },
                  "id": 10006,
                  "nodeType": "ExpressionStatement",
                  "src": "3302:87:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10008,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3413:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3417:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3413:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10012,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9881,
                            "src": "3433:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 10011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3425:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10010,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3425:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3425:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10016,
                            "name": "tokenToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9839,
                            "src": "3453:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3445:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3445:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:22:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10007,
                      "name": "LandCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9735,
                      "src": "3401:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3401:67:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10019,
                  "nodeType": "EmitStatement",
                  "src": "3396:72:28"
                },
                {
                  "expression": {
                    "id": 10020,
                    "name": "landToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9881,
                    "src": "3482:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "functionReturnParameters": 9846,
                  "id": 10021,
                  "nodeType": "Return",
                  "src": "3475:16:28"
                }
              ]
            },
            "functionSelector": "1b4d534e",
            "id": 10023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLand",
            "nameLocation": "1930:10:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9832,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1960:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10023,
                  "src": "1946:18:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9831,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9834,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1984:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10023,
                  "src": "1970:20:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9833,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9836,
                  "mutability": "mutable",
                  "name": "tokenAmountToClaim",
                  "nameLocation": "2004:18:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10023,
                  "src": "1996:26:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9839,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "2035:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10023,
                  "src": "2028:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9838,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9837,
                      "name": "IERC20",
                      "nameLocations": [
                        "2028:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "2028:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "2028:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9841,
                  "mutability": "mutable",
                  "name": "everyoneCanCreateMarkets",
                  "nameLocation": "2059:24:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10023,
                  "src": "2054:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9840,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1940:147:28"
            },
            "returnParameters": {
              "id": 9846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10023,
                  "src": "2106:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                    "typeString": "contract FantasyERC20"
                  },
                  "typeName": {
                    "id": 9844,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9843,
                      "name": "FantasyERC20",
                      "nameLocations": [
                        "2106:12:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4293,
                      "src": "2106:12:28"
                    },
                    "referencedDeclaration": 4293,
                    "src": "2106:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2105:14:28"
            },
            "scope": 10373,
            "src": "1921:1575:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10078,
              "nodeType": "Block",
              "src": "3548:342:28",
              "statements": [
                {
                  "assignments": [
                    10031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10031,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3567:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10078,
                      "src": "3554:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10030,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10029,
                          "name": "Land",
                          "nameLocations": [
                            "3554:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "3554:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "3554:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10038,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10032,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "3574:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10037,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10035,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10026,
                          "src": "3588:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3580:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10033,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3580:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3580:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3574:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3554:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10040,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10031,
                          "src": "3614:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10041,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3619:6:28",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9774,
                        "src": "3614:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "id": 10042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3627:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        },
                        "value": "Land is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        }
                      ],
                      "id": 10039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3606:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10044,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:42:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10046,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10031,
                            "src": "3662:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3667:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9778,
                          "src": "3662:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10050,
                        "indexExpression": {
                          "expression": {
                            "id": 10048,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3674:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3678:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3674:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3662:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3687:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3654:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10053,
                  "nodeType": "ExpressionStatement",
                  "src": "3654:57:28"
                },
                {
                  "expression": {
                    "id": 10058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10054,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10031,
                        "src": "3742:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10056,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3747:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "3742:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3756:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3742:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10059,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:19:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10063,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10026,
                                "src": "3810:9:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3802:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10061,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3802:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3802:18:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10060,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4293,
                          "src": "3789:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4293_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 10065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3789:32:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3822:5:28",
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "3789:38:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3789:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10068,
                  "nodeType": "ExpressionStatement",
                  "src": "3789:40:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10070,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3854:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3858:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3854:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10074,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10026,
                            "src": "3874:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3866:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10072,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3866:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3866:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10069,
                      "name": "LandDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9741,
                      "src": "3841:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3841:44:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10077,
                  "nodeType": "EmitStatement",
                  "src": "3836:49:28"
                }
              ]
            },
            "functionSelector": "70e92078",
            "id": 10079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableLand",
            "nameLocation": "3509:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10026,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3528:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "3521:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10024,
                      "name": "IERC20",
                      "nameLocations": [
                        "3521:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3521:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3521:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3520:18:28"
            },
            "returnParameters": {
              "id": 10028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3548:0:28"
            },
            "scope": 10373,
            "src": "3500:390:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10135,
              "nodeType": "Block",
              "src": "3941:348:28",
              "statements": [
                {
                  "assignments": [
                    10087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10087,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3960:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10135,
                      "src": "3947:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10086,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10085,
                          "name": "Land",
                          "nameLocations": [
                            "3947:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "3947:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "3947:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10094,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10088,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "3967:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10093,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10091,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10082,
                          "src": "3981:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3973:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3973:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3973:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3967:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3947:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4007:12:28",
                        "subExpression": {
                          "expression": {
                            "id": 10096,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10087,
                            "src": "4008:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10097,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4013:6:28",
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9774,
                          "src": "4008:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "id": 10099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4021:24:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        },
                        "value": "Land is already active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        }
                      ],
                      "id": 10095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3999:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3999:47:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10101,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:47:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10103,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10087,
                            "src": "4060:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10104,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4065:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9778,
                          "src": "4060:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10107,
                        "indexExpression": {
                          "expression": {
                            "id": 10105,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4072:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4076:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4072:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4060:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4085:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4052:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4052:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10110,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:57:28"
                },
                {
                  "expression": {
                    "id": 10115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10111,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10087,
                        "src": "4139:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10113,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4144:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "4139:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4153:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4139:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10116,
                  "nodeType": "ExpressionStatement",
                  "src": "4139:18:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10120,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10082,
                                "src": "4208:9:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4200:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10118,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4200:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4200:18:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10117,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4293,
                          "src": "4187:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4293_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 10122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4187:32:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4220:7:28",
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "4187:40:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4187:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10125,
                  "nodeType": "ExpressionStatement",
                  "src": "4187:42:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4253:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4257:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4253:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10131,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10082,
                            "src": "4273:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4265:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4265:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4265:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10126,
                      "name": "LandEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9747,
                      "src": "4241:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10134,
                  "nodeType": "EmitStatement",
                  "src": "4236:48:28"
                }
              ]
            },
            "functionSelector": "5d341ae5",
            "id": 10136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableLand",
            "nameLocation": "3903:10:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10082,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3921:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10136,
                  "src": "3914:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10081,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10080,
                      "name": "IERC20",
                      "nameLocations": [
                        "3914:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3914:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3914:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3913:18:28"
            },
            "returnParameters": {
              "id": 10084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3941:0:28"
            },
            "scope": 10373,
            "src": "3894:395:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10198,
              "nodeType": "Block",
              "src": "4359:372:28",
              "statements": [
                {
                  "assignments": [
                    10146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10146,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4378:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10198,
                      "src": "4365:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10145,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10144,
                          "name": "Land",
                          "nameLocations": [
                            "4365:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "4365:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "4365:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10153,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10147,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "4385:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10152,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10150,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10139,
                          "src": "4399:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4391:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4391:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4385:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4365:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10155,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10146,
                          "src": "4425:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10156,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4430:6:28",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9774,
                        "src": "4425:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4438:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4417:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4417:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10159,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10161,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10146,
                            "src": "4474:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10162,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4479:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9778,
                          "src": "4474:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10165,
                        "indexExpression": {
                          "expression": {
                            "id": 10163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4486:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4490:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4486:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4474:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4499:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4466:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10168,
                  "nodeType": "ExpressionStatement",
                  "src": "4466:57:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4607:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10174,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "4597:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4597:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10177,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10141,
                        "src": "4623:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10169,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10146,
                          "src": "4576:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10172,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4581:5:28",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9772,
                        "src": "4576:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4587:9:28",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "4576:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4576:53:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10179,
                  "nodeType": "ExpressionStatement",
                  "src": "4576:53:28"
                },
                {
                  "expression": {
                    "id": 10186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10180,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10146,
                          "src": "4636:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10183,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4641:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9778,
                        "src": "4636:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10184,
                      "indexExpression": {
                        "id": 10182,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10141,
                        "src": "4648:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4636:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4657:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4636:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10187,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:25:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4688:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4692:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4688:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10193,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10139,
                            "src": "4708:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4700:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4700:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4700:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10195,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10141,
                        "src": "4720:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10188,
                      "name": "LandAdminAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9761,
                      "src": "4673:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:53:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10197,
                  "nodeType": "EmitStatement",
                  "src": "4668:58:28"
                }
              ]
            },
            "functionSelector": "4fe62a5b",
            "id": 10199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAdminToLand",
            "nameLocation": "4302:14:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10139,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4324:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10199,
                  "src": "4317:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10138,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10137,
                      "name": "IERC20",
                      "nameLocations": [
                        "4317:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4317:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4317:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10141,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4343:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10199,
                  "src": "4335:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4316:33:28"
            },
            "returnParameters": {
              "id": 10143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:28"
            },
            "scope": 10373,
            "src": "4293:438:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10261,
              "nodeType": "Block",
              "src": "4806:380:28",
              "statements": [
                {
                  "assignments": [
                    10209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10209,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4825:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10261,
                      "src": "4812:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10208,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10207,
                          "name": "Land",
                          "nameLocations": [
                            "4812:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "4812:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "4812:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10216,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10210,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "4832:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10215,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10213,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10202,
                          "src": "4846:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4838:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4838:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4838:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4832:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4812:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10218,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10209,
                          "src": "4872:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4877:6:28",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9774,
                        "src": "4872:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4885:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4864:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4864:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10222,
                  "nodeType": "ExpressionStatement",
                  "src": "4864:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10224,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10209,
                            "src": "4921:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4926:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9778,
                          "src": "4921:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10228,
                        "indexExpression": {
                          "expression": {
                            "id": 10226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4933:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4937:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4933:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4921:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4946:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4913:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4913:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10231,
                  "nodeType": "ExpressionStatement",
                  "src": "4913:57:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5059:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10237,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "5049:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5049:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10240,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10204,
                        "src": "5075:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10232,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10209,
                          "src": "5027:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10235,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5032:5:28",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9772,
                        "src": "5027:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5038:10:28",
                      "memberName": "revokeRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "5027:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5027:54:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10242,
                  "nodeType": "ExpressionStatement",
                  "src": "5027:54:28"
                },
                {
                  "expression": {
                    "id": 10249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10243,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10209,
                          "src": "5088:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5093:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9778,
                        "src": "5088:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10247,
                      "indexExpression": {
                        "id": 10245,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10204,
                        "src": "5100:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5088:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5109:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5088:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10250,
                  "nodeType": "ExpressionStatement",
                  "src": "5088:26:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5143:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5147:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5143:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10256,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10202,
                            "src": "5163:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5155:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10254,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5155:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5155:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10258,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10204,
                        "src": "5175:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10251,
                      "name": "LandAdminRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9769,
                      "src": "5126:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5126:55:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10260,
                  "nodeType": "EmitStatement",
                  "src": "5121:60:28"
                }
              ]
            },
            "functionSelector": "86b5c5b1",
            "id": 10262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdminFromLand",
            "nameLocation": "4744:19:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10202,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4771:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10262,
                  "src": "4764:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10201,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10200,
                      "name": "IERC20",
                      "nameLocations": [
                        "4764:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4764:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4764:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10204,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4790:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10262,
                  "src": "4782:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4782:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4763:33:28"
            },
            "returnParameters": {
              "id": 10206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4806:0:28"
            },
            "scope": 10373,
            "src": "4735:451:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10294,
              "nodeType": "Block",
              "src": "5284:139:28",
              "statements": [
                {
                  "assignments": [
                    10274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10274,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5303:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10294,
                      "src": "5290:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10273,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10272,
                          "name": "Land",
                          "nameLocations": [
                            "5290:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "5290:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "5290:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10281,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10275,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "5310:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10280,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10278,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10265,
                          "src": "5324:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5316:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5316:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5310:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5290:47:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10282,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10274,
                        "src": "5351:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5356:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "5351:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10284,
                              "name": "land",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10274,
                              "src": "5367:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                                "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                              }
                            },
                            "id": 10285,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5372:24:28",
                            "memberName": "everyoneCanCreateMarkets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9780,
                            "src": "5367:29:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 10286,
                                "name": "land",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10274,
                                "src": "5400:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                                  "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                                }
                              },
                              "id": 10287,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5405:6:28",
                              "memberName": "admins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9778,
                              "src": "5400:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 10289,
                            "indexExpression": {
                              "id": 10288,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10267,
                              "src": "5412:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5400:17:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5367:50:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10291,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5366:52:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5351:67:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10271,
                  "id": 10293,
                  "nodeType": "Return",
                  "src": "5344:74:28"
                }
              ]
            },
            "functionSelector": "25c72059",
            "id": 10295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToCreateMarket",
            "nameLocation": "5199:23:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10265,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5230:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10295,
                  "src": "5223:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10263,
                      "name": "IERC20",
                      "nameLocations": [
                        "5223:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5223:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5223:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10267,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5251:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10295,
                  "src": "5243:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5243:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5222:34:28"
            },
            "returnParameters": {
              "id": 10271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10270,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10295,
                  "src": "5278:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10269,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5278:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5277:6:28"
            },
            "scope": 10373,
            "src": "5190:233:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10323,
              "nodeType": "Block",
              "src": "5524:104:28",
              "statements": [
                {
                  "assignments": [
                    10307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10307,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5543:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10323,
                      "src": "5530:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10306,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10305,
                          "name": "Land",
                          "nameLocations": [
                            "5530:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "5530:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "5530:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10314,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10308,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "5550:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10313,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10311,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10298,
                          "src": "5564:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5556:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10309,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5556:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5556:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5550:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5530:47:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10315,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10307,
                        "src": "5591:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10316,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5596:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "5591:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 10317,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10307,
                          "src": "5606:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5611:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9778,
                        "src": "5606:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10320,
                      "indexExpression": {
                        "id": 10319,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10300,
                        "src": "5618:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5606:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5591:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10304,
                  "id": 10322,
                  "nodeType": "Return",
                  "src": "5584:39:28"
                }
              ]
            },
            "functionSelector": "d1aeb5c2",
            "id": 10324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToResolveMarket",
            "nameLocation": "5436:24:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10298,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5468:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "5461:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10297,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10296,
                      "name": "IERC20",
                      "nameLocations": [
                        "5461:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5461:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5461:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10300,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5489:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "5481:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5481:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5460:34:28"
            },
            "returnParameters": {
              "id": 10304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "5518:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5518:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5517:6:28"
            },
            "scope": 10373,
            "src": "5427:201:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10345,
              "nodeType": "Block",
              "src": "5710:83:28",
              "statements": [
                {
                  "assignments": [
                    10334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10334,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5729:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10345,
                      "src": "5716:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10333,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10332,
                          "name": "Land",
                          "nameLocations": [
                            "5716:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "5716:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "5716:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10341,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10335,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "5736:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10340,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10338,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10327,
                          "src": "5750:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5742:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5742:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5742:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5736:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5716:47:28"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 10342,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10334,
                      "src": "5777:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                      }
                    },
                    "id": 10343,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5782:6:28",
                    "memberName": "active",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9774,
                    "src": "5777:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10331,
                  "id": 10344,
                  "nodeType": "Return",
                  "src": "5770:18:28"
                }
              ]
            },
            "functionSelector": "d13acee1",
            "id": 10346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIERC20TokenSocial",
            "nameLocation": "5641:19:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10327,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5668:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "5661:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10326,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10325,
                      "name": "IERC20",
                      "nameLocations": [
                        "5661:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5661:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5661:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5660:20:28"
            },
            "returnParameters": {
              "id": 10331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "5704:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10329,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5704:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5703:6:28"
            },
            "scope": 10373,
            "src": "5632:161:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10371,
              "nodeType": "Block",
              "src": "5881:89:28",
              "statements": [
                {
                  "assignments": [
                    10358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10358,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5900:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10371,
                      "src": "5887:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10357,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10356,
                          "name": "Land",
                          "nameLocations": [
                            "5887:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9784,
                          "src": "5887:4:28"
                        },
                        "referencedDeclaration": 9784,
                        "src": "5887:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10365,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10359,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9789,
                      "src": "5907:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9784_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10364,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10362,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10349,
                          "src": "5921:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5913:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5913:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5913:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5907:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9784_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5887:47:28"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 10366,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10358,
                        "src": "5948:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9784_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10367,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5953:6:28",
                      "memberName": "admins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9778,
                      "src": "5948:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 10369,
                    "indexExpression": {
                      "id": 10368,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10351,
                      "src": "5960:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5948:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10355,
                  "id": 10370,
                  "nodeType": "Return",
                  "src": "5941:24:28"
                }
              ]
            },
            "functionSelector": "791e0519",
            "id": 10372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLandAdmin",
            "nameLocation": "5806:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10349,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5825:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10372,
                  "src": "5818:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10348,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10347,
                      "name": "IERC20",
                      "nameLocations": [
                        "5818:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5818:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5818:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10351,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5846:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10372,
                  "src": "5838:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5838:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5817:34:28"
            },
            "returnParameters": {
              "id": 10355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10372,
                  "src": "5875:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5875:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5874:6:28"
            },
            "scope": 10373,
            "src": "5797:173:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10374,
        "src": "329:5643:28",
        "usedErrors": []
      }
    ],
    "src": "32:5941:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2024-05-31T16:34:56.689Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}