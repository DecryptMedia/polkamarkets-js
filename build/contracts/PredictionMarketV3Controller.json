{
  "contractName": "PredictionMarketV3Controller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PMV3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_realitioLibraryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_PMV3Factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenToAnswer",
          "type": "address"
        }
      ],
      "name": "LandCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LandOffsetUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PMV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PMV3Factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lands",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "everyoneCanCreateMarkets",
          "type": "bool"
        },
        {
          "internalType": "contract IRealityETH_IERC20",
          "name": "realitio",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realitioFactory",
      "outputs": [
        {
          "internalType": "contract RealityETH_ERC20_Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountToClaim",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAnswer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "everyoneCanCreateMarkets",
          "type": "bool"
        }
      ],
      "name": "createLand",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "disableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "enableLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdminToLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdminFromLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToCreateMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToResolveMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        }
      ],
      "name": "isIERC20TokenSocial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isLandAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PMV3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_realitioLibraryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_PMV3Factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenToAnswer\",\"type\":\"address\"}],\"name\":\"LandCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LandOffsetUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PMV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PMV3Factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdminToLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountToClaim\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAnswer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"everyoneCanCreateMarkets\",\"type\":\"bool\"}],\"name\":\"createLand\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"disableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"enableLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToCreateMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToResolveMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"}],\"name\":\"isIERC20TokenSocial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isLandAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lands\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"everyoneCanCreateMarkets\",\"type\":\"bool\"},{\"internalType\":\"contract IRealityETH_IERC20\",\"name\":\"realitio\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realitioFactory\",\"outputs\":[{\"internalType\":\"contract RealityETH_ERC20_Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdminFromLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarketV3Controller.sol\":\"PredictionMarketV3Controller\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x6eabd0f1326073b2aaf4298cb3b15b7cfc96966586dbaca2f126409f4fd11688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b67ef6927ae0b5afd4faf7cf6bf6bce6ad0ebe3b07bd75ae24891ecd8ddf2c4\",\"dweb:/ipfs/QmfLFWECbFNfb9Vh1ftmj1E6KmHa8wJkpzaWgBvujo56Wp\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"project:/contracts/FantasyERC20.sol\":{\"keccak256\":\"0x5208602dbeaa239b13143c24e61abce91fb1dcb2e4c6627d462187ea7dee436d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8da09a6f9e6e0464d2e076559d2de192689f958f36c4711fd23be8c215498f90\",\"dweb:/ipfs/QmaxR3TpCfgr1UY2MiR7oagL27GgsTMzUFfQJtjswdQBQh\"]},\"project:/contracts/IPredictionMarketV3Factory.sol\":{\"keccak256\":\"0x1b852906408915a95d227109dc09e2ae142fb6d05c6aa564d6168329d3c4ddbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c65817531c053d72a82e03943d484927d196d4c2e0788d860b944c503ee2d4\",\"dweb:/ipfs/QmPCu7xnDn9vig7aJ1WDmXKdFdjCB2TL6KQb5km6zYg7jH\"]},\"project:/contracts/IRealityETH_ERC20.sol\":{\"keccak256\":\"0x829f84252e4c06a9563be80b9bd93d4eb875ac865629bc312c20c2fc48a27c67\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4486fd8f19077689309998e39f63e47a6c84ef819c708887460d24cb6748cc98\",\"dweb:/ipfs/QmcFNnjyJfbh885rV7YW3WZfP1xRwHmmoVfGyTZyjhhk7N\"]},\"project:/contracts/PredictionMarketV3Controller.sol\":{\"keccak256\":\"0x4a6d667b82f3f6b587b7a6c0ad900d34e4802220ffec9c27c6f86f9bbb7ccb93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73364ed94e823388069861e2cc29cbb16548bd241ba4c9aa8d5f7421fd4ae889\",\"dweb:/ipfs/Qma2iqycRHr3R5s1zo7dZ5iEC7BZkm4tC9kfEXQDmSdV3B\"]},\"project:/contracts/RealityETH_ERC20_Factory.sol\":{\"keccak256\":\"0xfa3c12a43c9d3bb54a90a050a33f8fc9b97cb1cc46c8f9d22a83d3d042131c61\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8e73d6c105df45f7d43fc8b5b86855d6c53ea4cef89ff848d986fbf53d0e2473\",\"dweb:/ipfs/QmSkFHJZX61HZmfw49j28R14u6sXshcPCKVQtwVwUmTx8m\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620040433803806200404383398101604081905262000034916200018f565b6200003f3362000114565b600180556001600160a01b038116620000ae5760405162461bcd60e51b815260206004820152602760248201527f504d5633466163746f727920616464726573732063616e6e6f742062652030206044820152666164647265737360c81b606482015260840160405180910390fd5b6001600160a01b0383166080526040518290620000cb9062000164565b6001600160a01b039091168152602001604051809103906000f080158015620000f8573d6000803e3d6000fd5b506001600160a01b0390811660c0521660a05250620001d99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109ef806200365483390190565b80516001600160a01b03811681146200018a57600080fd5b919050565b600080600060608486031215620001a557600080fd5b620001b08462000172565b9250620001c06020850162000172565b9150620001d06040850162000172565b90509250925092565b60805160a05160c05161342162000233600039600081816102c60152818161071a015281816107b80152610836015260008181610138015261045e0152600081816101ad015281816104e7015261056d01526134216000f3fe60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b1146200034c5780638da5cb5b1462000363578063d13acee11462000375578063d1aeb5c214620003ab578063f2fde38b14620003c257600080fd5b80636e3dd8ba14620002c057806370e9207814620002e8578063715018a614620002ff578063791e0519146200030957600080fd5b806325c7205911620000fc57806325c7205914620001cf57806330ccd17a14620001f757806333b22760146200020e5780634fe62a5b14620002905780635d341ae514620002a957600080fd5b80630c27c26c14620001325780631311758b14620001775780631b4d534e14620001905780631cbe8a6514620001a7575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a620001a136600462001156565b620003d9565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001e6620001e0366004620011f6565b62000905565b60405190151581526020016200016e565b6200015a6200020836600462001234565b62000967565b6200025c6200021f3660046200124e565b600260208190526000918252604090912080549101546001600160a01b038083169260ff600160a01b909104811692908116916101009091041684565b604080516001600160a01b03958616815293151560208501529115159183019190915290911660608201526080016200016e565b620002a7620002a1366004620011f6565b62000992565b005b620002a7620002ba3660046200124e565b62000afc565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620002a7620002f93660046200124e565b62000c42565b620002a762000d7d565b620001e66200031a366004620011f6565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b620002a76200035d366004620011f6565b62000d95565b6000546001600160a01b03166200015a565b620001e6620003863660046200124e565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b620001e6620003bc366004620011f6565b62000efa565b620002a7620003d33660046200124e565b62000f4d565b60006001600160a01b038316620004435760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084015b60405180910390fd5b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620004b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d6919062001275565b620004e057600080fd5b60008787877f0000000000000000000000000000000000000000000000000000000000000000604051620005149062001078565b620005239493929190620012dd565b604051809103906000f08015801562000540573d6000803e3d6000fd5b50604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620005be57600080fd5b505af1158015620005d3573d6000803e3d6000fd5b5050604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200062e57600080fd5b505af115801562000643573d6000803e3d6000fd5b505050506001600160a01b03811660008181526002602081815260408084208054600160a01b6001600160a81b031990911687171781553385526001808201909352908420805460ff19908116841790915592810180549093168915151790925560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169093179092556004805491620006f38362001328565b909155505060405163316b373960e01b81526001600160a01b0387811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078a919062001350565b6001600160a01b0316036200081757604051633b937bbb60e11b81526001600160a01b0387811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b158015620007fd57600080fd5b505af115801562000812573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa1580156200087e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a4919062001350565b600282018054610100600160a81b0319166101006001600160a01b03938416021790556040518782169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a450979650505050505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f5750600281015460ff16806200095f57506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200097857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff16620009fa5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000a2e5760405162461bcd60e51b81526004016200043a9062001370565b8054604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b15801562000a8a57600080fd5b505af115801562000a9f573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff161562000b685760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000b9c5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b15801562000bef57600080fd5b505af115801562000c04573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000ca95760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000cdd5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000d2a57600080fd5b505af115801562000d3f573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000d8762000fcc565b62000d93600062001028565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000dfd5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000e315760405162461bcd60e51b81526004016200043a9062001370565b805460405163d547741f60e01b8152600080516020620033cc83398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000e8d57600080fd5b505af115801562000ea2573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f57506001600160a01b038316600090815260018201602052604090205460ff1691505092915050565b62000f5762000fcc565b6001600160a01b03811662000fbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200043a565b62000fc98162001028565b50565b6000546001600160a01b0316331462000d935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200043a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61202c80620013a083390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620010ae57600080fd5b813567ffffffffffffffff80821115620010cc57620010cc62001086565b604051601f8301601f19908116603f01168101908282118183101715620010f757620010f762001086565b816040528381528660208588010111156200111157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462000fc957600080fd5b801515811462000fc957600080fd5b600080600080600060a086880312156200116f57600080fd5b853567ffffffffffffffff808211156200118857600080fd5b6200119689838a016200109c565b96506020880135915080821115620011ad57600080fd5b50620011bc888289016200109c565b945050604086013592506060860135620011d68162001131565b91506080860135620011e88162001147565b809150509295509295909350565b600080604083850312156200120a57600080fd5b8235620012178162001131565b91506020830135620012298162001131565b809150509250929050565b6000602082840312156200124757600080fd5b5035919050565b6000602082840312156200126157600080fd5b81356200126e8162001131565b9392505050565b6000602082840312156200128857600080fd5b81516200126e8162001147565b6000815180845260005b81811015620012bd576020818501810151868301820152016200129f565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000620012f2608083018762001295565b828103602084015262001306818762001295565b604084019590955250506001600160a01b039190911660609091015292915050565b6000600182016200134957634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200136357600080fd5b81516200126e8162001131565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b60408201526060019056fe60806040523480156200001157600080fd5b506040516200202c3803806200202c833981016040819052620000349162000321565b83838181600562000046838262000444565b50600662000055828262000444565b50506007805460ff19169055506200006f600033620000f7565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f7565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f7565b5050600a91909155600980546001600160a01b0319166001600160a01b0390921691909117905550620005109050565b62000103828262000107565b5050565b6200011e82826200014a60201b62000ac71760201c565b60008281526001602090815260409091206200014591839062000b4b620001ea821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000103576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000201836001600160a01b0384166200020a565b90505b92915050565b6000818152600183016020526040812054620002535750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000204565b50600062000204565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028457600080fd5b81516001600160401b0380821115620002a157620002a16200025c565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc6200025c565b81604052838152602092508683858801011115620002e957600080fd5b600091505b838210156200030d5785820183015181830184015290820190620002ee565b600093810190920192909252949350505050565b600080600080608085870312156200033857600080fd5b84516001600160401b03808211156200035057600080fd5b6200035e8883890162000272565b955060208701519150808211156200037557600080fd5b50620003848782880162000272565b60408701516060880151919550935090506001600160a01b0381168114620003ab57600080fd5b939692955090935050565b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014557600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b505050505050565b81516001600160401b038111156200046057620004606200025c565b6200047881620004718454620003b6565b84620003f2565b602080601f831160018114620004b05760008415620004975750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e157888601518255948401946001909101908401620004c0565b5085821015620005005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0c80620005206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461042b578063d53913931461043e578063d547741f14610465578063dd62ed3e14610478578063e63ab1e91461048b57600080fd5b8063a217fddf146103f5578063a457c2d7146103fd578063a9059cbb14610410578063adb1f0d81461042357600080fd5b806387bbfe0a116100e957806387bbfe0a1461039b5780639010d07c146103c757806391d14854146103da57806395d89b41146103ed57600080fd5b80635c975abb1461034c57806370a082311461035757806379cc6790146103805780638456cb591461039357600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e36600461177c565b6104b2565b60405190151581526020015b60405180910390f35b6102306104dd565b60405161021f91906117ca565b61021361024b366004611819565b61056f565b6004545b60405190815260200161021f565b610213610270366004611843565b610587565b61025461028336600461187f565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d1366004611898565b6105ab565b005b6040516012815260200161021f565b6102d66102f5366004611898565b6105d5565b610254600a5481565b610213610311366004611819565b610658565b6102d661067a565b6102d661032c366004611819565b610720565b6102d661033f36600461187f565b6107bf565b6102d66107cc565b60075460ff16610213565b6102546103653660046118c4565b6001600160a01b031660009081526002602052604090205490565b6102d661038e366004611819565b610869565b6102d661087e565b6102136103a93660046118c4565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d53660046118df565b610922565b6102136103e8366004611898565b610941565b61023061096a565b610254600081565b61021361040b366004611819565b610979565b61021361041e366004611819565b6109f4565b6102d6610a02565b61025461043936600461187f565b610a60565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d6610473366004611898565b610a77565b610254610486366004611901565b610a9c565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d757506104d782610b60565b92915050565b6060600580546104ec9061192b565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061192b565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d818585610b95565b5060019392505050565b600033610595858285610cb9565b6105a0858585610d33565b506001949350505050565b6000828152602081905260409020600101546105c681610dd9565b6105d08383610de3565b505050565b6001600160a01b038116331461064a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106548282610e05565b5050565b60003361057d81858561066b8383610a9c565b610675919061197b565b610b95565b6106a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b6107165760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610641565b61071e610e27565b565b61074a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610941565b6107b55760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610641565b6106548282610e79565b6107c93382610f46565b50565b3360009081526008602052604090205460ff16156107fc5760405162461bcd60e51b81526004016106419061198e565b61080833600a54610e79565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085f914290918252602082015260400190565b60405180910390a2565b610874823383610cb9565b6106548282610f46565b6108a87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b61091a5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610641565b61071e611086565b600082815260016020526040812061093a90836110c3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104ec9061192b565b600033816109878286610a9c565b9050838110156109e75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610641565b6105a08286868403610b95565b60003361057d818585610d33565b3360009081526008602052604090205460ff1615610a325760405162461bcd60e51b81526004016106419061198e565b610a3a6107cc565b6009546107c9906001600160a01b03166fffffffffffffffffffffffffffffffff61056f565b60008181526001602052604081206104d7906110cf565b600082815260208190526040902060010154610a9281610dd9565b6105d08383610e05565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610ad18282610941565b610654576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093a836001600160a01b0384166110d9565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316146104d7565b6001600160a01b038316610bf75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610641565b6001600160a01b038216610c585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610641565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc58484610a9c565b90506000198114610d2d5781811015610d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610641565b610d2d8484848403610b95565b50505050565b6009546001600160a01b0384811691161480610d5c57506009546001600160a01b038381169116145b610dce5760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e207468652061646472657373657300006064820152608401610641565b6105d0838383611128565b6107c981336112de565b610ded8282610ac7565b60008281526001602052604090206105d09082610b4b565b610e0f8282611337565b60008281526001602052604090206105d0908261139c565b610e2f6113b1565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ecf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610641565b610edb600083836113fa565b8060046000828254610eed919061197b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610641565b610fb2826000836113fa565b6001600160a01b038216600090815260026020526040902054818110156110265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610641565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b61108e611405565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e5c3390565b600061093a838361144b565b60006104d7825490565b6000818152600183016020526040812054611120575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d7565b5060006104d7565b6001600160a01b03831661118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610641565b6001600160a01b0382166111ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610641565b6111f98383836113fa565b6001600160a01b038316600090815260026020526040902054818110156112715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610641565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d19086815260200190565b60405180910390a3610d2d565b6112e88282610941565b610654576112f581611475565b611300836020611487565b6040516020016113119291906119de565b60408051601f198184030181529082905262461bcd60e51b8252610641916004016117ca565b6113418282610941565b15610654576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093a836001600160a01b038416611623565b60075460ff1661071e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610641565b6105d0838383611716565b60075460ff161561071e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610641565b600082600001828154811061146257611462611a53565b9060005260206000200154905092915050565b60606104d76001600160a01b03831660145b60606000611496836002611a69565b6114a190600261197b565b67ffffffffffffffff8111156114b9576114b9611a80565b6040519080825280601f01601f1916602001820160405280156114e3576020820181803683370190505b509050600360fc1b816000815181106114fe576114fe611a53565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061152d5761152d611a53565b60200101906001600160f81b031916908160001a9053506000611551846002611a69565b61155c90600161197b565b90505b60018111156115d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159057611590611a53565b1a60f81b8282815181106115a6576115a6611a53565b60200101906001600160f81b031916908160001a90535060049490941c936115cd81611a96565b905061155f565b50831561093a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610641565b6000818152600183016020526040812054801561170c576000611647600183611aad565b855490915060009061165b90600190611aad565b90508181146116c057600086600001828154811061167b5761167b611a53565b906000526020600020015490508087600001848154811061169e5761169e611a53565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116d1576116d1611ac0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d7565b60009150506104d7565b60075460ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610641565b60006020828403121561178e57600080fd5b81356001600160e01b03198116811461093a57600080fd5b60005b838110156117c15781810151838201526020016117a9565b50506000910152565b60208152600082518060208401526117e98160408501602087016117a6565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461181457600080fd5b919050565b6000806040838503121561182c57600080fd5b611835836117fd565b946020939093013593505050565b60008060006060848603121561185857600080fd5b611861846117fd565b925061186f602085016117fd565b9150604084013590509250925092565b60006020828403121561189157600080fd5b5035919050565b600080604083850312156118ab57600080fd5b823591506118bb602084016117fd565b90509250929050565b6000602082840312156118d657600080fd5b61093a826117fd565b600080604083850312156118f257600080fd5b50508035926020909101359150565b6000806040838503121561191457600080fd5b61191d836117fd565b91506118bb602084016117fd565b600181811c9082168061193f57607f821691505b60208210810361195f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d7576104d7611965565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a168160178501602088016117a6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a478160288401602088016117a6565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d7576104d7611965565b634e487b7160e01b600052604160045260246000fd5b600081611aa557611aa5611965565b506000190190565b818103818111156104d7576104d7611965565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e167717c6f5d7d3fa2b17f9645cf6e8f6ed55a0fe6c77f7e675e3c1e7dc9af7564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a264697066735822122002ff3121b2e94b322fd06ec8587d6672c665b87c180c2979dcb8d419554cdcbc64736f6c63430008120033608060405234801561001057600080fd5b506040516109ef3803806109ef83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61095c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063316b3739146100465780637726f7761461008b578063b816f513146100a0575b600080fd5b61006f61005436600461077c565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461077c565b6100b3565b005b60005461006f906001600160a01b031681565b6001600160a01b0381811660009081526001602052604090205416156101455760405162461bcd60e51b815260206004820152603960248201527f54686572652073686f756c64206f6e6c79206265206f6e65206465706c6f796d60448201527f656e74207065722076657273696f6e2070657220746f6b656e00000000000000606482015260840160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906107ac565b90506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102139190810190610809565b600080549192509061022d906001600160a01b031661072a565b60405163144fa6d760e01b81526001600160a01b0386811660048301529192509082169063144fa6d790602401600060405180830381600087803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b50506040516383bf460960e01b815260206004820152603f60248201527f7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c2060448201527f2263617465676f7279223a20222573222c20226c616e67223a20222573227d0060648201526001600160a01b03841692506383bf460991506084016020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906108b6565b506040516383bf460960e01b815260206004820152604f60248201527f7b227469746c65223a20222573222c202274797065223a202275696e74222c2060448201527f22646563696d616c73223a2031382c202263617465676f7279223a202225732260648201526e2c20226c616e67223a20222573227d60881b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906108b6565b506040516383bf460960e01b815260206004820152605a60248201527f7b227469746c65223a20222573222c202274797065223a202273696e676c652d60448201527f73656c656374222c20226f7574636f6d6573223a205b25735d2c20226361746560648201527f676f7279223a20222573222c20226c616e67223a20222573227d00000000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906108b6565b506040516383bf460960e01b815260206004820152605c60248201527f7b227469746c65223a20222573222c202274797065223a20226d756c7469706c60448201527f652d73656c656374222c20226f7574636f6d6573223a205b25735d2c2022636160648201527f7465676f7279223a20222573222c20226c616e67223a20222573227d0000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb91906108b6565b506040516383bf460960e01b815260206004820152604360248201527f7b227469746c65223a20222573222c202274797065223a20226461746574696d60448201527f65222c202263617465676f7279223a20222573222c20226c616e67223a20222560648201526273227d60e81b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b691906108b6565b506001600160a01b038481166000908152600160205260409081902080546001600160a01b03191692841692909217909155517fbe87db3b58b5f4d26d54d6f8a09bbab3eefdc8879ac48f5e21ccff2a1f50b0729061071c9083908790879087906108cf565b60405180910390a150505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121561078e57600080fd5b81356001600160a01b03811681146107a557600080fd5b9392505050565b6000602082840312156107be57600080fd5b815160ff811681146107a557600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156108005781810151838201526020016107e8565b50506000910152565b60006020828403121561081b57600080fd5b815167ffffffffffffffff8082111561083357600080fd5b818401915084601f83011261084757600080fd5b815181811115610859576108596107cf565b604051601f8201601f19908116603f01168101908382118183101715610881576108816107cf565b8160405282815287602084870101111561089a57600080fd5b6108ab8360208301602088016107e5565b979650505050505050565b6000602082840312156108c857600080fd5b5051919050565b600060018060a01b03808716835280861660208401525060ff8416604083015260806060830152825180608084015261090f8160a08501602087016107e5565b601f01601f19169190910160a0019594505050505056fea26469706673582212200901921801295c1857ea1285857575b749b164c9a87fe108337110039b25924a64736f6c63430008120033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200012d5760003560e01c80636e3dd8ba11620000af57806386b5c5b1116200007a57806386b5c5b1146200034c5780638da5cb5b1462000363578063d13acee11462000375578063d1aeb5c214620003ab578063f2fde38b14620003c257600080fd5b80636e3dd8ba14620002c057806370e9207814620002e8578063715018a614620002ff578063791e0519146200030957600080fd5b806325c7205911620000fc57806325c7205914620001cf57806330ccd17a14620001f757806333b22760146200020e5780634fe62a5b14620002905780635d341ae514620002a957600080fd5b80630c27c26c14620001325780631311758b14620001775780631b4d534e14620001905780631cbe8a6514620001a7575b600080fd5b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018160045481565b6040519081526020016200016e565b6200015a620001a136600462001156565b620003d9565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620001e6620001e0366004620011f6565b62000905565b60405190151581526020016200016e565b6200015a6200020836600462001234565b62000967565b6200025c6200021f3660046200124e565b600260208190526000918252604090912080549101546001600160a01b038083169260ff600160a01b909104811692908116916101009091041684565b604080516001600160a01b03958616815293151560208501529115159183019190915290911660608201526080016200016e565b620002a7620002a1366004620011f6565b62000992565b005b620002a7620002ba3660046200124e565b62000afc565b6200015a7f000000000000000000000000000000000000000000000000000000000000000081565b620002a7620002f93660046200124e565b62000c42565b620002a762000d7d565b620001e66200031a366004620011f6565b6001600160a01b0391821660009081526002602090815260408083209390941682526001909201909152205460ff1690565b620002a76200035d366004620011f6565b62000d95565b6000546001600160a01b03166200015a565b620001e6620003863660046200124e565b6001600160a01b0316600090815260026020526040902054600160a01b900460ff1690565b620001e6620003bc366004620011f6565b62000efa565b620002a7620003d33660046200124e565b62000f4d565b60006001600160a01b038316620004435760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b60648201526084015b60405180910390fd5b60405163da490a3960e01b81523060048201523360248201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063da490a3990604401602060405180830381865afa158015620004b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d6919062001275565b620004e057600080fd5b60008787877f0000000000000000000000000000000000000000000000000000000000000000604051620005149062001078565b620005239493929190620012dd565b604051809103906000f08015801562000540573d6000803e3d6000fd5b50604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b158015620005be57600080fd5b505af1158015620005d3573d6000803e3d6000fd5b5050604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b1580156200062e57600080fd5b505af115801562000643573d6000803e3d6000fd5b505050506001600160a01b03811660008181526002602081815260408084208054600160a01b6001600160a81b031990911687171781553385526001808201909352908420805460ff19908116841790915592810180549093168915151790925560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169093179092556004805491620006f38362001328565b909155505060405163316b373960e01b81526001600160a01b0387811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078a919062001350565b6001600160a01b0316036200081757604051633b937bbb60e11b81526001600160a01b0387811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b158015620007fd57600080fd5b505af115801562000812573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa1580156200087e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a4919062001350565b600282018054610100600160a81b0319166101006001600160a01b03938416021790556040518782169184169033907f928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e0390600090a450979650505050505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f5750600281015460ff16806200095f57506001600160a01b038316600090815260018201602052604090205460ff165b949350505050565b600381815481106200097857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff16620009fa5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000a2e5760405162461bcd60e51b81526004016200043a9062001370565b8054604051632f2ff15d60e01b8152600080516020620033cc83398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b15801562000a8a57600080fd5b505af115801562000a9f573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff161562000b685760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000b9c5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916600160a01b17815560408051631fa5d41d60e11b815290516001600160a01b03841691633f4ba83a91600480830192600092919082900301818387803b15801562000bef57600080fd5b505af115801562000c04573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507fdb2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f65090600090a35050565b6001600160a01b03811660009081526002602052604090208054600160a01b900460ff1662000ca95760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000cdd5760405162461bcd60e51b81526004016200043a9062001370565b805460ff60a01b1916815560408051638456cb5960e01b815290516001600160a01b03841691638456cb5991600480830192600092919082900301818387803b15801562000d2a57600080fd5b505af115801562000d3f573d6000803e3d6000fd5b50506040516001600160a01b03851692503391507f8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc490600090a35050565b62000d8762000fcc565b62000d93600062001028565b565b6001600160a01b03821660009081526002602052604090208054600160a01b900460ff1662000dfd5760405162461bcd60e51b815260206004820152601360248201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016200043a565b33600090815260018201602052604090205460ff1662000e315760405162461bcd60e51b81526004016200043a9062001370565b805460405163d547741f60e01b8152600080516020620033cc83398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b15801562000e8d57600080fd5b505af115801562000ea2573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6001600160a01b03821660009081526002602052604081208054600160a01b900460ff1680156200095f57506001600160a01b038316600090815260018201602052604090205460ff1691505092915050565b62000f5762000fcc565b6001600160a01b03811662000fbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200043a565b62000fc98162001028565b50565b6000546001600160a01b0316331462000d935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200043a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61202c80620013a083390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620010ae57600080fd5b813567ffffffffffffffff80821115620010cc57620010cc62001086565b604051601f8301601f19908116603f01168101908282118183101715620010f757620010f762001086565b816040528381528660208588010111156200111157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462000fc957600080fd5b801515811462000fc957600080fd5b600080600080600060a086880312156200116f57600080fd5b853567ffffffffffffffff808211156200118857600080fd5b6200119689838a016200109c565b96506020880135915080821115620011ad57600080fd5b50620011bc888289016200109c565b945050604086013592506060860135620011d68162001131565b91506080860135620011e88162001147565b809150509295509295909350565b600080604083850312156200120a57600080fd5b8235620012178162001131565b91506020830135620012298162001131565b809150509250929050565b6000602082840312156200124757600080fd5b5035919050565b6000602082840312156200126157600080fd5b81356200126e8162001131565b9392505050565b6000602082840312156200128857600080fd5b81516200126e8162001147565b6000815180845260005b81811015620012bd576020818501810151868301820152016200129f565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000620012f2608083018762001295565b828103602084015262001306818762001295565b604084019590955250506001600160a01b039190911660609091015292915050565b6000600182016200134957634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200136357600080fd5b81516200126e8162001131565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b60408201526060019056fe60806040523480156200001157600080fd5b506040516200202c3803806200202c833981016040819052620000349162000321565b83838181600562000046838262000444565b50600662000055828262000444565b50506007805460ff19169055506200006f600033620000f7565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f7565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f7565b5050600a91909155600980546001600160a01b0319166001600160a01b0390921691909117905550620005109050565b62000103828262000107565b5050565b6200011e82826200014a60201b62000ac71760201c565b60008281526001602090815260409091206200014591839062000b4b620001ea821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000103576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000201836001600160a01b0384166200020a565b90505b92915050565b6000818152600183016020526040812054620002535750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000204565b50600062000204565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028457600080fd5b81516001600160401b0380821115620002a157620002a16200025c565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc6200025c565b81604052838152602092508683858801011115620002e957600080fd5b600091505b838210156200030d5785820183015181830184015290820190620002ee565b600093810190920192909252949350505050565b600080600080608085870312156200033857600080fd5b84516001600160401b03808211156200035057600080fd5b6200035e8883890162000272565b955060208701519150808211156200037557600080fd5b50620003848782880162000272565b60408701516060880151919550935090506001600160a01b0381168114620003ab57600080fd5b939692955090935050565b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014557600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b505050505050565b81516001600160401b038111156200046057620004606200025c565b6200047881620004718454620003b6565b84620003f2565b602080601f831160018114620004b05760008415620004975750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e157888601518255948401946001909101908401620004c0565b5085821015620005005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0c80620005206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461042b578063d53913931461043e578063d547741f14610465578063dd62ed3e14610478578063e63ab1e91461048b57600080fd5b8063a217fddf146103f5578063a457c2d7146103fd578063a9059cbb14610410578063adb1f0d81461042357600080fd5b806387bbfe0a116100e957806387bbfe0a1461039b5780639010d07c146103c757806391d14854146103da57806395d89b41146103ed57600080fd5b80635c975abb1461034c57806370a082311461035757806379cc6790146103805780638456cb591461039357600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e36600461177c565b6104b2565b60405190151581526020015b60405180910390f35b6102306104dd565b60405161021f91906117ca565b61021361024b366004611819565b61056f565b6004545b60405190815260200161021f565b610213610270366004611843565b610587565b61025461028336600461187f565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d1366004611898565b6105ab565b005b6040516012815260200161021f565b6102d66102f5366004611898565b6105d5565b610254600a5481565b610213610311366004611819565b610658565b6102d661067a565b6102d661032c366004611819565b610720565b6102d661033f36600461187f565b6107bf565b6102d66107cc565b60075460ff16610213565b6102546103653660046118c4565b6001600160a01b031660009081526002602052604090205490565b6102d661038e366004611819565b610869565b6102d661087e565b6102136103a93660046118c4565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d53660046118df565b610922565b6102136103e8366004611898565b610941565b61023061096a565b610254600081565b61021361040b366004611819565b610979565b61021361041e366004611819565b6109f4565b6102d6610a02565b61025461043936600461187f565b610a60565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d6610473366004611898565b610a77565b610254610486366004611901565b610a9c565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d757506104d782610b60565b92915050565b6060600580546104ec9061192b565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061192b565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d818585610b95565b5060019392505050565b600033610595858285610cb9565b6105a0858585610d33565b506001949350505050565b6000828152602081905260409020600101546105c681610dd9565b6105d08383610de3565b505050565b6001600160a01b038116331461064a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106548282610e05565b5050565b60003361057d81858561066b8383610a9c565b610675919061197b565b610b95565b6106a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b6107165760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610641565b61071e610e27565b565b61074a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610941565b6107b55760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610641565b6106548282610e79565b6107c93382610f46565b50565b3360009081526008602052604090205460ff16156107fc5760405162461bcd60e51b81526004016106419061198e565b61080833600a54610e79565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085f914290918252602082015260400190565b60405180910390a2565b610874823383610cb9565b6106548282610f46565b6108a87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b61091a5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610641565b61071e611086565b600082815260016020526040812061093a90836110c3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104ec9061192b565b600033816109878286610a9c565b9050838110156109e75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610641565b6105a08286868403610b95565b60003361057d818585610d33565b3360009081526008602052604090205460ff1615610a325760405162461bcd60e51b81526004016106419061198e565b610a3a6107cc565b6009546107c9906001600160a01b03166fffffffffffffffffffffffffffffffff61056f565b60008181526001602052604081206104d7906110cf565b600082815260208190526040902060010154610a9281610dd9565b6105d08383610e05565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610ad18282610941565b610654576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093a836001600160a01b0384166110d9565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316146104d7565b6001600160a01b038316610bf75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610641565b6001600160a01b038216610c585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610641565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc58484610a9c565b90506000198114610d2d5781811015610d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610641565b610d2d8484848403610b95565b50505050565b6009546001600160a01b0384811691161480610d5c57506009546001600160a01b038381169116145b610dce5760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e207468652061646472657373657300006064820152608401610641565b6105d0838383611128565b6107c981336112de565b610ded8282610ac7565b60008281526001602052604090206105d09082610b4b565b610e0f8282611337565b60008281526001602052604090206105d0908261139c565b610e2f6113b1565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ecf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610641565b610edb600083836113fa565b8060046000828254610eed919061197b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610641565b610fb2826000836113fa565b6001600160a01b038216600090815260026020526040902054818110156110265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610641565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b61108e611405565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e5c3390565b600061093a838361144b565b60006104d7825490565b6000818152600183016020526040812054611120575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d7565b5060006104d7565b6001600160a01b03831661118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610641565b6001600160a01b0382166111ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610641565b6111f98383836113fa565b6001600160a01b038316600090815260026020526040902054818110156112715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610641565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d19086815260200190565b60405180910390a3610d2d565b6112e88282610941565b610654576112f581611475565b611300836020611487565b6040516020016113119291906119de565b60408051601f198184030181529082905262461bcd60e51b8252610641916004016117ca565b6113418282610941565b15610654576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093a836001600160a01b038416611623565b60075460ff1661071e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610641565b6105d0838383611716565b60075460ff161561071e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610641565b600082600001828154811061146257611462611a53565b9060005260206000200154905092915050565b60606104d76001600160a01b03831660145b60606000611496836002611a69565b6114a190600261197b565b67ffffffffffffffff8111156114b9576114b9611a80565b6040519080825280601f01601f1916602001820160405280156114e3576020820181803683370190505b509050600360fc1b816000815181106114fe576114fe611a53565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061152d5761152d611a53565b60200101906001600160f81b031916908160001a9053506000611551846002611a69565b61155c90600161197b565b90505b60018111156115d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159057611590611a53565b1a60f81b8282815181106115a6576115a6611a53565b60200101906001600160f81b031916908160001a90535060049490941c936115cd81611a96565b905061155f565b50831561093a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610641565b6000818152600183016020526040812054801561170c576000611647600183611aad565b855490915060009061165b90600190611aad565b90508181146116c057600086600001828154811061167b5761167b611a53565b906000526020600020015490508087600001848154811061169e5761169e611a53565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116d1576116d1611ac0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d7565b60009150506104d7565b60075460ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610641565b60006020828403121561178e57600080fd5b81356001600160e01b03198116811461093a57600080fd5b60005b838110156117c15781810151838201526020016117a9565b50506000910152565b60208152600082518060208401526117e98160408501602087016117a6565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461181457600080fd5b919050565b6000806040838503121561182c57600080fd5b611835836117fd565b946020939093013593505050565b60008060006060848603121561185857600080fd5b611861846117fd565b925061186f602085016117fd565b9150604084013590509250925092565b60006020828403121561189157600080fd5b5035919050565b600080604083850312156118ab57600080fd5b823591506118bb602084016117fd565b90509250929050565b6000602082840312156118d657600080fd5b61093a826117fd565b600080604083850312156118f257600080fd5b50508035926020909101359150565b6000806040838503121561191457600080fd5b61191d836117fd565b91506118bb602084016117fd565b600181811c9082168061193f57607f821691505b60208210810361195f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d7576104d7611965565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a168160178501602088016117a6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a478160288401602088016117a6565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d7576104d7611965565b634e487b7160e01b600052604160045260246000fd5b600081611aa557611aa5611965565b506000190190565b818103818111156104d7576104d7611965565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e167717c6f5d7d3fa2b17f9645cf6e8f6ed55a0fe6c77f7e675e3c1e7dc9af7564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a264697066735822122002ff3121b2e94b322fd06ec8587d6672c665b87c180c2979dcb8d419554cdcbc64736f6c63430008120033",
  "immutableReferences": {
    "9651": [
      {
        "length": 32,
        "start": 429
      },
      {
        "length": 32,
        "start": 1255
      },
      {
        "length": 32,
        "start": 1389
      }
    ],
    "9653": [
      {
        "length": 32,
        "start": 312
      },
      {
        "length": 32,
        "start": 1118
      }
    ],
    "9656": [
      {
        "length": 32,
        "start": 710
      },
      {
        "length": 32,
        "start": 1818
      },
      {
        "length": 32,
        "start": 1976
      },
      {
        "length": 32,
        "start": 2102
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1192:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:31"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:31"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:31",
                "type": ""
              }
            ],
            "src": "14:177:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:263:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "366:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "332:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "341:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "321:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "382:50:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "392:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:40:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "441:59:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "451:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:49:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "441:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "509:59:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "564:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "519:29:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:49:31"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "292:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "300:6:31",
                "type": ""
              }
            ],
            "src": "196:378:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:229:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "804:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "815:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "820:2:31",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "793:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:31"
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f74206265203020",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "859:34:31",
                        "type": "",
                        "value": "PMV3Factory address cannot be 0 "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "914:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "925:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "910:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:18:31"
                      },
                      {
                        "hexValue": "61646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "930:9:31",
                        "type": "",
                        "value": "address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "903:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "903:37:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "949:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "949:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "744:4:31",
                "type": ""
              }
            ],
            "src": "579:403:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1088:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1098:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1110:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1121:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1106:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1098:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1140:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1155:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1176:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1180:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1163:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1163:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1151:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1133:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1133:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1068:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1079:4:31",
                "type": ""
              }
            ],
            "src": "987:203:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"PMV3Factory address cannot be 0 \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9656:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:31",
                "type": ""
              }
            ],
            "src": "14:203:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:76:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "333:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "333:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "375:9:31"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:25:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "368:25:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "292:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "303:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "314:4:31",
                "type": ""
              }
            ],
            "src": "222:177:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:95:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "453:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:3:31",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "465:10:31",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "456:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:20:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:31:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "446:31:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "493:1:31",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:4:31",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "486:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:15:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "486:15:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "520:4:31",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "510:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:15:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "510:15:31"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "404:127:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "589:666:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "647:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "650:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "617:6:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "625:4:31",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "613:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "613:17:31"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "632:3:31"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "609:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:27:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "602:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:35:31"
                  },
                  "nodeType": "YulIf",
                  "src": "599:55:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "663:30:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "686:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "673:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "673:20:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "667:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "702:28:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "712:18:31",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "706:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "753:22:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "755:16:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "755:18:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "755:18:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "745:2:31"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "749:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "742:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:10:31"
                  },
                  "nodeType": "YulIf",
                  "src": "739:36:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "784:17:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:31",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "794:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "794:7:31"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "788:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:23:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "830:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "824:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:9:31"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "814:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "842:71:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "864:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "888:2:31"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "892:4:31",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "884:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "884:13:31"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "899:2:31"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "880:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "880:22:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "904:2:31",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "876:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "876:31:31"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "909:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "872:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "872:40:31"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "860:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:53:31"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "846:10:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "972:22:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "974:16:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "974:18:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "974:18:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "931:10:31"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "943:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "928:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "951:10:31"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "963:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "948:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "925:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:46:31"
                  },
                  "nodeType": "YulIf",
                  "src": "922:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1010:2:31",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1014:10:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:22:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1003:22:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1041:6:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1049:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:18:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1034:18:31"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1100:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1102:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1102:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1102:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1075:6:31"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1083:2:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1071:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1071:15:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1088:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:26:31"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1095:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1064:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1064:35:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1061:55:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1142:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1150:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1138:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1138:17:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1161:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1169:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1157:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:17:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1176:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1125:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:54:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:54:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1203:6:31"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1211:2:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1199:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1199:15:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1216:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1195:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:26:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1223:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1188:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1188:37:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1234:15:31",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1243:6:31"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1234:5:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "563:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "571:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "579:5:31",
                "type": ""
              }
            ],
            "src": "536:719:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1313:86:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1377:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1386:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1389:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1336:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1347:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1362:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1367:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1358:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1358:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1371:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1354:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1354:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1333:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1333:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1326:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1323:70:31"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:31",
                "type": ""
              }
            ],
            "src": "1260:139:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1446:76:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1500:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1509:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1512:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1502:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1502:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1502:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1469:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1490:5:31"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1483:6:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1483:13:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1476:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1476:21:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1466:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1466:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1459:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1459:40:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1456:60:31"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1435:5:31",
                "type": ""
              }
            ],
            "src": "1404:118:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1697:736:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1744:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1753:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1756:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1746:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1746:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1746:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1718:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1727:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1714:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1714:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1739:3:31",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1710:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:33:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1707:53:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1769:37:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1796:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1783:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1783:23:31"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1773:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1815:28:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1825:18:31",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1819:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1870:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1879:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1882:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1872:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1872:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1872:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1858:6:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1866:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1855:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:14:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1852:34:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1895:60:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1927:9:31"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1938:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1923:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:22:31"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1947:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1905:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1905:50:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1895:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1964:48:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1980:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:32:31"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1968:8:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2041:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2053:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2043:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2043:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2043:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2027:8:31"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2037:2:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2024:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:16:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2021:36:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2066:62:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2098:9:31"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2109:8:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2094:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2094:24:31"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2120:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2076:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:52:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2066:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2137:42:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2164:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2175:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2147:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:32:31"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2137:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2188:45:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2218:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2229:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2214:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2214:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2201:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2201:32:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2192:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2275:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2242:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2242:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2290:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2300:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2290:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2314:48:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2346:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2357:3:31",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:19:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2329:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:33:31"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2318:7:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2393:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2371:21:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2371:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2371:30:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2410:17:31",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2420:7:31"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2410:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1631:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1642:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1654:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1662:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1670:6:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1678:6:31",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1686:6:31",
                "type": ""
              }
            ],
            "src": "1527:906:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2560:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2570:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2582:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2593:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2578:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2578:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2570:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2612:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2627:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2643:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2648:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2639:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2639:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2652:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2635:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2635:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2605:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2605:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2605:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2529:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2540:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2551:4:31",
                "type": ""
              }
            ],
            "src": "2438:224:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2769:317:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2815:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2824:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2827:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2817:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2817:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2817:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2790:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2799:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2786:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2786:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2811:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2782:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2782:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2779:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2840:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2866:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2853:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2844:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2918:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2885:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2885:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2933:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2943:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2933:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2957:47:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2989:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3000:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2985:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2985:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2972:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:32:31"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2961:7:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3046:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "3013:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:41:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:41:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3063:17:31",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3073:7:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3063:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2727:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2738:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2750:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2758:6:31",
                "type": ""
              }
            ],
            "src": "2667:419:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3186:92:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3196:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3208:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3219:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3204:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3196:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3238:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3263:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3256:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3256:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3249:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3249:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3231:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:41:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3231:41:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3155:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3166:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3177:4:31",
                "type": ""
              }
            ],
            "src": "3091:187:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3353:110:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3399:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3408:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3411:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3401:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3401:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3401:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3374:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3383:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3370:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3370:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3395:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3366:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3366:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3363:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3424:33:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3447:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3434:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:23:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3424:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3319:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3330:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3342:6:31",
                "type": ""
              }
            ],
            "src": "3283:180:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3538:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3584:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3593:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3596:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3586:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3586:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3586:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3559:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3568:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3555:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3555:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3551:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3548:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3609:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3635:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3622:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3613:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3687:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "3654:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3654:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3654:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3702:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3712:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3504:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3515:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3527:6:31",
                "type": ""
              }
            ],
            "src": "3468:255:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3950:294:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3960:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3972:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3983:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3968:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3968:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3960:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3996:29:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4014:3:31",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4019:1:31",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4010:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4010:11:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4023:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4006:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:19:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4000:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4041:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4056:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4064:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4052:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4052:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4034:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4034:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4088:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4099:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4084:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4084:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4118:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4111:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4111:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4104:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4077:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4077:50:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4147:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4143:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4177:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4170:6:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4170:14:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4163:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4163:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:50:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4206:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4217:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4202:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4202:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4226:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4234:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4195:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4195:43:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4195:43:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_bool_t_contract$_IRealityETH_IERC20_$10975__to_t_address_t_bool_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3895:9:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3906:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3914:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3922:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3930:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3941:4:31",
                "type": ""
              }
            ],
            "src": "3728:516:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4334:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4380:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4389:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4392:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4382:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4382:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4382:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4355:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4364:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4351:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4351:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4376:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4347:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "4344:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4405:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4431:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4418:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4409:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4483:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "4450:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4450:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4450:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4498:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4508:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4498:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4300:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4311:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4323:6:31",
                "type": ""
              }
            ],
            "src": "4249:270:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4659:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4669:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4681:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4692:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4677:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4669:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4711:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4726:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4742:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4747:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4738:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4738:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4751:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4734:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4734:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4722:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4722:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4704:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4704:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11114__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4628:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4639:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4650:4:31",
                "type": ""
              }
            ],
            "src": "4524:237:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4940:225:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4957:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4968:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4950:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4950:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4991:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5002:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4987:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4987:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5007:2:31",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4980:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4980:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5041:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5026:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5026:18:31"
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5046:34:31",
                        "type": "",
                        "value": "Token to answer cannot be 0 addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5101:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5112:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5097:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5097:18:31"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5117:5:31",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5090:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:33:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5132:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5144:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5155:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5140:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5132:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4917:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4931:4:31",
                "type": ""
              }
            ],
            "src": "4766:399:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5299:175:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5309:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5321:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5332:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5317:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5317:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5309:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5344:29:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5362:3:31",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5367:1:31",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5358:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5358:11:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5371:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5354:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5354:19:31"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5348:2:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5389:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5404:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5412:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5400:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5400:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5382:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5382:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5382:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5436:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5447:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5432:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5432:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5456:6:31"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5464:2:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5452:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5452:15:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5425:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5425:43:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5425:43:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5260:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5271:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5279:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5290:4:31",
                "type": ""
              }
            ],
            "src": "5170:304:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5557:167:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5603:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5612:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5615:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5605:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5605:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5605:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5578:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5587:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5574:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5574:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5599:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5570:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5570:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "5567:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5628:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5647:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5641:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5641:16:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5632:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5688:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5666:21:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5666:28:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5666:28:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5703:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5713:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5703:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5523:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5534:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5546:6:31",
                "type": ""
              }
            ],
            "src": "5479:245:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5779:373:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5789:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5809:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5803:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5803:12:31"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5793:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5831:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5836:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5824:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5824:19:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5824:19:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5852:10:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5861:1:31",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5856:1:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5923:110:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5937:14:31",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5947:4:31",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "5941:2:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "5979:3:31"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5984:1:31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5975:3:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5975:11:31"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5988:2:31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5971:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5971:20:31"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "6007:5:31"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6014:1:31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6003:3:31"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6003:13:31"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6018:2:31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5999:3:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5999:22:31"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5993:5:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5993:29:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5964:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5964:59:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5964:59:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5882:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5885:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5879:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5879:13:31"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5893:21:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5895:17:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5904:1:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5907:4:31",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5900:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5900:12:31"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5895:1:31"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5875:3:31",
                    "statements": []
                  },
                  "src": "5871:162:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6057:3:31"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6062:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6053:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6053:16:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6071:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6049:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6049:27:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6078:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6042:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:38:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6042:38:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6089:57:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6104:3:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6117:6:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6125:2:31",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6113:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6113:15:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6134:2:31",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6130:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6130:7:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6109:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6109:29:31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6100:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6100:39:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6141:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6096:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6096:50:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6089:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5756:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5763:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5771:3:31",
                "type": ""
              }
            ],
            "src": "5729:423:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6382:328:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6399:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6410:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6392:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6392:22:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6392:22:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6423:60:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6455:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6467:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6478:3:31",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6463:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6463:19:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6437:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6437:46:31"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6427:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6503:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6514:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6499:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6499:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6523:6:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6531:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6519:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6519:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6492:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:50:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6492:50:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6551:41:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6577:6:31"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6585:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6559:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6559:33:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6551:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6612:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6623:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6608:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6608:18:31"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6628:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6601:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6601:34:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6601:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6655:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6666:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6651:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6651:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6675:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6691:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6696:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6687:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6687:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6700:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6683:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6683:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6671:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6671:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6644:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6644:60:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6644:60:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6327:9:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6338:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6346:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6354:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6362:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6373:4:31",
                "type": ""
              }
            ],
            "src": "6157:553:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6844:145:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6854:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6866:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6877:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6862:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6854:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6896:9:31"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6907:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6889:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:25:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6889:25:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6934:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6945:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6930:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6930:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6954:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6970:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6975:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6966:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6966:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6979:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6962:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6962:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6950:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6950:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6923:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6923:60:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6923:60:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6805:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6816:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6824:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6835:4:31",
                "type": ""
              }
            ],
            "src": "6715:274:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7041:185:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7080:111:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7101:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7108:3:31",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7113:10:31",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7104:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7104:20:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7094:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7094:31:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7094:31:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7145:1:31",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7148:4:31",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7138:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7138:15:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7138:15:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7173:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7176:4:31",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7166:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7166:15:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7166:15:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7057:5:31"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7068:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7064:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7064:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7054:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7054:17:31"
                  },
                  "nodeType": "YulIf",
                  "src": "7051:140:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7200:20:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7211:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7218:1:31",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7207:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7207:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7200:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7023:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7033:3:31",
                "type": ""
              }
            ],
            "src": "6994:232:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7312:178:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7358:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7367:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7370:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7360:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7360:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7360:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7333:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7342:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7329:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7329:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7354:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7325:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7325:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "7322:52:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7383:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7402:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7396:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7396:16:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7387:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7454:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "7421:32:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7421:39:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7421:39:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7469:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7479:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7469:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7278:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7289:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7301:6:31",
                "type": ""
              }
            ],
            "src": "7231:259:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7669:169:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7686:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7679:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7679:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7679:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7720:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7731:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7716:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7716:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7736:2:31",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7709:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7709:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7759:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7770:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7755:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7755:18:31"
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7775:21:31",
                        "type": "",
                        "value": "Land does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7748:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7748:49:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7748:49:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7806:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7818:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7829:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7814:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7814:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7806:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7646:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7660:4:31",
                "type": ""
              }
            ],
            "src": "7495:343:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8017:171:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8034:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8045:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8027:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8027:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8027:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8068:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8079:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8064:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8064:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8084:2:31",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8057:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8057:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8057:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8107:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8118:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8103:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8103:18:31"
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8123:23:31",
                        "type": "",
                        "value": "Not admin of the land"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8096:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8096:51:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8156:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8168:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8179:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8164:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8164:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8156:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7994:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8008:4:31",
                "type": ""
              }
            ],
            "src": "7843:345:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8367:172:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8384:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8395:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8377:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8377:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8377:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8418:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8429:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8414:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8414:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8434:2:31",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8407:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8407:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8407:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8457:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8468:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8453:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8453:18:31"
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8473:24:31",
                        "type": "",
                        "value": "Land is already active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8446:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8446:52:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8446:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8507:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8519:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8530:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8515:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8515:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8507:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8344:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8358:4:31",
                "type": ""
              }
            ],
            "src": "8193:346:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8718:168:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8735:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8746:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8728:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8728:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8728:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8769:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8780:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8765:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8765:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8785:2:31",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8758:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8758:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8758:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8808:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8819:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8804:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8804:18:31"
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8824:20:31",
                        "type": "",
                        "value": "Land is not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8797:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8797:48:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8797:48:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8854:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8866:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8877:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8862:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8862:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8854:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8695:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8709:4:31",
                "type": ""
              }
            ],
            "src": "8544:342:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9065:228:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9082:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9093:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9075:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9075:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9075:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9116:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9127:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9112:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9112:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9132:2:31",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9105:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9105:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9105:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9155:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9166:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9151:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9151:18:31"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9171:34:31",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9144:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9144:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9144:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9226:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9237:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9222:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9222:18:31"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9242:8:31",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9215:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9215:36:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9215:36:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9260:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9272:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9283:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9268:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9268:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9260:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9042:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9056:4:31",
                "type": ""
              }
            ],
            "src": "8891:402:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9472:182:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9489:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9500:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9482:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9482:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9482:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9523:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9534:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9519:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9519:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9539:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9512:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9512:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9512:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9562:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9573:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9558:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9558:18:31"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9578:34:31",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9551:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9551:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9551:62:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9622:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9634:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9645:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9630:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9630:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9622:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9449:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9463:4:31",
                "type": ""
              }
            ],
            "src": "9298:356:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_contract_IERC20(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_bool_t_contract$_IRealityETH_IERC20_$10975__to_t_address_t_bool_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$11114__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token to answer cannot be 0 addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Land does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not admin of the land\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Land is already active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Land is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "329:5644:28:-:0;;;1372:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:16;936:18:4;:32::i;:::-;1716:1:6;1821:22;;-1:-1:-1;;;;;1484:26:28;;1476:78;;;;-1:-1:-1;;;1476:78:28;;781:2:31;1476:78:28;;;763:21:31;820:2;800:18;;;793:30;859:34;839:18;;;832:62;-1:-1:-1;;;910:18:31;;;903:37;957:19;;1476:78:28;;;;;;;;-1:-1:-1;;;;;1561:12:28;;;;1597:53;;1626:23;;1597:53;;;:::i;:::-;-1:-1:-1;;;;;1151:32:31;;;1133:51;;1121:2;1106:18;1597:53:28;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1579:71:28;;;;;1656:26;;;-1:-1:-1;329:5644:28;;-1:-1:-1;329:5644:28;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;329:5644:28:-;;;;;;;;:::o;14:177:31:-;93:13;;-1:-1:-1;;;;;135:31:31;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;987:203::-;329:5644:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "329:5644:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:36;;;;;;;;-1:-1:-1;;;;;178:32:31;;;160:51;;148:2;133:18;463:36:28;;;;;;;;1336:31;;;;;;;;;368:25:31;;;356:2;341:18;1336:31:28;222:177:31;1921:1576:28;;;;;;:::i;:::-;;:::i;399:29::-;;;;;5191:233;;;;;;:::i;:::-;;:::i;:::-;;;3256:14:31;;3249:22;3231:41;;3219:2;3204:18;5191:233:28;3091:187:31;1305:27:28;;;;;;:::i;:::-;;:::i;1264:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1264:37:28;;;;;-1:-1:-1;;;1264:37:28;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4052:15:31;;;4034:34;;4111:14;;4104:22;4099:2;4084:18;;4077:50;4170:14;;4163:22;4143:18;;;4136:50;;;;4222:15;;;4217:2;4202:18;;4195:43;3983:3;3968:19;1264:37:28;3728:516:31;4294:438:28;;;;;;:::i;:::-;;:::i;:::-;;3895:395;;;;;;:::i;:::-;;:::i;540:57::-;;;;;3501:390;;;;;;:::i;:::-;;:::i;1831:101:4:-;;;:::i;5798:173:28:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5908:27:28;;;5876:4;5908:27;;;:5;:27;;;;;;;;5949:17;;;;;;:11;;;;:17;;;;;;;;5798:173;4736:451;;;;;;:::i;:::-;;:::i;1201:85:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;5633:161:28;;;;;;:::i;:::-;-1:-1:-1;;;;;5737:27:28;5705:4;5737:27;;;:5;:27;;;;;5778:11;-1:-1:-1;;;5778:11:28;;;;;5633:161;5428:201;;;;;;:::i;:::-;;:::i;2081:198:4:-;;;;;;:::i;:::-;;:::i;1921:1576:28:-;2106:12;-1:-1:-1;;;;;2135:36:28;;2127:84;;;;-1:-1:-1;;;2127:84:28;;4968:2:31;2127:84:28;;;4950:21:31;5007:2;4987:18;;;4980:30;5046:34;5026:18;;;5019:62;-1:-1:-1;;;5097:18:31;;;5090:33;5140:19;;2127:84:28;;;;;;;;;2353:70;;-1:-1:-1;;;2353:70:28;;2405:4;2353:70;;;5382:34:31;2412:10:28;5432:18:31;;;5425:43;2298:11:28;;-1:-1:-1;;;;;2353:43:28;;;;;5317:18:31;;2353:70:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2345:79;;;;;;2470:22;2512:4;2518:6;2526:18;2554:4;2495:65;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2621:60:28;;-1:-1:-1;;;2621:60:28;;-1:-1:-1;;;;;;;;;;;2621:60:28;;;6889:25:31;-1:-1:-1;;;;;2675:4:28;6950:32:31;;6930:18;;;6923:60;2470:90:28;;-1:-1:-1;2621:19:28;;;;;;6862:18:31;;2621:60:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2738:57:28;;-1:-1:-1;;;2738:57:28;;-1:-1:-1;;;;;;;;;;;2738:57:28;;;6889:25:31;2784:10:28;6930:18:31;;;6923:60;-1:-1:-1;;;;;2738:19:28;;;-1:-1:-1;2738:19:28;;-1:-1:-1;6862:18:31;;2738:57:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;2865:25:28;;2845:17;2865:25;;;:5;:25;;;;;;;;2896:22;;-1:-1:-1;;;;;;;;;2924:18:28;;;;;;;;2960:10;2948:23;;-1:-1:-1;2948:11:28;;;:23;;;;;;:30;;-1:-1:-1;;2948:30:28;;;;;;;;2984:29;;;:56;;;;;;;;;;;;3046:10;:35;;;;;;;;;;;;;-1:-1:-1;;;;;;3046:35:28;;;;;;;3087:16;:18;;;;;;:::i;:::-;;;;-1:-1:-1;;3162:51:28;;-1:-1:-1;;;3162:51:28;;-1:-1:-1;;;;;178:32:31;;;3162:51:28;;;160::31;-1:-1:-1;;3162:15:28;:27;;;;;;133:18:31;;3162:51:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3162:65:28;;3158:140;;3237:54;;-1:-1:-1;;;3237:54:28;;-1:-1:-1;;;;;178:32:31;;;3237:54:28;;;160:51:31;3237:15:28;:30;;;;133:18:31;;3237:54:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3158:140;3338:51;;-1:-1:-1;;;3338:51:28;;-1:-1:-1;;;;;178:32:31;;;3338:51:28;;;160::31;3338:15:28;:27;;;;133:18:31;;3338:51:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3303:13;;;:87;;-1:-1:-1;;;;;;3303:87:28;;-1:-1:-1;;;;;3303:87:28;;;;;;;3402:67;;;;;;;;;3414:10;;3402:67;;-1:-1:-1;;3402:67:28;-1:-1:-1;3483:9:28;1921:1576;-1:-1:-1;;;;;;;1921:1576:28:o;5191:233::-;-1:-1:-1;;;;;5311:27:28;;5279:4;5311:27;;;:5;:27;;;;;5352:11;;-1:-1:-1;;;5352:11:28;;;;:67;;;;-1:-1:-1;5368:29:28;;;;;;;:50;;-1:-1:-1;;;;;;5401:17:28;;;;;;:11;;;:17;;;;;;;;5368:50;5345:74;5191:233;-1:-1:-1;;;;5191:233:28:o;1305:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1305:27:28;;-1:-1:-1;1305:27:28;:::o;4294:438::-;-1:-1:-1;;;;;4386:25:28;;4366:17;4386:25;;;:5;:25;;;;;4426:11;;-1:-1:-1;;;4426:11:28;;;;4418:43;;;;-1:-1:-1;;;4418:43:28;;7697:2:31;4418:43:28;;;7679:21:31;7736:2;7716:18;;;7709:30;-1:-1:-1;;;7755:18:31;;;7748:49;7814:18;;4418:43:28;7495:343:31;4418:43:28;4487:10;4475:23;;;;:11;;;:23;;;;;;;;4467:57;;;;-1:-1:-1;;;4467:57:28;;;;;;;:::i;:::-;4577:10;;:53;;-1:-1:-1;;;4577:53:28;;-1:-1:-1;;;;;;;;;;;4577:53:28;;;6889:25:31;-1:-1:-1;;;;;6950:32:31;;;6930:18;;;6923:60;4577:10:28;;;;:20;;6862:18:31;;4577:53:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4637:18:28;;;;;;;4658:4;4637:11;;;:18;;;;;;:25;;-1:-1:-1;;4637:25:28;;;;;;;4674:53;4637:18;;4674:53;;;4689:10;;4674:53;;;4360:372;4294:438;;:::o;3895:395::-;-1:-1:-1;;;;;3968:25:28;;3948:17;3968:25;;;:5;:25;;;;;4009:11;;-1:-1:-1;;;4009:11:28;;;;4008:12;4000:47;;;;-1:-1:-1;;;4000:47:28;;8395:2:31;4000:47:28;;;8377:21:31;8434:2;8414:18;;;8407:30;-1:-1:-1;;;8453:18:31;;;8446:52;8515:18;;4000:47:28;8193:346:31;4000:47:28;4073:10;4061:23;;;;:11;;;:23;;;;;;;;4053:57;;;;-1:-1:-1;;;4053:57:28;;;;;;;:::i;:::-;4140:18;;-1:-1:-1;;;;4140:18:28;-1:-1:-1;;;4140:18:28;;;4188:42;;;-1:-1:-1;;;4188:42:28;;;;-1:-1:-1;;;;;4188:40:28;;;;;:42;;;;;4140:11;;4188:42;;;;;;;4140:11;4188:40;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4242:43:28;;-1:-1:-1;;;;;4242:43:28;;;-1:-1:-1;4254:10:28;;-1:-1:-1;4242:43:28;;;;;3942:348;3895:395;:::o;3501:390::-;-1:-1:-1;;;;;3575:25:28;;3555:17;3575:25;;;:5;:25;;;;;3615:11;;-1:-1:-1;;;3615:11:28;;;;3607:42;;;;-1:-1:-1;;;3607:42:28;;8746:2:31;3607:42:28;;;8728:21:31;8785:2;8765:18;;;8758:30;-1:-1:-1;;;8804:18:31;;;8797:48;8862:18;;3607:42:28;8544:342:31;3607:42:28;3675:10;3663:23;;;;:11;;;:23;;;;;;;;3655:57;;;;-1:-1:-1;;;3655:57:28;;;;;;;:::i;:::-;3743:19;;-1:-1:-1;;;;3743:19:28;;;3790:40;;;-1:-1:-1;;;3790:40:28;;;;-1:-1:-1;;;;;3790:38:28;;;;;:40;;;;;3757:5;;3790:40;;;;;;;3757:5;3790:38;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3842:44:28;;-1:-1:-1;;;;;3842:44:28;;;-1:-1:-1;3855:10:28;;-1:-1:-1;3842:44:28;;;;;3549:342;3501:390;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4736:451:28:-;-1:-1:-1;;;;;4833:25:28;;4813:17;4833:25;;;:5;:25;;;;;4873:11;;-1:-1:-1;;;4873:11:28;;;;4865:43;;;;-1:-1:-1;;;4865:43:28;;7697:2:31;4865:43:28;;;7679:21:31;7736:2;7716:18;;;7709:30;-1:-1:-1;;;7755:18:31;;;7748:49;7814:18;;4865:43:28;7495:343:31;4865:43:28;4934:10;4922:23;;;;:11;;;:23;;;;;;;;4914:57;;;;-1:-1:-1;;;4914:57:28;;;;;;;:::i;:::-;5028:10;;:54;;-1:-1:-1;;;5028:54:28;;-1:-1:-1;;;;;;;;;;;5028:54:28;;;6889:25:31;-1:-1:-1;;;;;6950:32:31;;;6930:18;;;6923:60;5028:10:28;;;;:21;;6862:18:31;;5028:54:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5089:18:28;;;5110:5;5089:18;;;:11;;;:18;;;;;;:26;;-1:-1:-1;;5089:26:28;;;5127:55;5089:18;;5127:55;;;5144:10;;5127:55;;;4807:380;4736:451;;:::o;5428:201::-;-1:-1:-1;;;;;5551:27:28;;5519:4;5551:27;;;:5;:27;;;;;5592:11;;-1:-1:-1;;;5592:11:28;;;;:32;;;;-1:-1:-1;;;;;;5607:17:28;;;;;;:11;;;:17;;;;;;;;5585:39;;;5428:201;;;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;9093:2:31;2161:73:4::1;::::0;::::1;9075:21:31::0;9132:2;9112:18;;;9105:30;9171:34;9151:18;;;9144:62;-1:-1:-1;;;9222:18:31;;;9215:36;9268:19;;2161:73:4::1;8891:402:31::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:16;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;9500:2:31;1414:68:4;;;9482:21:31;;;9519:18;;;9512:30;9578:34;9558:18;;;9551:62;9630:18;;1414:68:4;9298:356:31;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;404:127:31:-;465:10;460:3;456:20;453:1;446:31;496:4;493:1;486:15;520:4;517:1;510:15;536:719;579:5;632:3;625:4;617:6;613:17;609:27;599:55;;650:1;647;640:12;599:55;686:6;673:20;712:18;749:2;745;742:10;739:36;;;755:18;;:::i;:::-;830:2;824:9;798:2;884:13;;-1:-1:-1;;880:22:31;;;904:2;876:31;872:40;860:53;;;928:18;;;948:22;;;925:46;922:72;;;974:18;;:::i;:::-;1014:10;1010:2;1003:22;1049:2;1041:6;1034:18;1095:3;1088:4;1083:2;1075:6;1071:15;1067:26;1064:35;1061:55;;;1112:1;1109;1102:12;1061:55;1176:2;1169:4;1161:6;1157:17;1150:4;1142:6;1138:17;1125:54;1223:1;1216:4;1211:2;1203:6;1199:15;1195:26;1188:37;1243:6;1234:15;;;;;;536:719;;;;:::o;1260:139::-;-1:-1:-1;;;;;1343:31:31;;1333:42;;1323:70;;1389:1;1386;1379:12;1404:118;1490:5;1483:13;1476:21;1469:5;1466:32;1456:60;;1512:1;1509;1502:12;1527:906;1654:6;1662;1670;1678;1686;1739:3;1727:9;1718:7;1714:23;1710:33;1707:53;;;1756:1;1753;1746:12;1707:53;1796:9;1783:23;1825:18;1866:2;1858:6;1855:14;1852:34;;;1882:1;1879;1872:12;1852:34;1905:50;1947:7;1938:6;1927:9;1923:22;1905:50;:::i;:::-;1895:60;;2008:2;1997:9;1993:18;1980:32;1964:48;;2037:2;2027:8;2024:16;2021:36;;;2053:1;2050;2043:12;2021:36;;2076:52;2120:7;2109:8;2098:9;2094:24;2076:52;:::i;:::-;2066:62;;;2175:2;2164:9;2160:18;2147:32;2137:42;;2229:2;2218:9;2214:18;2201:32;2242:39;2275:5;2242:39;:::i;:::-;2300:5;-1:-1:-1;2357:3:31;2342:19;;2329:33;2371:30;2329:33;2371:30;:::i;:::-;2420:7;2410:17;;;1527:906;;;;;;;;:::o;2667:419::-;2750:6;2758;2811:2;2799:9;2790:7;2786:23;2782:32;2779:52;;;2827:1;2824;2817:12;2779:52;2866:9;2853:23;2885:39;2918:5;2885:39;:::i;:::-;2943:5;-1:-1:-1;3000:2:31;2985:18;;2972:32;3013:41;2972:32;3013:41;:::i;:::-;3073:7;3063:17;;;2667:419;;;;;:::o;3283:180::-;3342:6;3395:2;3383:9;3374:7;3370:23;3366:32;3363:52;;;3411:1;3408;3401:12;3363:52;-1:-1:-1;3434:23:31;;3283:180;-1:-1:-1;3283:180:31:o;3468:255::-;3527:6;3580:2;3568:9;3559:7;3555:23;3551:32;3548:52;;;3596:1;3593;3586:12;3548:52;3635:9;3622:23;3654:39;3687:5;3654:39;:::i;:::-;3712:5;3468:255;-1:-1:-1;;;3468:255:31:o;5479:245::-;5546:6;5599:2;5587:9;5578:7;5574:23;5570:32;5567:52;;;5615:1;5612;5605:12;5567:52;5647:9;5641:16;5666:28;5688:5;5666:28;:::i;5729:423::-;5771:3;5809:5;5803:12;5836:6;5831:3;5824:19;5861:1;5871:162;5885:6;5882:1;5879:13;5871:162;;;5947:4;6003:13;;;5999:22;;5993:29;5975:11;;;5971:20;;5964:59;5900:12;5871:162;;;5875:3;6078:1;6071:4;6062:6;6057:3;6053:16;6049:27;6042:38;6141:4;6134:2;6130:7;6125:2;6117:6;6113:15;6109:29;6104:3;6100:39;6096:50;6089:57;;;5729:423;;;;:::o;6157:553::-;6410:3;6399:9;6392:22;6373:4;6437:46;6478:3;6467:9;6463:19;6455:6;6437:46;:::i;:::-;6531:9;6523:6;6519:22;6514:2;6503:9;6499:18;6492:50;6559:33;6585:6;6577;6559:33;:::i;:::-;6623:2;6608:18;;6601:34;;;;-1:-1:-1;;;;;;;6671:32:31;;;;6666:2;6651:18;;;6644:60;6551:41;6157:553;-1:-1:-1;;6157:553:31:o;6994:232::-;7033:3;7054:17;;;7051:140;;7113:10;7108:3;7104:20;7101:1;7094:31;7148:4;7145:1;7138:15;7176:4;7173:1;7166:15;7051:140;-1:-1:-1;7218:1:31;7207:13;;6994:232::o;7231:259::-;7301:6;7354:2;7342:9;7333:7;7329:23;7325:32;7322:52;;;7370:1;7367;7360:12;7322:52;7402:9;7396:16;7421:39;7454:5;7421:39;:::i;7843:345::-;8045:2;8027:21;;;8084:2;8064:18;;;8057:30;-1:-1:-1;;;8118:2:31;8103:18;;8096:51;8179:2;8164:18;;7843:345::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./FantasyERC20.sol\";\nimport \"./RealityETH_ERC20_Factory.sol\";\nimport \"./IPredictionMarketV3Factory.sol\";\n\n// openzeppelin ownable contract import\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract PredictionMarketV3Controller is Ownable, ReentrancyGuard {\n  address public immutable PMV3; // PredictionMarketV3 contract\n  address public immutable PMV3Factory; // PredictionMarketFactory contract\n\n  RealityETH_ERC20_Factory public immutable realitioFactory;\n\n  event LandCreated(address indexed user, address indexed token, address indexed tokenToAnswer);\n\n  event LandDisabled(address indexed user, address indexed token);\n\n  event LandEnabled(address indexed user, address indexed token);\n\n  event LandOffsetUnlocked(address indexed user, address indexed token);\n\n  event LandAdminAdded(address indexed user, address indexed token, address indexed admin);\n\n  event LandAdminRemoved(address indexed user, address indexed token, address indexed admin);\n\n  struct Land {\n    FantasyERC20 token;\n    bool active;\n    mapping(address => bool) admins;\n    bool everyoneCanCreateMarkets;\n    IRealityETH_IERC20 realitio;\n  }\n\n  mapping(address => Land) public lands;\n  address[] public landTokens;\n  uint256 public landTokensLength;\n\n  constructor(\n    address _PMV3,\n    address _realitioLibraryAddress,\n    address _PMV3Factory\n  ) {\n    require(_PMV3Factory != address(0), \"PMV3Factory address cannot be 0 address\");\n\n    PMV3 = _PMV3;\n    realitioFactory = new RealityETH_ERC20_Factory(_realitioLibraryAddress);\n    PMV3Factory = _PMV3Factory;\n  }\n\n  // lockAmount is the amount of tokens that the user needs to lock to create a land\n  // by locking the amount the factory will create a fantasyERC20 token and store it in the contract\n  // the user will be the admin of the land\n  function createLand(\n    string memory name,\n    string memory symbol,\n    uint256 tokenAmountToClaim,\n    IERC20 tokenToAnswer,\n    bool everyoneCanCreateMarkets\n  ) external returns (FantasyERC20) {\n\n    require(address(tokenToAnswer) != address(0), \"Token to answer cannot be 0 address\");\n\n    IPredictionMarketV3Factory predictionMarketFactory = IPredictionMarketV3Factory(PMV3Factory); // FIXME change to interface\n    require(predictionMarketFactory.isPMControllerAdmin(address(this), msg.sender));\n\n    // create a new fantasyERC20 token\n    FantasyERC20 landToken = new FantasyERC20(name, symbol, tokenAmountToClaim, address(PMV3));\n\n    // adding minting privileges to the PMV3 contract\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), address(PMV3));\n    // adding minting privileges to the msg.sender\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), msg.sender);\n\n    // store the new token in the contract\n    Land storage land = lands[address(landToken)];\n    land.token = landToken;\n    land.active = true;\n    land.admins[msg.sender] = true;\n    land.everyoneCanCreateMarkets = everyoneCanCreateMarkets;\n    landTokens.push(address(landToken));\n    landTokensLength++;\n\n    // creating the realityETH_ERC20 contract\n    if (realitioFactory.deployments(address(tokenToAnswer)) == address(0)) {\n      realitioFactory.createInstance(address(tokenToAnswer));\n    }\n    land.realitio = IRealityETH_IERC20(realitioFactory.deployments(address(tokenToAnswer)));\n\n    emit LandCreated(msg.sender, address(landToken), address(tokenToAnswer));\n\n    return landToken;\n  }\n\n  function disableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land is not active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // disable the land\n    land.active = false;\n\n    // pausing token\n    FantasyERC20(address(landToken)).pause();\n\n    emit LandDisabled(msg.sender, address(landToken));\n  }\n\n  function enableLand(IERC20 landToken) external {\n    Land storage land = lands[address(landToken)];\n\n    require(!land.active, \"Land is already active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // enable the land\n    land.active = true;\n\n    // unpausing token\n    FantasyERC20(address(landToken)).unpause();\n\n    emit LandEnabled(msg.sender, address(landToken));\n  }\n\n  function addAdminToLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // adding minting privileges to the admin\n    land.token.grantRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = true;\n\n    emit LandAdminAdded(msg.sender, address(landToken), admin);\n  }\n\n  function removeAdminFromLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // removing minting privileges from the admin\n    land.token.revokeRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = false;\n\n    emit LandAdminRemoved(msg.sender, address(landToken), admin);\n  }\n\n  function isAllowedToCreateMarket(IERC20 marketToken, address user) public view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && (land.everyoneCanCreateMarkets || land.admins[user]);\n  }\n\n  function isAllowedToResolveMarket(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isIERC20TokenSocial(IERC20 marketToken) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active;\n  }\n\n  function isLandAdmin(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.admins[user];\n  }\n}\n",
  "sourcePath": "/Users/andregoncalves/sideprojects/polkamarkets/polkamarkets-js/contracts/PredictionMarketV3Controller.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarketV3Controller.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Context": [
        2389
      ],
      "ERC165": [
        2588
      ],
      "ERC20": [
        1400
      ],
      "ERC20Burnable": [
        1522
      ],
      "ERC20Pausable": [
        1559
      ],
      "ERC20PresetMinterPauser": [
        1756
      ],
      "EnumerableSet": [
        4078
      ],
      "FantasyERC20": [
        4229
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "IERC165": [
        2600
      ],
      "IERC20": [
        1478
      ],
      "IERC20Metadata": [
        1584
      ],
      "IPredictionMarketV3Factory": [
        4275
      ],
      "IRealityETH_ERC20": [
        4878
      ],
      "IRealityETH_IERC20": [
        10975
      ],
      "Math": [
        3465
      ],
      "Ownable": [
        651
      ],
      "Pausable": [
        759
      ],
      "PredictionMarketV3Controller": [
        10297
      ],
      "RealityETH_ERC20_Factory": [
        11114
      ],
      "ReentrancyGuard": [
        813
      ],
      "Strings": [
        2564
      ]
    },
    "id": 10298,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9640,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:28"
      },
      {
        "absolutePath": "project:/contracts/FantasyERC20.sol",
        "file": "./FantasyERC20.sol",
        "id": 9641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10298,
        "sourceUnit": 4230,
        "src": "58:28:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RealityETH_ERC20_Factory.sol",
        "file": "./RealityETH_ERC20_Factory.sol",
        "id": 9642,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10298,
        "sourceUnit": 11115,
        "src": "87:40:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IPredictionMarketV3Factory.sol",
        "file": "./IPredictionMarketV3Factory.sol",
        "id": 9643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10298,
        "sourceUnit": 4276,
        "src": "128:42:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9644,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10298,
        "sourceUnit": 652,
        "src": "212:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 9645,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10298,
        "sourceUnit": 814,
        "src": "265:62:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9646,
              "name": "Ownable",
              "nameLocations": [
                "370:7:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "370:7:28"
            },
            "id": 9647,
            "nodeType": "InheritanceSpecifier",
            "src": "370:7:28"
          },
          {
            "baseName": {
              "id": 9648,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "379:15:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 813,
              "src": "379:15:28"
            },
            "id": 9649,
            "nodeType": "InheritanceSpecifier",
            "src": "379:15:28"
          }
        ],
        "canonicalName": "PredictionMarketV3Controller",
        "contractDependencies": [
          4229,
          11114
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10297,
        "linearizedBaseContracts": [
          10297,
          813,
          651,
          2389
        ],
        "name": "PredictionMarketV3Controller",
        "nameLocation": "338:28:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1cbe8a65",
            "id": 9651,
            "mutability": "immutable",
            "name": "PMV3",
            "nameLocation": "424:4:28",
            "nodeType": "VariableDeclaration",
            "scope": 10297,
            "src": "399:29:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9650,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c27c26c",
            "id": 9653,
            "mutability": "immutable",
            "name": "PMV3Factory",
            "nameLocation": "488:11:28",
            "nodeType": "VariableDeclaration",
            "scope": 10297,
            "src": "463:36:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9652,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e3dd8ba",
            "id": 9656,
            "mutability": "immutable",
            "name": "realitioFactory",
            "nameLocation": "582:15:28",
            "nodeType": "VariableDeclaration",
            "scope": 10297,
            "src": "540:57:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
              "typeString": "contract RealityETH_ERC20_Factory"
            },
            "typeName": {
              "id": 9655,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9654,
                "name": "RealityETH_ERC20_Factory",
                "nameLocations": [
                  "540:24:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11114,
                "src": "540:24:28"
              },
              "referencedDeclaration": 11114,
              "src": "540:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                "typeString": "contract RealityETH_ERC20_Factory"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03",
            "id": 9664,
            "name": "LandCreated",
            "nameLocation": "608:11:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9658,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "636:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9664,
                  "src": "620:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9660,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "658:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9664,
                  "src": "642:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9662,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "681:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9664,
                  "src": "665:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "619:76:28"
            },
            "src": "602:94:28"
          },
          {
            "anonymous": false,
            "eventSelector": "8b1af787b59d993bb7ca4128144173ff8fdc3a5ed54c5d17627d299e867c9fc4",
            "id": 9670,
            "name": "LandDisabled",
            "nameLocation": "706:12:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9666,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "735:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9670,
                  "src": "719:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9668,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "757:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9670,
                  "src": "741:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:45:28"
            },
            "src": "700:64:28"
          },
          {
            "anonymous": false,
            "eventSelector": "db2921f4928b1643f888d38d16ccb474a5e7588484d29c41af2f2b3f1172f650",
            "id": 9676,
            "name": "LandEnabled",
            "nameLocation": "774:11:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9672,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "802:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9676,
                  "src": "786:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9674,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "824:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9676,
                  "src": "808:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:45:28"
            },
            "src": "768:63:28"
          },
          {
            "anonymous": false,
            "eventSelector": "d4f6618e5a71236611ad6e76f5eb1b23884c77efbb410f3beedada00549181b3",
            "id": 9682,
            "name": "LandOffsetUnlocked",
            "nameLocation": "841:18:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9678,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "876:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9682,
                  "src": "860:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9680,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "898:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9682,
                  "src": "882:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:45:28"
            },
            "src": "835:70:28"
          },
          {
            "anonymous": false,
            "eventSelector": "b8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68",
            "id": 9690,
            "name": "LandAdminAdded",
            "nameLocation": "915:14:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "946:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9690,
                  "src": "930:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "968:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9690,
                  "src": "952:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9688,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "991:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9690,
                  "src": "975:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "929:68:28"
            },
            "src": "909:89:28"
          },
          {
            "anonymous": false,
            "eventSelector": "5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560",
            "id": 9698,
            "name": "LandAdminRemoved",
            "nameLocation": "1008:16:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9692,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1041:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9698,
                  "src": "1025:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9694,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1063:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9698,
                  "src": "1047:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9696,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1086:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9698,
                  "src": "1070:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1024:68:28"
            },
            "src": "1002:91:28"
          },
          {
            "canonicalName": "PredictionMarketV3Controller.Land",
            "id": 9713,
            "members": [
              {
                "constant": false,
                "id": 9701,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1128:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 9713,
                "src": "1115:18:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                  "typeString": "contract FantasyERC20"
                },
                "typeName": {
                  "id": 9700,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9699,
                    "name": "FantasyERC20",
                    "nameLocations": [
                      "1115:12:28"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4229,
                    "src": "1115:12:28"
                  },
                  "referencedDeclaration": 4229,
                  "src": "1115:12:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9703,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1144:6:28",
                "nodeType": "VariableDeclaration",
                "scope": 9713,
                "src": "1139:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9702,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1139:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9707,
                "mutability": "mutable",
                "name": "admins",
                "nameLocation": "1181:6:28",
                "nodeType": "VariableDeclaration",
                "scope": 9713,
                "src": "1156:31:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 9706,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 9704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1156:24:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 9705,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9709,
                "mutability": "mutable",
                "name": "everyoneCanCreateMarkets",
                "nameLocation": "1198:24:28",
                "nodeType": "VariableDeclaration",
                "scope": 9713,
                "src": "1193:29:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9708,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9712,
                "mutability": "mutable",
                "name": "realitio",
                "nameLocation": "1247:8:28",
                "nodeType": "VariableDeclaration",
                "scope": 9713,
                "src": "1228:27:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10975",
                  "typeString": "contract IRealityETH_IERC20"
                },
                "typeName": {
                  "id": 9711,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9710,
                    "name": "IRealityETH_IERC20",
                    "nameLocations": [
                      "1228:18:28"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10975,
                    "src": "1228:18:28"
                  },
                  "referencedDeclaration": 10975,
                  "src": "1228:18:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10975",
                    "typeString": "contract IRealityETH_IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Land",
            "nameLocation": "1104:4:28",
            "nodeType": "StructDefinition",
            "scope": 10297,
            "src": "1097:163:28",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33b22760",
            "id": 9718,
            "mutability": "mutable",
            "name": "lands",
            "nameLocation": "1296:5:28",
            "nodeType": "VariableDeclaration",
            "scope": 10297,
            "src": "1264:37:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
              "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
            },
            "typeName": {
              "id": 9717,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9714,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1272:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1264:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                "typeString": "mapping(address => struct PredictionMarketV3Controller.Land)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9716,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9715,
                  "name": "Land",
                  "nameLocations": [
                    "1283:4:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9713,
                  "src": "1283:4:28"
                },
                "referencedDeclaration": 9713,
                "src": "1283:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                  "typeString": "struct PredictionMarketV3Controller.Land"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "30ccd17a",
            "id": 9721,
            "mutability": "mutable",
            "name": "landTokens",
            "nameLocation": "1322:10:28",
            "nodeType": "VariableDeclaration",
            "scope": 10297,
            "src": "1305:27:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9719,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1305:7:28",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9720,
              "nodeType": "ArrayTypeName",
              "src": "1305:9:28",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1311758b",
            "id": 9723,
            "mutability": "mutable",
            "name": "landTokensLength",
            "nameLocation": "1351:16:28",
            "nodeType": "VariableDeclaration",
            "scope": 10297,
            "src": "1336:31:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9722,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9758,
              "nodeType": "Block",
              "src": "1470:217:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9733,
                          "name": "_PMV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9729,
                          "src": "1484:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1508:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1500:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9734,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1500:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1500:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1484:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "504d5633466163746f727920616464726573732063616e6e6f7420626520302061646472657373",
                        "id": 9739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:41:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        },
                        "value": "PMV3Factory address cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87e8403c3361bbdf220853e336d6ffd9ae408ac002ed64bb8df5cd8f11d39832",
                          "typeString": "literal_string \"PMV3Factory address cannot be 0 address\""
                        }
                      ],
                      "id": 9732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1476:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:78:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9741,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:78:28"
                },
                {
                  "expression": {
                    "id": 9744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9742,
                      "name": "PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9651,
                      "src": "1561:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9743,
                      "name": "_PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9725,
                      "src": "1568:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1561:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9745,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:12:28"
                },
                {
                  "expression": {
                    "id": 9752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9746,
                      "name": "realitioFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9656,
                      "src": "1579:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9750,
                          "name": "_realitioLibraryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9727,
                          "src": "1626:23:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1597:28:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_RealityETH_ERC20_Factory_$11114_$",
                          "typeString": "function (address) returns (contract RealityETH_ERC20_Factory)"
                        },
                        "typeName": {
                          "id": 9748,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9747,
                            "name": "RealityETH_ERC20_Factory",
                            "nameLocations": [
                              "1601:24:28"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11114,
                            "src": "1601:24:28"
                          },
                          "referencedDeclaration": 11114,
                          "src": "1601:24:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        }
                      },
                      "id": 9751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1597:53:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "src": "1579:71:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                      "typeString": "contract RealityETH_ERC20_Factory"
                    }
                  },
                  "id": 9753,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:71:28"
                },
                {
                  "expression": {
                    "id": 9756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9754,
                      "name": "PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9653,
                      "src": "1656:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9755,
                      "name": "_PMV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9729,
                      "src": "1670:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1656:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9757,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:26:28"
                }
              ]
            },
            "id": 9759,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9725,
                  "mutability": "mutable",
                  "name": "_PMV3",
                  "nameLocation": "1397:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9759,
                  "src": "1389:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9727,
                  "mutability": "mutable",
                  "name": "_realitioLibraryAddress",
                  "nameLocation": "1416:23:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9759,
                  "src": "1408:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9729,
                  "mutability": "mutable",
                  "name": "_PMV3Factory",
                  "nameLocation": "1453:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9759,
                  "src": "1445:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1383:86:28"
            },
            "returnParameters": {
              "id": 9731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:28"
            },
            "scope": 10297,
            "src": "1372:315:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9946,
              "nodeType": "Block",
              "src": "2120:1377:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9779,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9768,
                              "src": "2143:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2135:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9777,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2135:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:22:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2169:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2161:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9781,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2161:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2161:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2135:36:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472657373",
                        "id": 9786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2173:37:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        },
                        "value": "Token to answer cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        }
                      ],
                      "id": 9776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2127:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:84:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9788,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:84:28"
                },
                {
                  "assignments": [
                    9791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9791,
                      "mutability": "mutable",
                      "name": "predictionMarketFactory",
                      "nameLocation": "2245:23:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 9946,
                      "src": "2218:50:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4275",
                        "typeString": "contract IPredictionMarketV3Factory"
                      },
                      "typeName": {
                        "id": 9790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9789,
                          "name": "IPredictionMarketV3Factory",
                          "nameLocations": [
                            "2218:26:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4275,
                          "src": "2218:26:28"
                        },
                        "referencedDeclaration": 4275,
                        "src": "2218:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4275",
                          "typeString": "contract IPredictionMarketV3Factory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9795,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9793,
                        "name": "PMV3Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9653,
                        "src": "2298:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9792,
                      "name": "IPredictionMarketV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4275,
                      "src": "2271:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPredictionMarketV3Factory_$4275_$",
                        "typeString": "type(contract IPredictionMarketV3Factory)"
                      }
                    },
                    "id": 9794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4275",
                      "typeString": "contract IPredictionMarketV3Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2218:92:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9801,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2405:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10297",
                                  "typeString": "contract PredictionMarketV3Controller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PredictionMarketV3Controller_$10297",
                                  "typeString": "contract PredictionMarketV3Controller"
                                }
                              ],
                              "id": 9800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2397:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9799,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2397:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2397:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 9803,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2412:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2416:6:28",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2412:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9797,
                            "name": "predictionMarketFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9791,
                            "src": "2353:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPredictionMarketV3Factory_$4275",
                              "typeString": "contract IPredictionMarketV3Factory"
                            }
                          },
                          "id": 9798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2377:19:28",
                          "memberName": "isPMControllerAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4274,
                          "src": "2353:43:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 9805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2353:70:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2345:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:79:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9807,
                  "nodeType": "ExpressionStatement",
                  "src": "2345:79:28"
                },
                {
                  "assignments": [
                    9810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9810,
                      "mutability": "mutable",
                      "name": "landToken",
                      "nameLocation": "2483:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 9946,
                      "src": "2470:22:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      },
                      "typeName": {
                        "id": 9809,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9808,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2470:12:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2470:12:28"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2470:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9822,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9814,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9761,
                        "src": "2512:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9815,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9763,
                        "src": "2518:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9816,
                        "name": "tokenAmountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9765,
                        "src": "2526:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9819,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9651,
                            "src": "2554:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2546:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2546:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2546:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2495:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_FantasyERC20_$4229_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract FantasyERC20)"
                      },
                      "typeName": {
                        "id": 9812,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9811,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2499:12:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2499:12:28"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2499:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      }
                    },
                    "id": 9821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2495:65:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2470:90:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2651:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9826,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2641:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2641:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9831,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9651,
                            "src": "2675:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2667:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9829,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2667:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2667:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9823,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9810,
                        "src": "2621:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2631:9:28",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2621:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2621:60:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9834,
                  "nodeType": "ExpressionStatement",
                  "src": "2621:60:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2768:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9838,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2758:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2758:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 9841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2784:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2788:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2784:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9835,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9810,
                        "src": "2738:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2748:9:28",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2738:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9844,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:57:28"
                },
                {
                  "assignments": [
                    9847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9847,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "2858:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 9946,
                      "src": "2845:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9846,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9845,
                          "name": "Land",
                          "nameLocations": [
                            "2845:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "2845:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "2845:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9854,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9848,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "2865:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9853,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9851,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9810,
                          "src": "2879:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        ],
                        "id": 9850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2871:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9849,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2871:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2865:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2845:45:28"
                },
                {
                  "expression": {
                    "id": 9859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9855,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9847,
                        "src": "2896:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9857,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2901:5:28",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9701,
                      "src": "2896:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9858,
                      "name": "landToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9810,
                      "src": "2909:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "src": "2896:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "id": 9860,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:22:28"
                },
                {
                  "expression": {
                    "id": 9865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9861,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9847,
                        "src": "2924:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9863,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2929:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9703,
                      "src": "2924:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2938:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2924:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9866,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:18:28"
                },
                {
                  "expression": {
                    "id": 9874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 9867,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9847,
                          "src": "2948:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 9871,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2953:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9707,
                        "src": "2948:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9872,
                      "indexExpression": {
                        "expression": {
                          "id": 9869,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2960:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2964:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2960:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2948:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2974:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2948:30:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9875,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:30:28"
                },
                {
                  "expression": {
                    "id": 9880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9876,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9847,
                        "src": "2984:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9878,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2989:24:28",
                      "memberName": "everyoneCanCreateMarkets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9709,
                      "src": "2984:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9879,
                      "name": "everyoneCanCreateMarkets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9770,
                      "src": "3016:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2984:56:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9881,
                  "nodeType": "ExpressionStatement",
                  "src": "2984:56:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9887,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9810,
                            "src": "3070:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3062:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9885,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3062:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3062:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9882,
                        "name": "landTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9721,
                        "src": "3046:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3057:4:28",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3046:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 9889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3046:35:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9890,
                  "nodeType": "ExpressionStatement",
                  "src": "3046:35:28"
                },
                {
                  "expression": {
                    "id": 9892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3087:18:28",
                    "subExpression": {
                      "id": 9891,
                      "name": "landTokensLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9723,
                      "src": "3087:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9893,
                  "nodeType": "ExpressionStatement",
                  "src": "3087:18:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9898,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9768,
                              "src": "3198:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3190:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9896,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3190:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3190:22:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 9894,
                          "name": "realitioFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9656,
                          "src": "3162:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        },
                        "id": 9895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3178:11:28",
                        "memberName": "deployments",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10981,
                        "src": "3162:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) view external returns (address)"
                        }
                      },
                      "id": 9900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3162:51:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3225:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3217:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9901,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3217:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3217:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3162:65:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9916,
                  "nodeType": "IfStatement",
                  "src": "3158:140:28",
                  "trueBody": {
                    "id": 9915,
                    "nodeType": "Block",
                    "src": "3229:69:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9911,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9768,
                                  "src": "3276:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3268:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9909,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3268:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3268:22:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9906,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9656,
                              "src": "3237:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3253:14:28",
                            "memberName": "createInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11113,
                            "src": "3237:30:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 9913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3237:54:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9914,
                        "nodeType": "ExpressionStatement",
                        "src": "3237:54:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9917,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9847,
                        "src": "3303:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9919,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3308:8:28",
                      "memberName": "realitio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9712,
                      "src": "3303:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10975",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9925,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9768,
                                  "src": "3374:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3366:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9923,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3366:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3366:22:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9921,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9656,
                              "src": "3338:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$11114",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3354:11:28",
                            "memberName": "deployments",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10981,
                            "src": "3338:27:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 9927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3338:51:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9920,
                        "name": "IRealityETH_IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10975,
                        "src": "3319:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRealityETH_IERC20_$10975_$",
                          "typeString": "type(contract IRealityETH_IERC20)"
                        }
                      },
                      "id": 9928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3319:71:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10975",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "src": "3303:87:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10975",
                      "typeString": "contract IRealityETH_IERC20"
                    }
                  },
                  "id": 9930,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:87:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3414:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3418:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3414:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9936,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9810,
                            "src": "3434:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3426:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9934,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3426:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9940,
                            "name": "tokenToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9768,
                            "src": "3454:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3446:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9938,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3446:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3446:22:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9931,
                      "name": "LandCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9664,
                      "src": "3402:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 9942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3402:67:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9943,
                  "nodeType": "EmitStatement",
                  "src": "3397:72:28"
                },
                {
                  "expression": {
                    "id": 9944,
                    "name": "landToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9810,
                    "src": "3483:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "functionReturnParameters": 9775,
                  "id": 9945,
                  "nodeType": "Return",
                  "src": "3476:16:28"
                }
              ]
            },
            "functionSelector": "1b4d534e",
            "id": 9947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLand",
            "nameLocation": "1930:10:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9761,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1960:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9947,
                  "src": "1946:18:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9763,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1984:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9947,
                  "src": "1970:20:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9762,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9765,
                  "mutability": "mutable",
                  "name": "tokenAmountToClaim",
                  "nameLocation": "2004:18:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9947,
                  "src": "1996:26:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9768,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "2035:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9947,
                  "src": "2028:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9767,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9766,
                      "name": "IERC20",
                      "nameLocations": [
                        "2028:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "2028:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "2028:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9770,
                  "mutability": "mutable",
                  "name": "everyoneCanCreateMarkets",
                  "nameLocation": "2059:24:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9947,
                  "src": "2054:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9769,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1940:147:28"
            },
            "returnParameters": {
              "id": 9775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9947,
                  "src": "2106:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  },
                  "typeName": {
                    "id": 9773,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9772,
                      "name": "FantasyERC20",
                      "nameLocations": [
                        "2106:12:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4229,
                      "src": "2106:12:28"
                    },
                    "referencedDeclaration": 4229,
                    "src": "2106:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2105:14:28"
            },
            "scope": 10297,
            "src": "1921:1576:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10002,
              "nodeType": "Block",
              "src": "3549:342:28",
              "statements": [
                {
                  "assignments": [
                    9955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9955,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3568:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10002,
                      "src": "3555:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 9954,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9953,
                          "name": "Land",
                          "nameLocations": [
                            "3555:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "3555:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "3555:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9962,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9956,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "3575:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 9961,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9959,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9950,
                          "src": "3589:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 9958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3581:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9957,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3581:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3581:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3575:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3555:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9964,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9955,
                          "src": "3615:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 9965,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3620:6:28",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9703,
                        "src": "3615:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "id": 9966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3628:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        },
                        "value": "Land is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        }
                      ],
                      "id": 9963,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3607:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3607:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9968,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:42:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 9970,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9955,
                            "src": "3663:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 9971,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3668:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9707,
                          "src": "3663:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 9974,
                        "indexExpression": {
                          "expression": {
                            "id": 9972,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3675:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3679:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3675:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3663:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 9975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3688:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 9969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3655:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9977,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:57:28"
                },
                {
                  "expression": {
                    "id": 9982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9978,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9955,
                        "src": "3743:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 9980,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3748:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9703,
                      "src": "3743:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 9981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3757:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3743:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9983,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:19:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9987,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9950,
                                "src": "3811:9:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 9986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3803:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9985,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3803:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3803:18:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9984,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "3790:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 9989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:32:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3823:5:28",
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "3790:38:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9992,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:40:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9994,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3855:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3859:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3855:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9998,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9950,
                            "src": "3875:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3867:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9996,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3867:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3867:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9993,
                      "name": "LandDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9670,
                      "src": "3842:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3842:44:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10001,
                  "nodeType": "EmitStatement",
                  "src": "3837:49:28"
                }
              ]
            },
            "functionSelector": "70e92078",
            "id": 10003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableLand",
            "nameLocation": "3510:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9950,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3529:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10003,
                  "src": "3522:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9949,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9948,
                      "name": "IERC20",
                      "nameLocations": [
                        "3522:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3522:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3522:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:18:28"
            },
            "returnParameters": {
              "id": 9952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3549:0:28"
            },
            "scope": 10297,
            "src": "3501:390:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10059,
              "nodeType": "Block",
              "src": "3942:348:28",
              "statements": [
                {
                  "assignments": [
                    10011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10011,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3961:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10059,
                      "src": "3948:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10010,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10009,
                          "name": "Land",
                          "nameLocations": [
                            "3948:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "3948:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "3948:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10018,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10012,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "3968:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10017,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10015,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10006,
                          "src": "3982:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3974:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10013,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3974:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3974:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3968:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3948:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4008:12:28",
                        "subExpression": {
                          "expression": {
                            "id": 10020,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10011,
                            "src": "4009:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4014:6:28",
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9703,
                          "src": "4009:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "id": 10023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4022:24:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        },
                        "value": "Land is already active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        }
                      ],
                      "id": 10019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4000:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:47:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10025,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:47:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10027,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10011,
                            "src": "4061:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10028,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4066:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9707,
                          "src": "4061:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10031,
                        "indexExpression": {
                          "expression": {
                            "id": 10029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4073:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4077:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4073:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4061:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4086:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4053:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4053:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10034,
                  "nodeType": "ExpressionStatement",
                  "src": "4053:57:28"
                },
                {
                  "expression": {
                    "id": 10039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10035,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10011,
                        "src": "4140:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10037,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4145:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9703,
                      "src": "4140:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4154:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4140:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10040,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:18:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10044,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10006,
                                "src": "4209:9:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4201:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10042,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4201:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4201:18:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10041,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "4188:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4188:32:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4221:7:28",
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "4188:40:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4188:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10049,
                  "nodeType": "ExpressionStatement",
                  "src": "4188:42:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10051,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4254:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4258:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4254:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10055,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10006,
                            "src": "4274:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4266:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10053,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4266:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4266:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10050,
                      "name": "LandEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9676,
                      "src": "4242:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4242:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10058,
                  "nodeType": "EmitStatement",
                  "src": "4237:48:28"
                }
              ]
            },
            "functionSelector": "5d341ae5",
            "id": 10060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableLand",
            "nameLocation": "3904:10:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10006,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3922:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10060,
                  "src": "3915:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10005,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10004,
                      "name": "IERC20",
                      "nameLocations": [
                        "3915:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3915:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3915:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3914:18:28"
            },
            "returnParameters": {
              "id": 10008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3942:0:28"
            },
            "scope": 10297,
            "src": "3895:395:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10122,
              "nodeType": "Block",
              "src": "4360:372:28",
              "statements": [
                {
                  "assignments": [
                    10070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10070,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4379:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10122,
                      "src": "4366:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10069,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10068,
                          "name": "Land",
                          "nameLocations": [
                            "4366:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "4366:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "4366:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10077,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10071,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "4386:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10076,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10074,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10063,
                          "src": "4400:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4392:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4392:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4392:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4386:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4366:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10079,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10070,
                          "src": "4426:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4431:6:28",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9703,
                        "src": "4426:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4439:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10078,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4418:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4418:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10083,
                  "nodeType": "ExpressionStatement",
                  "src": "4418:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10085,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10070,
                            "src": "4475:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10086,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4480:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9707,
                          "src": "4475:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10089,
                        "indexExpression": {
                          "expression": {
                            "id": 10087,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4487:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4491:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4487:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4475:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4500:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4467:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10092,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:57:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4608:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10098,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "4598:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4598:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10101,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10065,
                        "src": "4624:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10093,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10070,
                          "src": "4577:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4582:5:28",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9701,
                        "src": "4577:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4588:9:28",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "4577:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4577:53:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10103,
                  "nodeType": "ExpressionStatement",
                  "src": "4577:53:28"
                },
                {
                  "expression": {
                    "id": 10110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10104,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10070,
                          "src": "4637:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10107,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4642:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9707,
                        "src": "4637:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10108,
                      "indexExpression": {
                        "id": 10106,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10065,
                        "src": "4649:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4637:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4658:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4637:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10111,
                  "nodeType": "ExpressionStatement",
                  "src": "4637:25:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4689:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4693:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4689:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10117,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10063,
                            "src": "4709:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4701:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4701:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4701:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10119,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10065,
                        "src": "4721:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10112,
                      "name": "LandAdminAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9690,
                      "src": "4674:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4674:53:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10121,
                  "nodeType": "EmitStatement",
                  "src": "4669:58:28"
                }
              ]
            },
            "functionSelector": "4fe62a5b",
            "id": 10123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAdminToLand",
            "nameLocation": "4303:14:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10063,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4325:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10123,
                  "src": "4318:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10062,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10061,
                      "name": "IERC20",
                      "nameLocations": [
                        "4318:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4318:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4318:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10065,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4344:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10123,
                  "src": "4336:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4336:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4317:33:28"
            },
            "returnParameters": {
              "id": 10067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4360:0:28"
            },
            "scope": 10297,
            "src": "4294:438:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10185,
              "nodeType": "Block",
              "src": "4807:380:28",
              "statements": [
                {
                  "assignments": [
                    10133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10133,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4826:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10185,
                      "src": "4813:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10132,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10131,
                          "name": "Land",
                          "nameLocations": [
                            "4813:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "4813:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "4813:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10140,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10134,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "4833:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10139,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10137,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10126,
                          "src": "4847:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4839:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4839:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4839:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4833:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10142,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10133,
                          "src": "4873:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4878:6:28",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9703,
                        "src": "4873:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4886:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4865:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4865:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10146,
                  "nodeType": "ExpressionStatement",
                  "src": "4865:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10148,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10133,
                            "src": "4922:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                              "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                            }
                          },
                          "id": 10149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4927:6:28",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9707,
                          "src": "4922:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10152,
                        "indexExpression": {
                          "expression": {
                            "id": 10150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4934:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4938:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4934:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4922:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4947:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4914:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4914:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10155,
                  "nodeType": "ExpressionStatement",
                  "src": "4914:57:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5060:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10161,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "5050:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5050:24:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10164,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10128,
                        "src": "5076:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10156,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10133,
                          "src": "5028:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5033:5:28",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9701,
                        "src": "5028:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5039:10:28",
                      "memberName": "revokeRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "5028:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:54:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10166,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:54:28"
                },
                {
                  "expression": {
                    "id": 10173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10167,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10133,
                          "src": "5089:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10170,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5094:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9707,
                        "src": "5089:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10171,
                      "indexExpression": {
                        "id": 10169,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10128,
                        "src": "5101:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5089:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5110:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5089:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10174,
                  "nodeType": "ExpressionStatement",
                  "src": "5089:26:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5144:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5148:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5144:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10180,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10126,
                            "src": "5164:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5156:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10178,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5156:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5156:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10182,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10128,
                        "src": "5176:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10175,
                      "name": "LandAdminRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9698,
                      "src": "5127:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5127:55:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10184,
                  "nodeType": "EmitStatement",
                  "src": "5122:60:28"
                }
              ]
            },
            "functionSelector": "86b5c5b1",
            "id": 10186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdminFromLand",
            "nameLocation": "4745:19:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10126,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4772:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10186,
                  "src": "4765:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10125,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10124,
                      "name": "IERC20",
                      "nameLocations": [
                        "4765:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4765:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4765:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10128,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "4791:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10186,
                  "src": "4783:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4764:33:28"
            },
            "returnParameters": {
              "id": 10130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4807:0:28"
            },
            "scope": 10297,
            "src": "4736:451:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10218,
              "nodeType": "Block",
              "src": "5285:139:28",
              "statements": [
                {
                  "assignments": [
                    10198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10198,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5304:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10218,
                      "src": "5291:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10197,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10196,
                          "name": "Land",
                          "nameLocations": [
                            "5291:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "5291:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "5291:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10205,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10199,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "5311:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10204,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10202,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10189,
                          "src": "5325:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5317:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5317:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5317:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5311:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5291:47:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10206,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10198,
                        "src": "5352:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10207,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5357:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9703,
                      "src": "5352:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10208,
                              "name": "land",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10198,
                              "src": "5368:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                                "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                              }
                            },
                            "id": 10209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5373:24:28",
                            "memberName": "everyoneCanCreateMarkets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9709,
                            "src": "5368:29:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 10210,
                                "name": "land",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10198,
                                "src": "5401:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                                  "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                                }
                              },
                              "id": 10211,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5406:6:28",
                              "memberName": "admins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9707,
                              "src": "5401:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 10213,
                            "indexExpression": {
                              "id": 10212,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10191,
                              "src": "5413:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5401:17:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5368:50:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10215,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5367:52:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5352:67:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10195,
                  "id": 10217,
                  "nodeType": "Return",
                  "src": "5345:74:28"
                }
              ]
            },
            "functionSelector": "25c72059",
            "id": 10219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToCreateMarket",
            "nameLocation": "5200:23:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10189,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5231:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10219,
                  "src": "5224:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10188,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10187,
                      "name": "IERC20",
                      "nameLocations": [
                        "5224:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5224:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5224:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10191,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5252:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10219,
                  "src": "5244:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5244:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5223:34:28"
            },
            "returnParameters": {
              "id": 10195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10219,
                  "src": "5279:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10193,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5279:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5278:6:28"
            },
            "scope": 10297,
            "src": "5191:233:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10247,
              "nodeType": "Block",
              "src": "5525:104:28",
              "statements": [
                {
                  "assignments": [
                    10231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10231,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5544:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10247,
                      "src": "5531:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10230,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10229,
                          "name": "Land",
                          "nameLocations": [
                            "5531:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "5531:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "5531:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10238,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10232,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "5551:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10237,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10235,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10222,
                          "src": "5565:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5557:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5557:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5557:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5551:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5531:47:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10239,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10231,
                        "src": "5592:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5597:6:28",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9703,
                      "src": "5592:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 10241,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10231,
                          "src": "5607:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                            "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                          }
                        },
                        "id": 10242,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5612:6:28",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9707,
                        "src": "5607:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10244,
                      "indexExpression": {
                        "id": 10243,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10224,
                        "src": "5619:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5607:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5592:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10228,
                  "id": 10246,
                  "nodeType": "Return",
                  "src": "5585:39:28"
                }
              ]
            },
            "functionSelector": "d1aeb5c2",
            "id": 10248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToResolveMarket",
            "nameLocation": "5437:24:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10222,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5469:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "5462:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10221,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10220,
                      "name": "IERC20",
                      "nameLocations": [
                        "5462:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5462:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5462:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10224,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5490:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "5482:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5482:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5461:34:28"
            },
            "returnParameters": {
              "id": 10228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "5519:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10226,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5519:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5518:6:28"
            },
            "scope": 10297,
            "src": "5428:201:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10269,
              "nodeType": "Block",
              "src": "5711:83:28",
              "statements": [
                {
                  "assignments": [
                    10258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10258,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5730:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10269,
                      "src": "5717:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10257,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10256,
                          "name": "Land",
                          "nameLocations": [
                            "5717:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "5717:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "5717:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10265,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10259,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "5737:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10264,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10262,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10251,
                          "src": "5751:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5743:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5743:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5743:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5737:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5717:47:28"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 10266,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10258,
                      "src": "5778:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                      }
                    },
                    "id": 10267,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5783:6:28",
                    "memberName": "active",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9703,
                    "src": "5778:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10255,
                  "id": 10268,
                  "nodeType": "Return",
                  "src": "5771:18:28"
                }
              ]
            },
            "functionSelector": "d13acee1",
            "id": 10270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIERC20TokenSocial",
            "nameLocation": "5642:19:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10251,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5669:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10270,
                  "src": "5662:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10249,
                      "name": "IERC20",
                      "nameLocations": [
                        "5662:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5662:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5662:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5661:20:28"
            },
            "returnParameters": {
              "id": 10255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10270,
                  "src": "5705:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10253,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5705:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5704:6:28"
            },
            "scope": 10297,
            "src": "5633:161:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10295,
              "nodeType": "Block",
              "src": "5882:89:28",
              "statements": [
                {
                  "assignments": [
                    10282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10282,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5901:4:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10295,
                      "src": "5888:17:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                        "typeString": "struct PredictionMarketV3Controller.Land"
                      },
                      "typeName": {
                        "id": 10281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10280,
                          "name": "Land",
                          "nameLocations": [
                            "5888:4:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9713,
                          "src": "5888:4:28"
                        },
                        "referencedDeclaration": 9713,
                        "src": "5888:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10289,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10283,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9718,
                      "src": "5908:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9713_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Controller.Land storage ref)"
                      }
                    },
                    "id": 10288,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10286,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10273,
                          "src": "5922:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5914:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5914:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5914:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5908:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9713_storage",
                      "typeString": "struct PredictionMarketV3Controller.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5888:47:28"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 10290,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10282,
                        "src": "5949:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9713_storage_ptr",
                          "typeString": "struct PredictionMarketV3Controller.Land storage pointer"
                        }
                      },
                      "id": 10291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5954:6:28",
                      "memberName": "admins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9707,
                      "src": "5949:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 10293,
                    "indexExpression": {
                      "id": 10292,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10275,
                      "src": "5961:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5949:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10279,
                  "id": 10294,
                  "nodeType": "Return",
                  "src": "5942:24:28"
                }
              ]
            },
            "functionSelector": "791e0519",
            "id": 10296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLandAdmin",
            "nameLocation": "5807:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10273,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "5826:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10296,
                  "src": "5819:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10272,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10271,
                      "name": "IERC20",
                      "nameLocations": [
                        "5819:6:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5819:6:28"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5819:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10275,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5847:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10296,
                  "src": "5839:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5839:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5818:34:28"
            },
            "returnParameters": {
              "id": 10279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10296,
                  "src": "5876:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5875:6:28"
            },
            "scope": 10297,
            "src": "5798:173:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10298,
        "src": "329:5644:28",
        "usedErrors": []
      }
    ],
    "src": "32:5942:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2024-05-31T09:23:13.353Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}