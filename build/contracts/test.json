{
  "contractName": "test",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IRealityETH_ERC20.sol\":\"test\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/IRealityETH_ERC20.sol\":{\"keccak256\":\"0xa692a4be9fbf5f61ce4059bc96d23e5a26446a8f98e9c6d0737085e4601e2089\",\"urls\":[\"bzz-raw://4e2a41dcc53eb2eefb82b410587294d92e3804121d0d44fac3cbb40b263c3703\",\"dweb:/ipfs/QmWRq4RBicXmiKdvvY9HWmkJ5DvdhW6knHs1GbZUERa5yj\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// interface IRealityETH_ERC20 {\n//   function askQuestionERC20(\n//     uint256 template_id,\n//     string calldata question,\n//     address arbitrator,\n//     uint32 timeout,\n//     uint32 opening_ts,\n//     uint256 nonce,\n//     uint256 tokens\n//   ) external returns (bytes32);\n\n//   function claimMultipleAndWithdrawBalance(\n//     bytes32[] calldata question_ids,\n//     uint256[] calldata lengths,\n//     bytes32[] calldata hist_hashes,\n//     address[] calldata addrs,\n//     uint256[] calldata bonds,\n//     bytes32[] calldata answers\n//   ) external;\n\n//   function claimWinnings(\n//     bytes32 question_id,\n//     bytes32[] calldata history_hashes,\n//     address[] calldata addrs,\n//     uint256[] calldata bonds,\n//     bytes32[] calldata answers\n//   ) external;\n\n//   function notifyOfArbitrationRequest(\n//     bytes32 question_id,\n//     address requester,\n//     uint256 max_previous\n//   ) external;\n\n//   function submitAnswerERC20(\n//     bytes32 question_id,\n//     bytes32 answer,\n//     uint256 max_previous,\n//     uint256 tokens\n//   ) external;\n\n//   function questions(bytes32)\n//     external\n//     view\n//     returns (\n//       bytes32 content_hash,\n//       address arbitrator,\n//       uint32 opening_ts,\n//       uint32 timeout,\n//       uint32 finalize_ts,\n//       bool is_pending_arbitration,\n//       uint256 bounty,\n//       bytes32 best_answer,\n//       bytes32 history_hash,\n//       uint256 bond,\n//       uint256 min_bond\n//     );\n\n//   function resultFor(bytes32 question_id) external view returns (bytes32);\n// }\ninterface test {}\n",
  "sourcePath": "/Users/ricardomarques/dev/workspace/polkamarkets/bepro-js/contracts/IRealityETH_ERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/IRealityETH_ERC20.sol",
    "exportedSymbols": {
      "test": [
        6264
      ]
    },
    "id": 6265,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "test",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": true,
        "id": 6264,
        "linearizedBaseContracts": [
          6264
        ],
        "name": "test",
        "nameLocation": "1570:4:31",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6265,
        "src": "1560:17:31",
        "usedErrors": []
      }
    ],
    "src": "1560:18:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2024-01-09T04:10:28.955Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}