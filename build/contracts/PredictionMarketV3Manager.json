{
  "contractName": "PredictionMarketV3Manager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PMV3",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_realitioLibraryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenToAnswer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountLocked",
          "type": "uint256"
        }
      ],
      "name": "LandCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountUnlocked",
          "type": "uint256"
        }
      ],
      "name": "LandDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountLocked",
          "type": "uint256"
        }
      ],
      "name": "LandEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountUnlocked",
          "type": "uint256"
        }
      ],
      "name": "LandOffsetUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PMV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lands",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "lockAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lockUser",
          "type": "address"
        },
        {
          "internalType": "contract IRealityETH_IERC20",
          "name": "realitio",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realitioFactory",
      "outputs": [
        {
          "internalType": "contract RealityETH_ERC20_Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLockAmount",
          "type": "uint256"
        }
      ],
      "name": "updateLockAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountToClaim",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAnswer",
          "type": "address"
        }
      ],
      "name": "createLand",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "disableLand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "enableLand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "unlockOffsetFromLand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdminToLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdminFromLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToCreateMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToResolveMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        }
      ],
      "name": "isIERC20TokenSocial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isLandAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PMV3\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_realitioLibraryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenToAnswer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLocked\",\"type\":\"uint256\"}],\"name\":\"LandCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnlocked\",\"type\":\"uint256\"}],\"name\":\"LandDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLocked\",\"type\":\"uint256\"}],\"name\":\"LandEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnlocked\",\"type\":\"uint256\"}],\"name\":\"LandOffsetUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PMV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdminToLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountToClaim\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAnswer\",\"type\":\"address\"}],\"name\":\"createLand\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"disableLand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"enableLand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToCreateMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToResolveMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"}],\"name\":\"isIERC20TokenSocial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isLandAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lands\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lockAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lockUser\",\"type\":\"address\"},{\"internalType\":\"contract IRealityETH_IERC20\",\"name\":\"realitio\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realitioFactory\",\"outputs\":[{\"internalType\":\"contract RealityETH_ERC20_Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdminFromLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"unlockOffsetFromLand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLockAmount\",\"type\":\"uint256\"}],\"name\":\"updateLockAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarketV3Manager.sol\":\"PredictionMarketV3Manager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x6eabd0f1326073b2aaf4298cb3b15b7cfc96966586dbaca2f126409f4fd11688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b67ef6927ae0b5afd4faf7cf6bf6bce6ad0ebe3b07bd75ae24891ecd8ddf2c4\",\"dweb:/ipfs/QmfLFWECbFNfb9Vh1ftmj1E6KmHa8wJkpzaWgBvujo56Wp\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"project:/contracts/FantasyERC20.sol\":{\"keccak256\":\"0x5208602dbeaa239b13143c24e61abce91fb1dcb2e4c6627d462187ea7dee436d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8da09a6f9e6e0464d2e076559d2de192689f958f36c4711fd23be8c215498f90\",\"dweb:/ipfs/QmaxR3TpCfgr1UY2MiR7oagL27GgsTMzUFfQJtjswdQBQh\"]},\"project:/contracts/IRealityETH_ERC20.sol\":{\"keccak256\":\"0x829f84252e4c06a9563be80b9bd93d4eb875ac865629bc312c20c2fc48a27c67\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4486fd8f19077689309998e39f63e47a6c84ef819c708887460d24cb6748cc98\",\"dweb:/ipfs/QmcFNnjyJfbh885rV7YW3WZfP1xRwHmmoVfGyTZyjhhk7N\"]},\"project:/contracts/PredictionMarketV3Manager.sol\":{\"keccak256\":\"0x5e701b4ff52a38a0e65dcb8c5e264f2bdee017ec6e8c91a94380150da7a3c90f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://228050f27a149b303835b403411afe05282221ba656f01f08b2f2487da1d9510\",\"dweb:/ipfs/QmTptAbG14LszzQA7PK64RJoHGGmNtK4T4qhBBhQR58f5w\"]},\"project:/contracts/RealityETH_ERC20_Factory.sol\":{\"keccak256\":\"0xfa3c12a43c9d3bb54a90a050a33f8fc9b97cb1cc46c8f9d22a83d3d042131c61\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8e73d6c105df45f7d43fc8b5b86855d6c53ea4cef89ff848d986fbf53d0e2473\",\"dweb:/ipfs/QmSkFHJZX61HZmfw49j28R14u6sXshcPCKVQtwVwUmTx8m\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620044dd380380620044dd833981016040819052620000349162000127565b6200003f33620000b0565b600180556001600160a01b03808516608052831660a052600282905560405181906200006b9062000100565b6001600160a01b039091168152602001604051809103906000f08015801562000098573d6000803e3d6000fd5b506001600160a01b031660c052506200018392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109ef8062003aee83390190565b6001600160a01b03811681146200012457600080fd5b50565b600080600080608085870312156200013e57600080fd5b84516200014b816200010e565b60208601519094506200015e816200010e565b60408601516060870151919450925062000178816200010e565b939692955090935050565b60805160a05160c0516138f5620001f9600039600081816102f701528181610dd001528181610e6c0152610eea015260008181610403015281816106300152818161093f01528181610ab101528181610f9c015261114001526000818161017901528181610b760152610bfc01526138f56000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c80636e3dd8ba11620000c75780638da5cb5b11620000865780638da5cb5b1462000394578063d13acee114620003a6578063d1aeb5c214620001b4578063d8df5dc114620003dc578063f2fde38b14620003e6578063fc0c546a14620003fd57600080fd5b80636e3dd8ba14620002f157806370e920781462000319578063715018a61462000330578063791e0519146200033a57806386b5c5b1146200037d57600080fd5b80633c37db6311620001145780633c37db63146200027c5780633ccd414514620002955780634fe62a5b14620002ac5780635d341ae514620002c357806367d73c9114620002da57600080fd5b80631311758b14620001565780631cbe8a65146200017357806325c7205914620001b457806330ccd17a14620001dc57806333b2276014620001f3575b600080fd5b6200016060055481565b6040519081526020015b60405180910390f35b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016200016a565b620001cb620001c536600462001515565b62000425565b60405190151581526020016200016a565b6200019b620001ed36600462001553565b6200047a565b62000245620002043660046200156d565b600360208190526000918252604090912080546002820154928201546004909201546001600160a01b0380831694600160a01b90930460ff16938116911685565b604080516001600160a01b039687168152941515602086015284019290925283166060830152909116608082015260a0016200016a565b620002936200028d36600462001553565b620004a5565b005b62000160620002a63660046200156d565b62000568565b62000293620002bd36600462001515565b62000709565b62000160620002d43660046200156d565b6200084e565b6200019b620002eb3660046200163f565b62000a8d565b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b620001606200032a3660046200156d565b62001075565b620002936200126e565b620001cb6200034b36600462001515565b6001600160a01b0391821660009081526003602090815260408083209390941682526001909201909152205460ff1690565b620002936200038e36600462001515565b62001286565b6000546001600160a01b03166200019b565b620001cb620003b73660046200156d565b6001600160a01b0316600090815260036020526040902054600160a01b900460ff1690565b6200016060025481565b62000293620003f73660046200156d565b620013c6565b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03821660009081526003602052604081208054600160a01b900460ff1680156200047057506001600160a01b038316600090815260018201602052604090205460ff165b9150505b92915050565b600481815481106200048b57600080fd5b6000918252602090912001546001600160a01b0316905081565b620004af62001445565b60008111620005105760405162461bcd60e51b815260206004820152602260248201527f4c6f636b20616d6f756e74206d7573742062652067726561746572207468616e604482015261020360f41b60648201526084015b60405180910390fd5b6002548103620005635760405162461bcd60e51b815260206004820152601760248201527f4c6f636b20616d6f756e74206973207468652073616d65000000000000000000604482015260640162000507565b600255565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff16620005ab5760405162461bcd60e51b81526004016200050790620016c8565b33600090815260018201602052604090205460ff16620005df5760405162461bcd60e51b81526004016200050790620016f5565b6000600254826002015411620005f75760006200060b565b60025482600201546200060b91906200173a565b90508015620006c15760405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801562000682573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a8919062001750565b50808260020154620006bb91906200173a565b60028301555b6040518181526001600160a01b0385169033907f762d0a2a8e474a7f467752b8c7d24a08142b5a877a95ceb46dfbbda482ec46d7906020015b60405180910390a39392505050565b6001600160a01b03821660009081526003602052604090208054600160a01b900460ff166200074c5760405162461bcd60e51b81526004016200050790620016c8565b33600090815260018201602052604090205460ff16620007805760405162461bcd60e51b81526004016200050790620016f5565b8054604051632f2ff15d60e01b8152600080516020620038a083398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b158015620007dc57600080fd5b505af1158015620007f1573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff1615620008ba5760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b604482015260640162000507565b33600090815260018201602052604090205460ff16620008ee5760405162461bcd60e51b81526004016200050790620016f5565b6000816002015460025411620009065760006200091a565b81600201546002546200091a91906200173a565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801562000991573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b7919062001750565b50815460ff60a01b1916600160a01b1782556002820154620009db90829062001774565b60028301556003820180546001600160a01b0319163317905560408051631fa5d41d60e11b815290516001600160a01b03861691633f4ba83a91600480830192600092919082900301818387803b15801562000a3657600080fd5b505af115801562000a4b573d6000803e3d6000fd5b50506040518381526001600160a01b03871692503391507f9daf897774d766e38773bbeaf2f32d93fed4091373b77ebb7f5aee37417d1ab190602001620006fa565b6002546040516370a0823160e01b8152336004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801562000af9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1f91906200178a565b101562000b6f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320746f206c6f636b00000000000000604482015260640162000507565b60008585857f000000000000000000000000000000000000000000000000000000000000000060405162000ba390620014f1565b62000bb29493929190620017ec565b604051809103906000f08015801562000bcf573d6000803e3d6000fd5b50604051632f2ff15d60e01b8152600080516020620038a083398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b15801562000c4d57600080fd5b505af115801562000c62573d6000803e3d6000fd5b5050604051632f2ff15d60e01b8152600080516020620038a083398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b15801562000cbd57600080fd5b505af115801562000cd2573d6000803e3d6000fd5b5050506001600160a01b038216600081815260036020818152604080842080546001600160a81b0319168617600160a01b178155338086526001808301909452918520805460ff191684179055600280549082015592830180546001600160a01b0319908116909217905560048054928301815584527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9091018054909116909317909255600580549293509062000d8a8362001837565b90915550600090506001600160a01b0385161562000da9578462000dab565b825b60405163316b373960e01b81526001600160a01b0380831660048301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa15801562000e18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e3e919062001853565b6001600160a01b03160362000ecb57604051633b937bbb60e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b15801562000eb157600080fd5b505af115801562000ec6573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa15801562000f32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f58919062001853565b600483810180546001600160a01b0319166001600160a01b039384161790556002546040516323b872dd60e01b8152339281019290925230602483015260448201527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af115801562000fe8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200100e919062001750565b50846001600160a01b0316836001600160a01b0316336001600160a01b03167fba6e51248e93514eb089243e4d08f26db16ff133606694000e7124a41ee5deb46002546040516200106191815260200190565b60405180910390a450909695505050505050565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff16620010dc5760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b604482015260640162000507565b33600090815260018201602052604090205460ff16620011105760405162461bcd60e51b81526004016200050790620016f5565b6002810154600382015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156200118c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011b2919062001750565b50815460ff60a01b191682556000600283018190556003830180546001600160a01b031916905560408051638456cb5960e01b815290516001600160a01b03871692638456cb59926004808201939182900301818387803b1580156200121757600080fd5b505af11580156200122c573d6000803e3d6000fd5b50506040518381526001600160a01b03871692503391507f76f76e951d717cb73ae423c4e4a029c5dde6ef38673c8f6a20cb9eb5025de59590602001620006fa565b6200127862001445565b620012846000620014a1565b565b6001600160a01b03821660009081526003602052604090208054600160a01b900460ff16620012c95760405162461bcd60e51b81526004016200050790620016c8565b33600090815260018201602052604090205460ff16620012fd5760405162461bcd60e51b81526004016200050790620016f5565b805460405163d547741f60e01b8152600080516020620038a083398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b1580156200135957600080fd5b505af11580156200136e573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b620013d062001445565b6001600160a01b038116620014375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000507565b6200144281620014a1565b50565b6000546001600160a01b03163314620012845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000507565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61202c806200187483390190565b6001600160a01b03811681146200144257600080fd5b600080604083850312156200152957600080fd5b82356200153681620014ff565b915060208301356200154881620014ff565b809150509250929050565b6000602082840312156200156657600080fd5b5035919050565b6000602082840312156200158057600080fd5b81356200158d81620014ff565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620015bc57600080fd5b813567ffffffffffffffff80821115620015da57620015da62001594565b604051601f8301601f19908116603f0116810190828211818310171562001605576200160562001594565b816040528381528660208588010111156200161f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156200165657600080fd5b843567ffffffffffffffff808211156200166f57600080fd5b6200167d88838901620015aa565b955060208701359150808211156200169457600080fd5b50620016a387828801620015aa565b935050604085013591506060850135620016bd81620014ff565b939692955090935050565b60208082526013908201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111562000474576200047462001724565b6000602082840312156200176357600080fd5b815180151581146200158d57600080fd5b8082018082111562000474576200047462001724565b6000602082840312156200179d57600080fd5b5051919050565b6000815180845260005b81811015620017cc57602081850181015186830182015201620017ae565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000620018016080830187620017a4565b8281036020840152620018158187620017a4565b604084019590955250506001600160a01b039190911660609091015292915050565b6000600182016200184c576200184c62001724565b5060010190565b6000602082840312156200186657600080fd5b81516200158d81620014ff56fe60806040523480156200001157600080fd5b506040516200202c3803806200202c833981016040819052620000349162000321565b83838181600562000046838262000444565b50600662000055828262000444565b50506007805460ff19169055506200006f600033620000f7565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f7565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f7565b5050600a91909155600980546001600160a01b0319166001600160a01b0390921691909117905550620005109050565b62000103828262000107565b5050565b6200011e82826200014a60201b62000ac71760201c565b60008281526001602090815260409091206200014591839062000b4b620001ea821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000103576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000201836001600160a01b0384166200020a565b90505b92915050565b6000818152600183016020526040812054620002535750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000204565b50600062000204565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028457600080fd5b81516001600160401b0380821115620002a157620002a16200025c565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc6200025c565b81604052838152602092508683858801011115620002e957600080fd5b600091505b838210156200030d5785820183015181830184015290820190620002ee565b600093810190920192909252949350505050565b600080600080608085870312156200033857600080fd5b84516001600160401b03808211156200035057600080fd5b6200035e8883890162000272565b955060208701519150808211156200037557600080fd5b50620003848782880162000272565b60408701516060880151919550935090506001600160a01b0381168114620003ab57600080fd5b939692955090935050565b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014557600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b505050505050565b81516001600160401b038111156200046057620004606200025c565b6200047881620004718454620003b6565b84620003f2565b602080601f831160018114620004b05760008415620004975750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e157888601518255948401946001909101908401620004c0565b5085821015620005005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0c80620005206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461042b578063d53913931461043e578063d547741f14610465578063dd62ed3e14610478578063e63ab1e91461048b57600080fd5b8063a217fddf146103f5578063a457c2d7146103fd578063a9059cbb14610410578063adb1f0d81461042357600080fd5b806387bbfe0a116100e957806387bbfe0a1461039b5780639010d07c146103c757806391d14854146103da57806395d89b41146103ed57600080fd5b80635c975abb1461034c57806370a082311461035757806379cc6790146103805780638456cb591461039357600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e36600461177c565b6104b2565b60405190151581526020015b60405180910390f35b6102306104dd565b60405161021f91906117ca565b61021361024b366004611819565b61056f565b6004545b60405190815260200161021f565b610213610270366004611843565b610587565b61025461028336600461187f565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d1366004611898565b6105ab565b005b6040516012815260200161021f565b6102d66102f5366004611898565b6105d5565b610254600a5481565b610213610311366004611819565b610658565b6102d661067a565b6102d661032c366004611819565b610720565b6102d661033f36600461187f565b6107bf565b6102d66107cc565b60075460ff16610213565b6102546103653660046118c4565b6001600160a01b031660009081526002602052604090205490565b6102d661038e366004611819565b610869565b6102d661087e565b6102136103a93660046118c4565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d53660046118df565b610922565b6102136103e8366004611898565b610941565b61023061096a565b610254600081565b61021361040b366004611819565b610979565b61021361041e366004611819565b6109f4565b6102d6610a02565b61025461043936600461187f565b610a60565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d6610473366004611898565b610a77565b610254610486366004611901565b610a9c565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d757506104d782610b60565b92915050565b6060600580546104ec9061192b565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061192b565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d818585610b95565b5060019392505050565b600033610595858285610cb9565b6105a0858585610d33565b506001949350505050565b6000828152602081905260409020600101546105c681610dd9565b6105d08383610de3565b505050565b6001600160a01b038116331461064a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106548282610e05565b5050565b60003361057d81858561066b8383610a9c565b610675919061197b565b610b95565b6106a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b6107165760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610641565b61071e610e27565b565b61074a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610941565b6107b55760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610641565b6106548282610e79565b6107c93382610f46565b50565b3360009081526008602052604090205460ff16156107fc5760405162461bcd60e51b81526004016106419061198e565b61080833600a54610e79565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085f914290918252602082015260400190565b60405180910390a2565b610874823383610cb9565b6106548282610f46565b6108a87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610941565b61091a5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610641565b61071e611086565b600082815260016020526040812061093a90836110c3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104ec9061192b565b600033816109878286610a9c565b9050838110156109e75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610641565b6105a08286868403610b95565b60003361057d818585610d33565b3360009081526008602052604090205460ff1615610a325760405162461bcd60e51b81526004016106419061198e565b610a3a6107cc565b6009546107c9906001600160a01b03166fffffffffffffffffffffffffffffffff61056f565b60008181526001602052604081206104d7906110cf565b600082815260208190526040902060010154610a9281610dd9565b6105d08383610e05565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610ad18282610941565b610654576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093a836001600160a01b0384166110d9565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316146104d7565b6001600160a01b038316610bf75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610641565b6001600160a01b038216610c585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610641565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc58484610a9c565b90506000198114610d2d5781811015610d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610641565b610d2d8484848403610b95565b50505050565b6009546001600160a01b0384811691161480610d5c57506009546001600160a01b038381169116145b610dce5760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e207468652061646472657373657300006064820152608401610641565b6105d0838383611128565b6107c981336112de565b610ded8282610ac7565b60008281526001602052604090206105d09082610b4b565b610e0f8282611337565b60008281526001602052604090206105d0908261139c565b610e2f6113b1565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ecf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610641565b610edb600083836113fa565b8060046000828254610eed919061197b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610641565b610fb2826000836113fa565b6001600160a01b038216600090815260026020526040902054818110156110265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610641565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b61108e611405565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e5c3390565b600061093a838361144b565b60006104d7825490565b6000818152600183016020526040812054611120575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d7565b5060006104d7565b6001600160a01b03831661118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610641565b6001600160a01b0382166111ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610641565b6111f98383836113fa565b6001600160a01b038316600090815260026020526040902054818110156112715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610641565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d19086815260200190565b60405180910390a3610d2d565b6112e88282610941565b610654576112f581611475565b611300836020611487565b6040516020016113119291906119de565b60408051601f198184030181529082905262461bcd60e51b8252610641916004016117ca565b6113418282610941565b15610654576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093a836001600160a01b038416611623565b60075460ff1661071e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610641565b6105d0838383611716565b60075460ff161561071e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610641565b600082600001828154811061146257611462611a53565b9060005260206000200154905092915050565b60606104d76001600160a01b03831660145b60606000611496836002611a69565b6114a190600261197b565b67ffffffffffffffff8111156114b9576114b9611a80565b6040519080825280601f01601f1916602001820160405280156114e3576020820181803683370190505b509050600360fc1b816000815181106114fe576114fe611a53565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061152d5761152d611a53565b60200101906001600160f81b031916908160001a9053506000611551846002611a69565b61155c90600161197b565b90505b60018111156115d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159057611590611a53565b1a60f81b8282815181106115a6576115a6611a53565b60200101906001600160f81b031916908160001a90535060049490941c936115cd81611a96565b905061155f565b50831561093a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610641565b6000818152600183016020526040812054801561170c576000611647600183611aad565b855490915060009061165b90600190611aad565b90508181146116c057600086600001828154811061167b5761167b611a53565b906000526020600020015490508087600001848154811061169e5761169e611a53565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116d1576116d1611ac0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d7565b60009150506104d7565b60075460ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610641565b60006020828403121561178e57600080fd5b81356001600160e01b03198116811461093a57600080fd5b60005b838110156117c15781810151838201526020016117a9565b50506000910152565b60208152600082518060208401526117e98160408501602087016117a6565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461181457600080fd5b919050565b6000806040838503121561182c57600080fd5b611835836117fd565b946020939093013593505050565b60008060006060848603121561185857600080fd5b611861846117fd565b925061186f602085016117fd565b9150604084013590509250925092565b60006020828403121561189157600080fd5b5035919050565b600080604083850312156118ab57600080fd5b823591506118bb602084016117fd565b90509250929050565b6000602082840312156118d657600080fd5b61093a826117fd565b600080604083850312156118f257600080fd5b50508035926020909101359150565b6000806040838503121561191457600080fd5b61191d836117fd565b91506118bb602084016117fd565b600181811c9082168061193f57607f821691505b60208210810361195f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d7576104d7611965565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a168160178501602088016117a6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a478160288401602088016117a6565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d7576104d7611965565b634e487b7160e01b600052604160045260246000fd5b600081611aa557611aa5611965565b506000190190565b818103818111156104d7576104d7611965565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e167717c6f5d7d3fa2b17f9645cf6e8f6ed55a0fe6c77f7e675e3c1e7dc9af7564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a26469706673582212209e673389e4a0ae1b86cb44a9884a7e1a69cc2852098df1243180de443477988764736f6c63430008120033608060405234801561001057600080fd5b506040516109ef3803806109ef83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61095c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063316b3739146100465780637726f7761461008b578063b816f513146100a0575b600080fd5b61006f61005436600461077c565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461077c565b6100b3565b005b60005461006f906001600160a01b031681565b6001600160a01b0381811660009081526001602052604090205416156101455760405162461bcd60e51b815260206004820152603960248201527f54686572652073686f756c64206f6e6c79206265206f6e65206465706c6f796d60448201527f656e74207065722076657273696f6e2070657220746f6b656e00000000000000606482015260840160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906107ac565b90506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102139190810190610809565b600080549192509061022d906001600160a01b031661072a565b60405163144fa6d760e01b81526001600160a01b0386811660048301529192509082169063144fa6d790602401600060405180830381600087803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b50506040516383bf460960e01b815260206004820152603f60248201527f7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c2060448201527f2263617465676f7279223a20222573222c20226c616e67223a20222573227d0060648201526001600160a01b03841692506383bf460991506084016020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906108b6565b506040516383bf460960e01b815260206004820152604f60248201527f7b227469746c65223a20222573222c202274797065223a202275696e74222c2060448201527f22646563696d616c73223a2031382c202263617465676f7279223a202225732260648201526e2c20226c616e67223a20222573227d60881b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906108b6565b506040516383bf460960e01b815260206004820152605a60248201527f7b227469746c65223a20222573222c202274797065223a202273696e676c652d60448201527f73656c656374222c20226f7574636f6d6573223a205b25735d2c20226361746560648201527f676f7279223a20222573222c20226c616e67223a20222573227d00000000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906108b6565b506040516383bf460960e01b815260206004820152605c60248201527f7b227469746c65223a20222573222c202274797065223a20226d756c7469706c60448201527f652d73656c656374222c20226f7574636f6d6573223a205b25735d2c2022636160648201527f7465676f7279223a20222573222c20226c616e67223a20222573227d0000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb91906108b6565b506040516383bf460960e01b815260206004820152604360248201527f7b227469746c65223a20222573222c202274797065223a20226461746574696d60448201527f65222c202263617465676f7279223a20222573222c20226c616e67223a20222560648201526273227d60e81b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b691906108b6565b506001600160a01b038481166000908152600160205260409081902080546001600160a01b03191692841692909217909155517fbe87db3b58b5f4d26d54d6f8a09bbab3eefdc8879ac48f5e21ccff2a1f50b0729061071c9083908790879087906108cf565b60405180910390a150505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121561078e57600080fd5b81356001600160a01b03811681146107a557600080fd5b9392505050565b6000602082840312156107be57600080fd5b815160ff811681146107a557600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156108005781810151838201526020016107e8565b50506000910152565b60006020828403121561081b57600080fd5b815167ffffffffffffffff8082111561083357600080fd5b818401915084601f83011261084757600080fd5b815181811115610859576108596107cf565b604051601f8201601f19908116603f01168101908382118183101715610881576108816107cf565b8160405282815287602084870101111561089a57600080fd5b6108ab8360208301602088016107e5565b979650505050505050565b6000602082840312156108c857600080fd5b5051919050565b600060018060a01b03808716835280861660208401525060ff8416604083015260806060830152825180608084015261090f8160a08501602087016107e5565b601f01601f19169190910160a0019594505050505056fea26469706673582212200901921801295c1857ea1285857575b749b164c9a87fe108337110039b25924a64736f6c63430008120033",
  "deployedBytecode": "",
  "immutableReferences": {
    "9637": [
      {
        "length": 32,
        "start": 377
      },
      {
        "length": 32,
        "start": 2934
      },
      {
        "length": 32,
        "start": 3068
      }
    ],
    "9640": [
      {
        "length": 32,
        "start": 1027
      },
      {
        "length": 32,
        "start": 1584
      },
      {
        "length": 32,
        "start": 2367
      },
      {
        "length": 32,
        "start": 2737
      },
      {
        "length": 32,
        "start": 3996
      },
      {
        "length": 32,
        "start": 4416
      }
    ],
    "9645": [
      {
        "length": 32,
        "start": 759
      },
      {
        "length": 32,
        "start": 3536
      },
      {
        "length": 32,
        "start": 3692
      },
      {
        "length": 32,
        "start": 3818
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:956:29",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:29",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:29"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:29",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:29",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:29"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:29"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:29"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:29"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:29",
                "type": ""
              }
            ],
            "src": "14:131:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "297:449:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "353:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "346:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "346:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "346:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "318:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "327:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "314:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "314:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "339:3:29",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "310:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:33:29"
                  },
                  "nodeType": "YulIf",
                  "src": "307:53:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "369:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "388:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "382:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:16:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "373:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "432:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "407:24:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:31:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "407:31:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "447:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "457:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "447:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "471:40:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "496:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "507:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "486:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:25:29"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "475:7:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "545:7:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "520:24:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "520:33:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "562:17:29",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "572:7:29"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "588:35:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "619:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "598:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "598:25:29"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "588:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "632:40:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "657:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "668:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "653:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "653:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "647:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:25:29"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "636:7:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "706:7:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "681:24:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "681:33:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "723:17:29",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "733:7:29"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$1478t_uint256t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "239:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "250:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "262:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "270:6:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "278:6:29",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "286:6:29",
                "type": ""
              }
            ],
            "src": "150:596:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "852:102:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "862:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "874:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "885:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "870:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "870:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "862:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "904:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "919:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "935:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "940:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "931:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "931:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "944:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "927:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "927:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "915:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "915:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "897:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "897:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "897:51:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "821:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "832:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "843:4:29",
                "type": ""
              }
            ],
            "src": "751:203:29"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$1478t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        let value_2 := mload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11265:29",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:29",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:29"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:29",
                "type": ""
              }
            ],
            "src": "14:177:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "297:102:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "307:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "319:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "330:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "307:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "364:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "380:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "385:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "376:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "376:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "389:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "372:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "372:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "342:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "342:51:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "266:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "277:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "288:4:29",
                "type": ""
              }
            ],
            "src": "196:203:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "457:86:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "521:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "530:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "480:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "491:5:29"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:3:29",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "511:1:29",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "502:3:29"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "502:11:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "515:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "498:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "498:19:29"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "487:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "487:31:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "477:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "477:42:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "470:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:50:29"
                  },
                  "nodeType": "YulIf",
                  "src": "467:70:29"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "446:5:29",
                "type": ""
              }
            ],
            "src": "404:139:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "650:317:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "696:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "705:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "708:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "698:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "698:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "698:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "671:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "680:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "667:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "667:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "692:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "663:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "663:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "660:52:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "721:36:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "747:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "734:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:23:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "725:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "799:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "766:32:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:39:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:39:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "814:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "824:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "814:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "838:47:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "870:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "881:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "853:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "853:32:29"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "842:7:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "927:7:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "894:32:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:41:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "894:41:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "944:17:29",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "954:7:29"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "944:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "608:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "619:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "631:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "639:6:29",
                "type": ""
              }
            ],
            "src": "548:419:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:92:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1077:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1089:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1100:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1085:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1085:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1077:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1119:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1144:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1137:6:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1137:14:29"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1130:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:22:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1112:41:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1112:41:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1036:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1047:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1058:4:29",
                "type": ""
              }
            ],
            "src": "972:187:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1234:110:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1280:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1289:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1292:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1282:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1282:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1282:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1255:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1264:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1247:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1247:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1244:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1305:33:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1328:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1315:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:23:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1305:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1200:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1211:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:29",
                "type": ""
              }
            ],
            "src": "1164:180:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1419:185:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1465:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1474:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1477:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1467:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1467:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1467:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1440:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1449:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1436:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1436:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1432:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1429:52:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1490:36:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1516:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1503:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1503:23:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1494:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1568:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1535:32:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1535:39:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1535:39:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1583:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1593:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1583:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1385:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1396:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1408:6:29",
                "type": ""
              }
            ],
            "src": "1349:255:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:331:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:27:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:3:29",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1883:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:19:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1875:4:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1911:29:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1929:3:29",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1934:1:29",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1925:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1925:11:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1938:1:29",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1921:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:19:29"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1915:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1971:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1979:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1949:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2003:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2014:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1999:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1999:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "2033:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2026:6:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2026:14:29"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2019:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2019:22:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1992:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:50:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1992:50:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2062:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2073:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2058:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2058:18:29"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2078:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2051:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2051:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2105:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2116:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2101:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2101:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2125:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2133:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2121:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2121:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2094:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2094:43:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2094:43:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2157:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2168:3:29",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2153:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2153:19:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "2178:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2186:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:44:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:44:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_uint256_t_address_t_contract$_IRealityETH_IERC20_$10502__to_t_address_t_bool_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1802:9:29",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1813:6:29",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1821:6:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1829:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1837:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1845:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1856:4:29",
                "type": ""
              }
            ],
            "src": "1609:587:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2286:185:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2332:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2341:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2344:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2334:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2334:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2334:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2307:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2316:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2303:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2303:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2328:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2299:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2299:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2296:52:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2357:36:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2383:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2370:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:23:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2361:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2435:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2402:32:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2402:39:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2402:39:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2450:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2460:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2450:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2252:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2263:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2275:6:29",
                "type": ""
              }
            ],
            "src": "2201:270:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:95:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2525:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2532:3:29",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2537:10:29",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2528:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2528:20:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:31:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:31:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2565:1:29",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:4:29",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2558:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2558:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2558:15:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2589:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2592:4:29",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2582:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2582:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2582:15:29"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2476:127:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2661:666:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2710:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2719:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2722:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2712:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2712:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2712:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2689:6:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2697:4:29",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2685:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2685:17:29"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2704:3:29"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2681:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2681:27:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2674:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2674:35:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2671:55:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2735:30:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2758:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2745:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2745:20:29"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2739:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2774:28:29",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2784:18:29",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2778:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2825:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2827:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2827:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2827:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2817:2:29"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2821:2:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2814:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2814:10:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2811:36:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2856:17:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2870:2:29",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2866:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:7:29"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2860:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2882:23:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2902:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2896:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:9:29"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2886:6:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2914:71:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2936:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2960:2:29"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2964:4:29",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2956:3:29"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2956:13:29"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2971:2:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2952:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2952:22:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2976:2:29",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2948:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2948:31:29"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2981:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2944:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:40:29"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2932:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2932:53:29"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2918:10:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3044:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3046:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3046:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3046:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3003:10:29"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3015:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3000:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3023:10:29"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3035:6:29"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3020:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3020:22:29"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2997:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2997:46:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2994:72:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3082:2:29",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3086:10:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3075:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3075:22:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3075:22:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3113:6:29"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3121:2:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:18:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:18:29"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3172:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3181:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3184:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3174:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3174:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3174:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3147:6:29"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3155:2:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3143:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3143:15:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3160:4:29",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3139:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3139:26:29"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3167:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3136:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:35:29"
                  },
                  "nodeType": "YulIf",
                  "src": "3133:55:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3214:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3222:4:29",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3210:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3210:17:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3233:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:4:29",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3229:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3229:17:29"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3248:2:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3197:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:54:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3197:54:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3275:6:29"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3283:2:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3271:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3271:15:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3288:4:29",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3267:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3267:26:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3295:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3260:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3260:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3260:37:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3306:15:29",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3315:6:29"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3306:5:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2635:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2643:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2651:5:29",
                "type": ""
              }
            ],
            "src": "2608:719:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3488:614:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3535:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3544:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3547:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3537:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3537:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3537:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3509:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3518:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3505:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3505:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3530:3:29",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3501:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:33:29"
                  },
                  "nodeType": "YulIf",
                  "src": "3498:53:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3560:37:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3587:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3574:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3574:23:29"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3564:6:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3606:28:29",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3616:18:29",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3610:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3661:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3670:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3673:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3663:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3663:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3663:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3649:6:29"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3657:2:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3646:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3646:14:29"
                  },
                  "nodeType": "YulIf",
                  "src": "3643:34:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3686:60:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3718:9:29"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3729:6:29"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3714:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3714:22:29"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3738:7:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3696:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3696:50:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3686:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3755:48:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3788:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3799:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3784:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3784:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3771:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:32:29"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "3759:8:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3832:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3841:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3844:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3834:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3834:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3834:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "3818:8:29"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3828:2:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3815:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3815:16:29"
                  },
                  "nodeType": "YulIf",
                  "src": "3812:36:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3857:62:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3889:9:29"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "3900:8:29"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3885:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3885:24:29"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3911:7:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3867:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3867:52:29"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3857:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3928:42:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3955:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3966:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3951:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3951:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3938:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3938:32:29"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3928:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3979:45:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4009:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4020:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4005:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4005:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3992:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3992:32:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3983:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4066:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "4033:32:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:39:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4033:39:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4081:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4091:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4081:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3430:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3441:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3453:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3461:6:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3469:6:29",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3477:6:29",
                "type": ""
              }
            ],
            "src": "3332:770:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4229:102:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4239:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4251:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4262:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4247:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4239:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4281:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4296:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4312:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4317:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4308:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4308:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4321:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4304:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4304:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4292:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4292:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4274:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4274:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4274:51:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4198:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4209:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4220:4:29",
                "type": ""
              }
            ],
            "src": "4107:224:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4471:102:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4481:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4493:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4504:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4489:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4489:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4481:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4523:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4538:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4554:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4559:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4550:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4550:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4563:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4546:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4546:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4534:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4534:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4516:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4516:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4516:51:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$10641__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4440:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4451:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4462:4:29",
                "type": ""
              }
            ],
            "src": "4336:237:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4694:102:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4704:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4716:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4727:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4712:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4712:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4704:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4746:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4761:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4777:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4782:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4773:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4773:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4786:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4769:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4769:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4757:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4757:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4739:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4739:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4739:51:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1478__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4663:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4674:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4685:4:29",
                "type": ""
              }
            ],
            "src": "4578:218:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4975:224:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4992:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5003:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4985:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4985:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4985:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5026:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5037:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5022:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5022:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5042:2:29",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5015:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5015:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5015:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5065:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5076:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5061:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5061:18:29"
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5081:34:29",
                        "type": "",
                        "value": "Lock amount must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5054:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5054:62:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5054:62:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5136:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5147:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5132:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5132:18:29"
                      },
                      {
                        "hexValue": "2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5152:4:29",
                        "type": "",
                        "value": " 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5125:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5125:32:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5125:32:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5166:27:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5178:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5189:3:29",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5174:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5174:19:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5166:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4952:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4966:4:29",
                "type": ""
              }
            ],
            "src": "4801:398:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5378:173:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5395:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5406:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5388:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5388:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5388:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5429:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5440:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5425:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5425:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5445:2:29",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5418:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5418:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5418:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5468:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5479:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5464:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5464:18:29"
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206973207468652073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5484:25:29",
                        "type": "",
                        "value": "Lock amount is the same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5457:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:53:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5457:53:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5519:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5531:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5542:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5527:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5527:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5519:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5355:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5369:4:29",
                "type": ""
              }
            ],
            "src": "5204:347:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5730:169:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5747:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5758:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5740:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5740:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5740:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5781:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5792:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5777:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5777:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5797:2:29",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5770:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5770:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5770:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5820:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5831:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5816:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5816:18:29"
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5836:21:29",
                        "type": "",
                        "value": "Land does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5809:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5809:49:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5809:49:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5867:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5879:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5890:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5875:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5875:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5867:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5707:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5721:4:29",
                "type": ""
              }
            ],
            "src": "5556:343:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6078:171:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6095:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6106:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6088:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6088:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6088:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6129:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6140:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6125:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6125:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6145:2:29",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6118:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6118:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6118:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6168:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6179:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6164:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6164:18:29"
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6184:23:29",
                        "type": "",
                        "value": "Not admin of the land"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6157:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6157:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6157:51:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6217:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6229:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6240:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6225:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6225:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6217:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6055:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6069:4:29",
                "type": ""
              }
            ],
            "src": "5904:345:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6286:95:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6303:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6310:3:29",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6315:10:29",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6306:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:20:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6296:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6296:31:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6296:31:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6343:1:29",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6346:4:29",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6336:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6336:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6336:15:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6367:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6370:4:29",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6360:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6360:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6360:15:29"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6254:127:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6435:79:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6445:17:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6457:1:29"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6460:1:29"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6453:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6453:9:29"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6445:4:29"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6486:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6488:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6488:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6488:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "6477:4:29"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6483:1:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6474:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6474:11:29"
                  },
                  "nodeType": "YulIf",
                  "src": "6471:37:29"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6417:1:29",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6420:1:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6426:4:29",
                "type": ""
              }
            ],
            "src": "6386:128:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6648:145:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6658:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6670:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6681:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6666:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6666:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6658:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6700:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6715:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6731:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6736:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6727:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6727:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6740:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6723:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6723:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6711:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6711:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6693:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6693:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6693:51:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6764:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6775:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6760:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6760:18:29"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6780:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6753:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6753:34:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6609:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6620:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6628:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6639:4:29",
                "type": ""
              }
            ],
            "src": "6519:274:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6876:199:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6922:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6931:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6934:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6924:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6924:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6924:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6897:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6906:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6893:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6893:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6918:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6889:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "6886:52:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6947:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6966:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6960:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6960:16:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6951:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7029:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7038:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7041:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7031:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7031:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7031:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6998:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7019:5:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7012:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7012:13:29"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7005:6:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7005:21:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6995:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6995:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6988:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6988:40:29"
                  },
                  "nodeType": "YulIf",
                  "src": "6985:60:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7054:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7064:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7054:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6842:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6853:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6865:6:29",
                "type": ""
              }
            ],
            "src": "6798:277:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7209:145:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7219:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7231:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7242:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7227:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7219:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7261:9:29"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7272:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7254:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7254:25:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7254:25:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7299:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7310:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7295:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7295:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7319:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7335:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7340:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7331:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7331:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7344:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7327:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7327:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7315:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7315:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7288:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7288:60:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7288:60:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7170:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7181:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7189:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7200:4:29",
                "type": ""
              }
            ],
            "src": "7080:274:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7533:172:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7550:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7561:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7543:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7543:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7543:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7584:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7595:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7580:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7580:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7600:2:29",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7573:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7573:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7573:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7623:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7634:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7619:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7619:18:29"
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7639:24:29",
                        "type": "",
                        "value": "Land is already active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7612:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7612:52:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7612:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7673:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7685:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7696:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7681:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7681:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7673:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7510:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7524:4:29",
                "type": ""
              }
            ],
            "src": "7359:346:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7867:218:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7877:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7889:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7900:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7885:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7885:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7877:4:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7912:29:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7930:3:29",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7935:1:29",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7926:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7926:11:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7939:1:29",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7922:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7922:19:29"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7916:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7957:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7972:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7980:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7968:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7968:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7950:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7950:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7950:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8004:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8015:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8000:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8000:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8024:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8032:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8020:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8020:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7993:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7993:43:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7993:43:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8056:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8067:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8052:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8052:18:29"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8072:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8045:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8045:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8045:34:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7820:9:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7831:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7839:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7847:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7858:4:29",
                "type": ""
              }
            ],
            "src": "7710:375:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8138:77:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8148:16:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8159:1:29"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8162:1:29"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8155:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8155:9:29"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8148:3:29"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8187:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8189:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8189:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8189:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8179:1:29"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "8182:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8176:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8176:10:29"
                  },
                  "nodeType": "YulIf",
                  "src": "8173:36:29"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8121:1:29",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8124:1:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8130:3:29",
                "type": ""
              }
            ],
            "src": "8090:125:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8301:103:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8347:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8356:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8359:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8349:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8349:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8349:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8322:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8331:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8318:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8318:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8343:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8314:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8314:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "8311:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8372:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8388:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8382:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8382:16:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8372:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8267:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8278:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8290:6:29",
                "type": ""
              }
            ],
            "src": "8220:184:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8583:175:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8600:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8611:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8593:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8593:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8634:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8645:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8630:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8630:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8650:2:29",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8623:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8623:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8623:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8673:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8684:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8669:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8669:18:29"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320746f206c6f636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8689:27:29",
                        "type": "",
                        "value": "Not enough tokens to lock"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8662:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8662:55:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8662:55:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8726:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8738:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8749:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8734:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8734:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8726:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8560:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8574:4:29",
                "type": ""
              }
            ],
            "src": "8409:349:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8813:373:29",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8823:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8843:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8837:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8837:12:29"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8827:6:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8865:3:29"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8870:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8858:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8858:19:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8858:19:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8886:10:29",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8895:1:29",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8890:1:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8957:110:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8971:14:29",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8981:4:29",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "8975:2:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "9013:3:29"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9018:1:29"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9009:3:29"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9009:11:29"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9022:2:29"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9005:3:29"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9005:20:29"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "9041:5:29"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "9048:1:29"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9037:3:29"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9037:13:29"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9052:2:29"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9033:3:29"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9033:22:29"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9027:5:29"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9027:29:29"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8998:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8998:59:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8998:59:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8916:1:29"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8919:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8913:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8913:13:29"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8927:21:29",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8929:17:29",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8938:1:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8941:4:29",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8934:3:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8934:12:29"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8929:1:29"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8909:3:29",
                    "statements": []
                  },
                  "src": "8905:162:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9091:3:29"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9096:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9087:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9087:16:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9105:4:29",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9083:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9083:27:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9112:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9076:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9076:38:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9076:38:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9123:57:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9138:3:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9151:6:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9159:2:29",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9147:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9147:15:29"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9168:2:29",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9164:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9164:7:29"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9143:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9143:29:29"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9134:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9134:39:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9175:4:29",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9130:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9130:50:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9123:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8790:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8797:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8805:3:29",
                "type": ""
              }
            ],
            "src": "8763:423:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9416:328:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9433:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9444:3:29",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9426:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9426:22:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9426:22:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9457:60:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9489:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9501:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9512:3:29",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9497:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9497:19:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "9471:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9471:46:29"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "9461:6:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9537:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9548:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9533:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9533:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "9557:6:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9565:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9553:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9553:22:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9526:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9526:50:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9526:50:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9585:41:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9611:6:29"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "9619:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "9593:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9593:33:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9585:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9646:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9657:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9642:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9642:18:29"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9662:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9635:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9635:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9635:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9689:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9700:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9685:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9685:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "9709:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9725:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9730:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9721:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9721:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9734:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9717:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9717:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9705:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9705:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9678:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9678:60:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9678:60:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9361:9:29",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9372:6:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9380:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9388:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9396:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9407:4:29",
                "type": ""
              }
            ],
            "src": "9191:553:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9796:88:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9827:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9829:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9829:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9829:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9812:5:29"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9823:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9819:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9819:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9809:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9809:17:29"
                  },
                  "nodeType": "YulIf",
                  "src": "9806:43:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9858:20:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9869:5:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9876:1:29",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9865:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9865:13:29"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9858:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9778:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9788:3:29",
                "type": ""
              }
            ],
            "src": "9749:135:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9970:178:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10016:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10025:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10028:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10018:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10018:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10018:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9991:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10000:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9987:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9987:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10012:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9983:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9983:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "9980:52:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10041:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10060:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10054:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10054:16:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10045:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10112:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "10079:32:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10079:39:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10079:39:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10127:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10137:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10127:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9936:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9947:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9959:6:29",
                "type": ""
              }
            ],
            "src": "9889:259:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10327:168:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10344:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10355:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10337:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10337:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10337:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10378:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10389:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10374:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10374:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10394:2:29",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10367:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10367:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10367:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10417:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10428:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10413:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10413:18:29"
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10433:20:29",
                        "type": "",
                        "value": "Land is not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10406:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10406:48:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10406:48:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10463:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10475:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10486:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10471:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10471:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10463:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10304:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10318:4:29",
                "type": ""
              }
            ],
            "src": "10153:342:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10674:228:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10691:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10702:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10684:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10684:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10684:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10725:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10736:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10721:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10721:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10741:2:29",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10714:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10714:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10714:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10764:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10775:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10760:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10760:18:29"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10780:34:29",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10753:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10753:62:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10753:62:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10835:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10846:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10831:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10831:18:29"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10851:8:29",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10824:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10824:36:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10824:36:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10869:27:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10881:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10892:3:29",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10877:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10877:19:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10869:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10651:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10665:4:29",
                "type": ""
              }
            ],
            "src": "10500:402:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11081:182:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11098:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11109:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11091:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11091:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11091:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11132:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11143:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11128:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11128:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11148:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11121:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11121:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11121:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11171:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11182:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11167:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11167:18:29"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11187:34:29",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11160:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11160:62:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11160:62:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11231:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11243:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11254:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11239:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11239:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11231:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11058:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11072:4:29",
                "type": ""
              }
            ],
            "src": "10907:356:29"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229_t_bool_t_uint256_t_address_t_contract$_IRealityETH_IERC20_$10502__to_t_address_t_bool_t_uint256_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_contract_IERC20(value)\n        value3 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4229__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$10641__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1478__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Lock amount must be greater than\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Lock amount is the same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Land does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not admin of the land\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Land is already active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not enough tokens to lock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Land is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "286:7089:27:-:0;;;1480:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:16;936:18:4;:32::i;:::-;1716:1:6;1821:22;;-1:-1:-1;;;;;1602:12:27;;;;;1620:14;;;;1640:10;:24;;;1688:53;;1717:23;;1688:53;;;:::i;:::-;-1:-1:-1;;;;;915:32:29;;;897:51;;885:2;870:18;1688:53:27;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1670:71:27;;;-1:-1:-1;286:7089:27;;-1:-1:-1;;;286:7089:27;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;286:7089:27:-;;;;;;;;:::o;14:131:29:-;-1:-1:-1;;;;;89:31:29;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:596::-;262:6;270;278;286;339:3;327:9;318:7;314:23;310:33;307:53;;;356:1;353;346:12;307:53;388:9;382:16;407:31;432:5;407:31;:::i;:::-;507:2;492:18;;486:25;457:5;;-1:-1:-1;520:33:29;486:25;520:33;:::i;:::-;619:2;604:18;;598:25;668:2;653:18;;647:25;572:7;;-1:-1:-1;598:25:29;-1:-1:-1;681:33:29;647:25;681:33;:::i;:::-;150:596;;;;-1:-1:-1;150:596:29;;-1:-1:-1;;150:596:29:o;751:203::-;286:7089:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "286:7089:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:31;;;;;;;;;160:25:29;;;148:2;133:18;1444:31:27;;;;;;;;353:29;;;;;;;;-1:-1:-1;;;;;360:32:29;;;342:51;;330:2;315:18;353:29:27;196:203:29;6628:198:27;;;;;;:::i;:::-;;:::i;:::-;;;1137:14:29;;1130:22;1112:41;;1100:2;1085:18;6628:198:27;972:187:29;1413:27:27;;;;;;:::i;:::-;;:::i;1372:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:37:27;;;;-1:-1:-1;;;1372:37:27;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1967:15:29;;;1949:34;;2026:14;;2019:22;2014:2;1999:18;;1992:50;2058:18;;2051:34;;;;2121:15;;2116:2;2101:18;;2094:43;2174:15;;;2168:3;2153:19;;2146:44;1898:3;1883:19;1372:37:27;1609:587:29;1750:245:27;;;;;;:::i;:::-;;:::i;:::-;;5137:590;;;;;;:::i;:::-;;:::i;5731:438::-;;;;;;:::i;:::-;;:::i;4388:745::-;;;;;;:::i;:::-;;:::i;2229:1543::-;;;;;;:::i;:::-;;:::i;545:57::-;;;;;3776:608;;;;;;:::i;:::-;;:::i;1831:101:4:-;;;:::i;7200:173:27:-;;;;;;:::i;:::-;-1:-1:-1;;;;;7310:27:27;;;7278:4;7310:27;;;:5;:27;;;;;;;;7351:17;;;;;;:11;;;;:17;;;;;;;;7200:173;6173:451;;;;;;:::i;:::-;;:::i;1201:85:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;7035:161:27;;;;;;:::i;:::-;-1:-1:-1;;;;;7139:27:27;7107:4;7139:27;;;:5;:27;;;;;7180:11;-1:-1:-1;;;7180:11:27;;;;;7035:161;471:25;;;;;;2081:198:4;;;;;;:::i;:::-;;:::i;417:29:27:-;;;;;6628:198;-1:-1:-1;;;;;6748:27:27;;6716:4;6748:27;;;:5;:27;;;;;6789:11;;-1:-1:-1;;;6789:11:27;;;;:32;;;;-1:-1:-1;;;;;;6804:17:27;;;;;;:11;;;:17;;;;;;;;6789:32;6782:39;;;6628:198;;;;;:::o;1413:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1413:27:27;;-1:-1:-1;1413:27:27;:::o;1750:245::-;1094:13:4;:11;:13::i;:::-;1848:1:27::1;1832:13;:17;1824:64;;;::::0;-1:-1:-1;;;1824:64:27;;5003:2:29;1824:64:27::1;::::0;::::1;4985:21:29::0;5042:2;5022:18;;;5015:30;5081:34;5061:18;;;5054:62;-1:-1:-1;;;5132:18:29;;;5125:32;5174:19;;1824:64:27::1;;;;;;;;;1919:10;;1902:13;:27:::0;1894:63:::1;;;::::0;-1:-1:-1;;;1894:63:27;;5406:2:29;1894:63:27::1;::::0;::::1;5388:21:29::0;5445:2;5425:18;;;5418:30;5484:25;5464:18;;;5457:53;5527:18;;1894:63:27::1;5204:347:29::0;1894:63:27::1;1964:10;:26:::0;1750:245::o;5137:590::-;-1:-1:-1;;;;;5238:25:27;;5203:7;5238:25;;;:5;:25;;;;;5278:11;;-1:-1:-1;;;5278:11:27;;;;5270:43;;;;-1:-1:-1;;;5270:43:27;;;;;;;:::i;:::-;5339:10;5327:23;;;;:11;;;:23;;;;;;;;5319:57;;;;-1:-1:-1;;;5319:57:27;;;;;;;:::i;:::-;5383:22;5426:10;;5408:4;:15;;;:28;:63;;5470:1;5408:63;;;5457:10;;5439:4;:15;;;:28;;;;:::i;:::-;5383:88;-1:-1:-1;5482:18:27;;5478:139;;5510:42;;-1:-1:-1;;;5510:42:27;;5525:10;5510:42;;;6693:51:29;6760:18;;;6753:34;;;5510:5:27;-1:-1:-1;;;;;5510:14:27;;;;6666:18:29;;5510:42:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5596:14;5578:4;:15;;;:32;;;;:::i;:::-;5560:15;;;:50;5478:139;5628:66;;160:25:29;;;-1:-1:-1;;;;;5628:66:27;;;5647:10;;5628:66;;148:2:29;133:18;5628:66:27;;;;;;;;5708:14;5137:590;-1:-1:-1;;;5137:590:27:o;5731:438::-;-1:-1:-1;;;;;5823:25:27;;5803:17;5823:25;;;:5;:25;;;;;5863:11;;-1:-1:-1;;;5863:11:27;;;;5855:43;;;;-1:-1:-1;;;5855:43:27;;;;;;;:::i;:::-;5924:10;5912:23;;;;:11;;;:23;;;;;;;;5904:57;;;;-1:-1:-1;;;5904:57:27;;;;;;;:::i;:::-;6014:10;;:53;;-1:-1:-1;;;6014:53:27;;-1:-1:-1;;;;;;;;;;;6014:53:27;;;7254:25:29;-1:-1:-1;;;;;7315:32:29;;;7295:18;;;7288:60;6014:10:27;;;;:20;;7227:18:29;;6014:53:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;6074:18:27;;;;;;;6095:4;6074:11;;;:18;;;;;;:25;;-1:-1:-1;;6074:25:27;;;;;;;6111:53;6074:18;;6111:53;;;6126:10;;6111:53;;;5797:372;5731:438;;:::o;4388:745::-;-1:-1:-1;;;;;4479:25:27;;4444:7;4479:25;;;:5;:25;;;;;4520:11;;-1:-1:-1;;;4520:11:27;;;;4519:12;4511:47;;;;-1:-1:-1;;;4511:47:27;;7561:2:29;4511:47:27;;;7543:21:29;7600:2;7580:18;;;7573:30;-1:-1:-1;;;7619:18:29;;;7612:52;7681:18;;4511:47:27;7359:346:29;4511:47:27;4584:10;4572:23;;;;:11;;;:23;;;;;;;;4564:57;;;;-1:-1:-1;;;4564:57:27;;;;;;;:::i;:::-;4628:20;4664:4;:15;;;4651:10;;:28;:63;;4713:1;4651:63;;;4695:4;:15;;;4682:10;;:28;;;;:::i;:::-;4768:59;;-1:-1:-1;;;4768:59:27;;4787:10;4768:59;;;7950:34:29;4807:4:27;8000:18:29;;;7993:43;8052:18;;;8045:34;;;4628:86:27;;-1:-1:-1;4768:5:27;-1:-1:-1;;;;;4768:18:27;;;;7885::29;;4768:59:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4857:18:27;;-1:-1:-1;;;;4857:18:27;-1:-1:-1;;;4857:18:27;;;4899:15;;;;:30;;4917:12;;4899:30;:::i;:::-;4881:15;;;:48;4935:13;;;:26;;-1:-1:-1;;;;;;4935:26:27;4951:10;4935:26;;;4991:42;;;-1:-1:-1;;;4991:42:27;;;;-1:-1:-1;;;;;4991:40:27;;;;;:42;;;;;4935:13;;4991:42;;;;;;;4935:13;4991:40;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5045:57:27;;160:25:29;;;-1:-1:-1;;;;;5045:57:27;;;-1:-1:-1;5057:10:27;;-1:-1:-1;5045:57:27;;148:2:29;133:18;5045:57:27;14:177:29;2229:1543:27;2438:10;;2407:27;;-1:-1:-1;;;2407:27:27;;2423:10;2407:27;;;342:51:29;2379:12:27;;2438:10;-1:-1:-1;;;;;2407:5:27;:15;;;;315:18:29;;2407:27:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;2399:79;;;;-1:-1:-1;;;2399:79:27;;8611:2:29;2399:79:27;;;8593:21:29;8650:2;8630:18;;;8623:30;8689:27;8669:18;;;8662:55;8734:18;;2399:79:27;8409:349:29;2399:79:27;2524:22;2566:4;2572:6;2580:18;2608:4;2549:65;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2675:60:27;;-1:-1:-1;;;2675:60:27;;-1:-1:-1;;;;;;;;;;;2675:60:27;;;7254:25:29;-1:-1:-1;;;;;2729:4:27;7315:32:29;;7295:18;;;7288:60;2524:90:27;;-1:-1:-1;2675:19:27;;;;;;7227:18:29;;2675:60:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2792:57:27;;-1:-1:-1;;;2792:57:27;;-1:-1:-1;;;;;;;;;;;2792:57:27;;;7254:25:29;2838:10:27;7295:18:29;;;7288:60;-1:-1:-1;;;;;2792:19:27;;;-1:-1:-1;2792:19:27;;-1:-1:-1;7227:18:29;;2792:57:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;2919:25:27;;2899:17;2919:25;;;:5;:25;;;;;;;;2950:22;;-1:-1:-1;;;;;;2978:18:27;;;-1:-1:-1;;;2978:18:27;;;3014:10;3002:23;;;2950:22;3002:11;;;:23;;;;;;:30;;-1:-1:-1;;3002:30:27;;;;;3056:10;;;3038:15;;;:28;3072:13;;;:26;;-1:-1:-1;;;;;;3072:26:27;;;;;;;;3104:10;:35;;;;;;;;;;;;;;;;;;;;;;;;3145:16;:18;;2919:25;;-1:-1:-1;3145:16:27;:18;;;:::i;:::-;;;;-1:-1:-1;3170:20:27;;-1:-1:-1;;;;;;3193:36:27;;;:64;;3244:13;3193:64;;;3232:9;3193:64;3314:51;;-1:-1:-1;;;3314:51:27;;-1:-1:-1;;;;;360:32:29;;;3314:51:27;;;342::29;3170:87:27;;-1:-1:-1;3377:1:27;;3314:15;:27;;;;315:18:29;;3314:51:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3314:65:27;;3310:140;;3389:54;;-1:-1:-1;;;3389:54:27;;-1:-1:-1;;;;;360:32:29;;;3389:54:27;;;342:51:29;3389:15:27;:30;;;;315:18:29;;3389:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3310:140;3490:51;;-1:-1:-1;;;3490:51:27;;-1:-1:-1;;;;;360:32:29;;;3490:51:27;;;342::29;3490:15:27;:27;;;;315:18:29;;3490:51:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3455:13;;;;:87;;-1:-1:-1;;;;;;3455:87:27;-1:-1:-1;;;;;3455:87:27;;;;;;3642:10;;3596:57;;-1:-1:-1;;;3596:57:27;;3615:10;3596:57;;;7950:34:29;;;;3635:4:27;8000:18:29;;;7993:43;8052:18;;;8045:34;3596:5:27;:18;;;;;;7885::29;;3596:57:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3717:13;-1:-1:-1;;;;;3665:79:27;3697:9;-1:-1:-1;;;;;3665:79:27;3677:10;-1:-1:-1;;;;;3665:79:27;;3733:10;;3665:79;;;;160:25:29;;148:2;133:18;;14:177;3665:79:27;;;;;;;;-1:-1:-1;3758:9:27;;2229:1543;-1:-1:-1;;;;;;2229:1543:27:o;3776:608::-;-1:-1:-1;;;;;3868:25:27;;3833:7;3868:25;;;:5;:25;;;;;3908:11;;-1:-1:-1;;;3908:11:27;;;;3900:42;;;;-1:-1:-1;;;3900:42:27;;10355:2:29;3900:42:27;;;10337:21:29;10394:2;10374:18;;;10367:30;-1:-1:-1;;;10413:18:29;;;10406:48;10471:18;;3900:42:27;10153:342:29;3900:42:27;3968:10;3956:23;;;;:11;;;:23;;;;;;;;3948:57;;;;-1:-1:-1;;;3948:57:27;;;;;;;:::i;:::-;4037:15;;;;4074:13;;;;4059:45;;-1:-1:-1;;;4059:45:27;;-1:-1:-1;;;;;4074:13:27;;;4059:45;;;6693:51:29;6760:18;;;6753:34;;;4059:5:27;:14;;;;;;6666:18:29;;4059:45:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4135:19:27;;-1:-1:-1;;;;4135:19:27;;;4149:5;4160:15;;;:19;;;4185:13;;;:26;;-1:-1:-1;;;;;;4185:26:27;;;4239:40;;;-1:-1:-1;;;4239:40:27;;;;-1:-1:-1;;;;;4239:38:27;;;;;:40;;;;;;;;;;;4149:5;4239:38;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4291:60:27;;160:25:29;;;-1:-1:-1;;;;;4291:60:27;;;-1:-1:-1;4304:10:27;;-1:-1:-1;4291:60:27;;148:2:29;133:18;4291:60:27;14:177:29;1831:101:4;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6173:451:27:-;-1:-1:-1;;;;;6270:25:27;;6250:17;6270:25;;;:5;:25;;;;;6310:11;;-1:-1:-1;;;6310:11:27;;;;6302:43;;;;-1:-1:-1;;;6302:43:27;;;;;;;:::i;:::-;6371:10;6359:23;;;;:11;;;:23;;;;;;;;6351:57;;;;-1:-1:-1;;;6351:57:27;;;;;;;:::i;:::-;6465:10;;:54;;-1:-1:-1;;;6465:54:27;;-1:-1:-1;;;;;;;;;;;6465:54:27;;;7254:25:29;-1:-1:-1;;;;;7315:32:29;;;7295:18;;;7288:60;6465:10:27;;;;:21;;7227:18:29;;6465:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;6526:18:27;;;6547:5;6526:18;;;:11;;;:18;;;;;;:26;;-1:-1:-1;;6526:26:27;;;6564:55;6526:18;;6564:55;;;6581:10;;6564:55;;;6244:380;6173:451;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;10702:2:29;2161:73:4::1;::::0;::::1;10684:21:29::0;10741:2;10721:18;;;10714:30;10780:34;10760:18;;;10753:62;-1:-1:-1;;;10831:18:29;;;10824:36;10877:19;;2161:73:4::1;10500:402:29::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:16;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;11109:2:29;1414:68:4;;;11091:21:29;;;11128:18;;;11121:30;11187:34;11167:18;;;11160:62;11239:18;;1414:68:4;10907:356:29;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;404:139:29:-;-1:-1:-1;;;;;487:31:29;;477:42;;467:70;;533:1;530;523:12;548:419;631:6;639;692:2;680:9;671:7;667:23;663:32;660:52;;;708:1;705;698:12;660:52;747:9;734:23;766:39;799:5;766:39;:::i;:::-;824:5;-1:-1:-1;881:2:29;866:18;;853:32;894:41;853:32;894:41;:::i;:::-;954:7;944:17;;;548:419;;;;;:::o;1164:180::-;1223:6;1276:2;1264:9;1255:7;1251:23;1247:32;1244:52;;;1292:1;1289;1282:12;1244:52;-1:-1:-1;1315:23:29;;1164:180;-1:-1:-1;1164:180:29:o;1349:255::-;1408:6;1461:2;1449:9;1440:7;1436:23;1432:32;1429:52;;;1477:1;1474;1467:12;1429:52;1516:9;1503:23;1535:39;1568:5;1535:39;:::i;:::-;1593:5;1349:255;-1:-1:-1;;;1349:255:29:o;2476:127::-;2537:10;2532:3;2528:20;2525:1;2518:31;2568:4;2565:1;2558:15;2592:4;2589:1;2582:15;2608:719;2651:5;2704:3;2697:4;2689:6;2685:17;2681:27;2671:55;;2722:1;2719;2712:12;2671:55;2758:6;2745:20;2784:18;2821:2;2817;2814:10;2811:36;;;2827:18;;:::i;:::-;2902:2;2896:9;2870:2;2956:13;;-1:-1:-1;;2952:22:29;;;2976:2;2948:31;2944:40;2932:53;;;3000:18;;;3020:22;;;2997:46;2994:72;;;3046:18;;:::i;:::-;3086:10;3082:2;3075:22;3121:2;3113:6;3106:18;3167:3;3160:4;3155:2;3147:6;3143:15;3139:26;3136:35;3133:55;;;3184:1;3181;3174:12;3133:55;3248:2;3241:4;3233:6;3229:17;3222:4;3214:6;3210:17;3197:54;3295:1;3288:4;3283:2;3275:6;3271:15;3267:26;3260:37;3315:6;3306:15;;;;;;2608:719;;;;:::o;3332:770::-;3453:6;3461;3469;3477;3530:3;3518:9;3509:7;3505:23;3501:33;3498:53;;;3547:1;3544;3537:12;3498:53;3587:9;3574:23;3616:18;3657:2;3649:6;3646:14;3643:34;;;3673:1;3670;3663:12;3643:34;3696:50;3738:7;3729:6;3718:9;3714:22;3696:50;:::i;:::-;3686:60;;3799:2;3788:9;3784:18;3771:32;3755:48;;3828:2;3818:8;3815:16;3812:36;;;3844:1;3841;3834:12;3812:36;;3867:52;3911:7;3900:8;3889:9;3885:24;3867:52;:::i;:::-;3857:62;;;3966:2;3955:9;3951:18;3938:32;3928:42;;4020:2;4009:9;4005:18;3992:32;4033:39;4066:5;4033:39;:::i;:::-;3332:770;;;;-1:-1:-1;3332:770:29;;-1:-1:-1;;3332:770:29:o;5556:343::-;5758:2;5740:21;;;5797:2;5777:18;;;5770:30;-1:-1:-1;;;5831:2:29;5816:18;;5809:49;5890:2;5875:18;;5556:343::o;5904:345::-;6106:2;6088:21;;;6145:2;6125:18;;;6118:30;-1:-1:-1;;;6179:2:29;6164:18;;6157:51;6240:2;6225:18;;5904:345::o;6254:127::-;6315:10;6310:3;6306:20;6303:1;6296:31;6346:4;6343:1;6336:15;6370:4;6367:1;6360:15;6386:128;6453:9;;;6474:11;;;6471:37;;;6488:18;;:::i;6798:277::-;6865:6;6918:2;6906:9;6897:7;6893:23;6889:32;6886:52;;;6934:1;6931;6924:12;6886:52;6966:9;6960:16;7019:5;7012:13;7005:21;6998:5;6995:32;6985:60;;7041:1;7038;7031:12;8090:125;8155:9;;;8176:10;;;8173:36;;;8189:18;;:::i;8220:184::-;8290:6;8343:2;8331:9;8322:7;8318:23;8314:32;8311:52;;;8359:1;8356;8349:12;8311:52;-1:-1:-1;8382:16:29;;8220:184;-1:-1:-1;8220:184:29:o;8763:423::-;8805:3;8843:5;8837:12;8870:6;8865:3;8858:19;8895:1;8905:162;8919:6;8916:1;8913:13;8905:162;;;8981:4;9037:13;;;9033:22;;9027:29;9009:11;;;9005:20;;8998:59;8934:12;8905:162;;;8909:3;9112:1;9105:4;9096:6;9091:3;9087:16;9083:27;9076:38;9175:4;9168:2;9164:7;9159:2;9151:6;9147:15;9143:29;9138:3;9134:39;9130:50;9123:57;;;8763:423;;;;:::o;9191:553::-;9444:3;9433:9;9426:22;9407:4;9471:46;9512:3;9501:9;9497:19;9489:6;9471:46;:::i;:::-;9565:9;9557:6;9553:22;9548:2;9537:9;9533:18;9526:50;9593:33;9619:6;9611;9593:33;:::i;:::-;9657:2;9642:18;;9635:34;;;;-1:-1:-1;;;;;;;9705:32:29;;;;9700:2;9685:18;;;9678:60;9585:41;9191:553;-1:-1:-1;;9191:553:29:o;9749:135::-;9788:3;9809:17;;;9806:43;;9829:18;;:::i;:::-;-1:-1:-1;9876:1:29;9865:13;;9749:135::o;9889:259::-;9959:6;10012:2;10000:9;9991:7;9987:23;9983:32;9980:52;;;10028:1;10025;10018:12;9980:52;10060:9;10054:16;10079:39;10112:5;10079:39;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./FantasyERC20.sol\";\nimport \"./RealityETH_ERC20_Factory.sol\";\n\n// openzeppelin ownable contract import\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract PredictionMarketV3Manager is Ownable, ReentrancyGuard {\n  address public immutable PMV3; // PredictionMarketV3 contract\n  IERC20 public immutable token; // Governance IERC20\n  uint256 public lockAmount; // amount necessary to lock to create a land\n  RealityETH_ERC20_Factory public immutable realitioFactory;\n\n  event LandCreated(address indexed user, address indexed token, address indexed tokenToAnswer, uint256 amountLocked);\n\n  event LandDisabled(address indexed user, address indexed token, uint256 amountUnlocked);\n\n  event LandEnabled(address indexed user, address indexed token, uint256 amountLocked);\n\n  event LandOffsetUnlocked(address indexed user, address indexed token, uint256 amountUnlocked);\n\n  event LandAdminAdded(address indexed user, address indexed token, address indexed admin);\n\n  event LandAdminRemoved(address indexed user, address indexed token, address indexed admin);\n\n  struct Land {\n    FantasyERC20 token;\n    bool active;\n    mapping(address => bool) admins;\n    uint256 lockAmount;\n    address lockUser;\n    IRealityETH_IERC20 realitio;\n  }\n\n  mapping(address => Land) public lands;\n  address[] public landTokens;\n  uint256 public landTokensLength;\n\n  constructor(\n    address _PMV3,\n    IERC20 _token,\n    uint256 _lockAmount,\n    address _realitioLibraryAddress\n  ) {\n    PMV3 = _PMV3;\n    token = _token;\n    lockAmount = _lockAmount;\n    realitioFactory = new RealityETH_ERC20_Factory(_realitioLibraryAddress);\n  }\n\n  function updateLockAmount(uint256 newLockAmount) external onlyOwner {\n    require(newLockAmount > 0, \"Lock amount must be greater than 0\");\n    require(newLockAmount != lockAmount, \"Lock amount is the same\");\n\n    lockAmount = newLockAmount;\n  }\n\n  // lockAmount is the amount of tokens that the user needs to lock to create a land\n  // by locking the amount the factory will create a fantasyERC20 token and store it in the contract\n  // the user will be the admin of the land\n  function createLand(\n    string memory name,\n    string memory symbol,\n    uint256 tokenAmountToClaim,\n    IERC20 tokenToAnswer\n  ) external returns (FantasyERC20) {\n    require(token.balanceOf(msg.sender) >= lockAmount, \"Not enough tokens to lock\");\n\n    // create a new fantasyERC20 token\n    FantasyERC20 landToken = new FantasyERC20(name, symbol, tokenAmountToClaim, address(PMV3));\n\n    // adding minting privileges to the PMV3 contract\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), address(PMV3));\n    // adding minting privileges to the msg.sender\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), msg.sender);\n\n    // store the new token in the contract\n    Land storage land = lands[address(landToken)];\n    land.token = landToken;\n    land.active = true;\n    land.admins[msg.sender] = true;\n    land.lockAmount = lockAmount;\n    land.lockUser = msg.sender;\n    landTokens.push(address(landToken));\n    landTokensLength++;\n\n    IERC20 realitioToken = address(tokenToAnswer) == address(0) ? landToken : tokenToAnswer;\n\n    // creating the realityETH_ERC20 contract\n    if (realitioFactory.deployments(address(realitioToken)) == address(0)) {\n      realitioFactory.createInstance(address(realitioToken));\n    }\n    land.realitio = IRealityETH_IERC20(realitioFactory.deployments(address(realitioToken)));\n\n    // transfer the lockAmount to the contract\n    token.transferFrom(msg.sender, address(this), lockAmount);\n\n    emit LandCreated(msg.sender, address(landToken), address(tokenToAnswer), lockAmount);\n\n    return landToken;\n  }\n\n  function disableLand(IERC20 landToken) external returns (uint256) {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land is not active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    uint256 amountToUnlock = land.lockAmount;\n\n    token.transfer(land.lockUser, amountToUnlock);\n\n    // disable the land\n    land.active = false;\n    land.lockAmount = 0;\n    land.lockUser = address(0);\n\n    // pausing token\n    FantasyERC20(address(landToken)).pause();\n\n    emit LandDisabled(msg.sender, address(landToken), amountToUnlock);\n\n    return amountToUnlock;\n  }\n\n  function enableLand(IERC20 landToken) external returns (uint256) {\n    Land storage land = lands[address(landToken)];\n\n    require(!land.active, \"Land is already active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    uint256 amountToLock = lockAmount > land.lockAmount ? lockAmount - land.lockAmount : 0;\n\n    // transfer the lockAmount to the contract\n    token.transferFrom(msg.sender, address(this), amountToLock);\n\n    // enable the land\n    land.active = true;\n    land.lockAmount = land.lockAmount + amountToLock;\n    land.lockUser = msg.sender;\n\n    // unpausing token\n    FantasyERC20(address(landToken)).unpause();\n\n    emit LandEnabled(msg.sender, address(landToken), amountToLock);\n\n    return amountToLock;\n  }\n\n  function unlockOffsetFromLand(IERC20 landToken) external returns (uint256) {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    uint256 amountToUnlock = land.lockAmount > lockAmount ? land.lockAmount - lockAmount : 0;\n\n    if (amountToUnlock > 0) {\n      token.transfer(msg.sender, amountToUnlock);\n      land.lockAmount = land.lockAmount - amountToUnlock;\n    }\n\n    emit LandOffsetUnlocked(msg.sender, address(landToken), amountToUnlock);\n\n    return amountToUnlock;\n  }\n\n  function addAdminToLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // adding minting privileges to the admin\n    land.token.grantRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = true;\n\n    emit LandAdminAdded(msg.sender, address(landToken), admin);\n  }\n\n  function removeAdminFromLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // removing minting privileges from the admin\n    land.token.revokeRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = false;\n\n    emit LandAdminRemoved(msg.sender, address(landToken), admin);\n  }\n\n  function isAllowedToCreateMarket(IERC20 marketToken, address user) public view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isAllowedToResolveMarket(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isIERC20TokenSocial(IERC20 marketToken) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active;\n  }\n\n  function isLandAdmin(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.admins[user];\n  }\n}\n",
  "sourcePath": "/Users/ricardomarques/dev/workspace/polkamarkets/bepro-js/contracts/PredictionMarketV3Manager.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarketV3Manager.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Context": [
        2389
      ],
      "ERC165": [
        2588
      ],
      "ERC20": [
        1400
      ],
      "ERC20Burnable": [
        1522
      ],
      "ERC20Pausable": [
        1559
      ],
      "ERC20PresetMinterPauser": [
        1756
      ],
      "EnumerableSet": [
        4078
      ],
      "FantasyERC20": [
        4229
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "IERC165": [
        2600
      ],
      "IERC20": [
        1478
      ],
      "IERC20Metadata": [
        1584
      ],
      "IRealityETH_ERC20": [
        4865
      ],
      "IRealityETH_IERC20": [
        10502
      ],
      "Math": [
        3465
      ],
      "Ownable": [
        651
      ],
      "Pausable": [
        759
      ],
      "PredictionMarketV3Manager": [
        10488
      ],
      "RealityETH_ERC20_Factory": [
        10641
      ],
      "ReentrancyGuard": [
        813
      ],
      "Strings": [
        2564
      ]
    },
    "id": 10489,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9627,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:27"
      },
      {
        "absolutePath": "project:/contracts/FantasyERC20.sol",
        "file": "./FantasyERC20.sol",
        "id": 9628,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10489,
        "sourceUnit": 4230,
        "src": "58:28:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RealityETH_ERC20_Factory.sol",
        "file": "./RealityETH_ERC20_Factory.sol",
        "id": 9629,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10489,
        "sourceUnit": 10642,
        "src": "87:40:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9630,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10489,
        "sourceUnit": 652,
        "src": "169:52:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 9631,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10489,
        "sourceUnit": 814,
        "src": "222:62:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9632,
              "name": "Ownable",
              "nameLocations": [
                "324:7:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "324:7:27"
            },
            "id": 9633,
            "nodeType": "InheritanceSpecifier",
            "src": "324:7:27"
          },
          {
            "baseName": {
              "id": 9634,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "333:15:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 813,
              "src": "333:15:27"
            },
            "id": 9635,
            "nodeType": "InheritanceSpecifier",
            "src": "333:15:27"
          }
        ],
        "canonicalName": "PredictionMarketV3Manager",
        "contractDependencies": [
          4229,
          10641
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10488,
        "linearizedBaseContracts": [
          10488,
          813,
          651,
          2389
        ],
        "name": "PredictionMarketV3Manager",
        "nameLocation": "295:25:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1cbe8a65",
            "id": 9637,
            "mutability": "immutable",
            "name": "PMV3",
            "nameLocation": "378:4:27",
            "nodeType": "VariableDeclaration",
            "scope": 10488,
            "src": "353:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9636,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 9640,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "441:5:27",
            "nodeType": "VariableDeclaration",
            "scope": 10488,
            "src": "417:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1478",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 9639,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9638,
                "name": "IERC20",
                "nameLocations": [
                  "417:6:27"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1478,
                "src": "417:6:27"
              },
              "referencedDeclaration": 1478,
              "src": "417:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1478",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 9642,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "486:10:27",
            "nodeType": "VariableDeclaration",
            "scope": 10488,
            "src": "471:25:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9641,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e3dd8ba",
            "id": 9645,
            "mutability": "immutable",
            "name": "realitioFactory",
            "nameLocation": "587:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 10488,
            "src": "545:57:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
              "typeString": "contract RealityETH_ERC20_Factory"
            },
            "typeName": {
              "id": 9644,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9643,
                "name": "RealityETH_ERC20_Factory",
                "nameLocations": [
                  "545:24:27"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10641,
                "src": "545:24:27"
              },
              "referencedDeclaration": 10641,
              "src": "545:24:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                "typeString": "contract RealityETH_ERC20_Factory"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ba6e51248e93514eb089243e4d08f26db16ff133606694000e7124a41ee5deb4",
            "id": 9655,
            "name": "LandCreated",
            "nameLocation": "613:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9647,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "641:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "625:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9649,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "663:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "647:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9651,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "686:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "670:29:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountLocked",
                  "nameLocation": "709:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "701:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "624:98:27"
            },
            "src": "607:116:27"
          },
          {
            "anonymous": false,
            "eventSelector": "76f76e951d717cb73ae423c4e4a029c5dde6ef38673c8f6a20cb9eb5025de595",
            "id": 9663,
            "name": "LandDisabled",
            "nameLocation": "733:12:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9657,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "762:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9663,
                  "src": "746:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9659,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "784:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9663,
                  "src": "768:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9661,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountUnlocked",
                  "nameLocation": "799:14:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9663,
                  "src": "791:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "745:69:27"
            },
            "src": "727:88:27"
          },
          {
            "anonymous": false,
            "eventSelector": "9daf897774d766e38773bbeaf2f32d93fed4091373b77ebb7f5aee37417d1ab1",
            "id": 9671,
            "name": "LandEnabled",
            "nameLocation": "825:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9665,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "853:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9671,
                  "src": "837:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9667,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "875:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9671,
                  "src": "859:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9669,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountLocked",
                  "nameLocation": "890:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9671,
                  "src": "882:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:67:27"
            },
            "src": "819:85:27"
          },
          {
            "anonymous": false,
            "eventSelector": "762d0a2a8e474a7f467752b8c7d24a08142b5a877a95ceb46dfbbda482ec46d7",
            "id": 9679,
            "name": "LandOffsetUnlocked",
            "nameLocation": "914:18:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9673,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "949:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9679,
                  "src": "933:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9675,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "971:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9679,
                  "src": "955:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9677,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountUnlocked",
                  "nameLocation": "986:14:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9679,
                  "src": "978:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "932:69:27"
            },
            "src": "908:94:27"
          },
          {
            "anonymous": false,
            "eventSelector": "b8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68",
            "id": 9687,
            "name": "LandAdminAdded",
            "nameLocation": "1012:14:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9681,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1043:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9687,
                  "src": "1027:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9683,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1065:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9687,
                  "src": "1049:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9685,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1088:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9687,
                  "src": "1072:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1026:68:27"
            },
            "src": "1006:89:27"
          },
          {
            "anonymous": false,
            "eventSelector": "5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560",
            "id": 9695,
            "name": "LandAdminRemoved",
            "nameLocation": "1105:16:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9689,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1138:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9695,
                  "src": "1122:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9691,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1160:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9695,
                  "src": "1144:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9693,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1183:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9695,
                  "src": "1167:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1121:68:27"
            },
            "src": "1099:91:27"
          },
          {
            "canonicalName": "PredictionMarketV3Manager.Land",
            "id": 9712,
            "members": [
              {
                "constant": false,
                "id": 9698,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1225:5:27",
                "nodeType": "VariableDeclaration",
                "scope": 9712,
                "src": "1212:18:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                  "typeString": "contract FantasyERC20"
                },
                "typeName": {
                  "id": 9697,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9696,
                    "name": "FantasyERC20",
                    "nameLocations": [
                      "1212:12:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4229,
                    "src": "1212:12:27"
                  },
                  "referencedDeclaration": 4229,
                  "src": "1212:12:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9700,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1241:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 9712,
                "src": "1236:11:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9699,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1236:4:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9704,
                "mutability": "mutable",
                "name": "admins",
                "nameLocation": "1278:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 9712,
                "src": "1253:31:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 9703,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 9701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1253:24:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 9702,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9706,
                "mutability": "mutable",
                "name": "lockAmount",
                "nameLocation": "1298:10:27",
                "nodeType": "VariableDeclaration",
                "scope": 9712,
                "src": "1290:18:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9705,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1290:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9708,
                "mutability": "mutable",
                "name": "lockUser",
                "nameLocation": "1322:8:27",
                "nodeType": "VariableDeclaration",
                "scope": 9712,
                "src": "1314:16:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9707,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1314:7:27",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9711,
                "mutability": "mutable",
                "name": "realitio",
                "nameLocation": "1355:8:27",
                "nodeType": "VariableDeclaration",
                "scope": 9712,
                "src": "1336:27:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10502",
                  "typeString": "contract IRealityETH_IERC20"
                },
                "typeName": {
                  "id": 9710,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9709,
                    "name": "IRealityETH_IERC20",
                    "nameLocations": [
                      "1336:18:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10502,
                    "src": "1336:18:27"
                  },
                  "referencedDeclaration": 10502,
                  "src": "1336:18:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10502",
                    "typeString": "contract IRealityETH_IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Land",
            "nameLocation": "1201:4:27",
            "nodeType": "StructDefinition",
            "scope": 10488,
            "src": "1194:174:27",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33b22760",
            "id": 9717,
            "mutability": "mutable",
            "name": "lands",
            "nameLocation": "1404:5:27",
            "nodeType": "VariableDeclaration",
            "scope": 10488,
            "src": "1372:37:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
              "typeString": "mapping(address => struct PredictionMarketV3Manager.Land)"
            },
            "typeName": {
              "id": 9716,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9713,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1380:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1372:24:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                "typeString": "mapping(address => struct PredictionMarketV3Manager.Land)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9715,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9714,
                  "name": "Land",
                  "nameLocations": [
                    "1391:4:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9712,
                  "src": "1391:4:27"
                },
                "referencedDeclaration": 9712,
                "src": "1391:4:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                  "typeString": "struct PredictionMarketV3Manager.Land"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "30ccd17a",
            "id": 9720,
            "mutability": "mutable",
            "name": "landTokens",
            "nameLocation": "1430:10:27",
            "nodeType": "VariableDeclaration",
            "scope": 10488,
            "src": "1413:27:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9718,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1413:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9719,
              "nodeType": "ArrayTypeName",
              "src": "1413:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1311758b",
            "id": 9722,
            "mutability": "mutable",
            "name": "landTokensLength",
            "nameLocation": "1459:16:27",
            "nodeType": "VariableDeclaration",
            "scope": 10488,
            "src": "1444:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9721,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1444:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9754,
              "nodeType": "Block",
              "src": "1596:150:27",
              "statements": [
                {
                  "expression": {
                    "id": 9736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9734,
                      "name": "PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9637,
                      "src": "1602:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9735,
                      "name": "_PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9724,
                      "src": "1609:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1602:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9737,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:12:27"
                },
                {
                  "expression": {
                    "id": 9740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9738,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9640,
                      "src": "1620:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1478",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9739,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9727,
                      "src": "1628:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1478",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1620:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 9741,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:14:27"
                },
                {
                  "expression": {
                    "id": 9744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9742,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9642,
                      "src": "1640:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9743,
                      "name": "_lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9729,
                      "src": "1653:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1640:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9745,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:24:27"
                },
                {
                  "expression": {
                    "id": 9752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9746,
                      "name": "realitioFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9645,
                      "src": "1670:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9750,
                          "name": "_realitioLibraryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9731,
                          "src": "1717:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1688:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_RealityETH_ERC20_Factory_$10641_$",
                          "typeString": "function (address) returns (contract RealityETH_ERC20_Factory)"
                        },
                        "typeName": {
                          "id": 9748,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9747,
                            "name": "RealityETH_ERC20_Factory",
                            "nameLocations": [
                              "1692:24:27"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10641,
                            "src": "1692:24:27"
                          },
                          "referencedDeclaration": 10641,
                          "src": "1692:24:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        }
                      },
                      "id": 9751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1688:53:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "src": "1670:71:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                      "typeString": "contract RealityETH_ERC20_Factory"
                    }
                  },
                  "id": 9753,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:71:27"
                }
              ]
            },
            "id": 9755,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9724,
                  "mutability": "mutable",
                  "name": "_PMV3",
                  "nameLocation": "1505:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9755,
                  "src": "1497:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9727,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1523:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9755,
                  "src": "1516:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9726,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9725,
                      "name": "IERC20",
                      "nameLocations": [
                        "1516:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "1516:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "1516:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9729,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "1543:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9755,
                  "src": "1535:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9731,
                  "mutability": "mutable",
                  "name": "_realitioLibraryAddress",
                  "nameLocation": "1568:23:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9755,
                  "src": "1560:31:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1491:104:27"
            },
            "returnParameters": {
              "id": 9733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:27"
            },
            "scope": 10488,
            "src": "1480:266:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9780,
              "nodeType": "Block",
              "src": "1818:177:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9763,
                          "name": "newLockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9757,
                          "src": "1832:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1848:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1832:17:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 9766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1851:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924",
                          "typeString": "literal_string \"Lock amount must be greater than 0\""
                        },
                        "value": "Lock amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924",
                          "typeString": "literal_string \"Lock amount must be greater than 0\""
                        }
                      ],
                      "id": 9762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1824:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:64:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9768,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:64:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9770,
                          "name": "newLockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9757,
                          "src": "1902:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 9771,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9642,
                          "src": "1919:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1902:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206973207468652073616d65",
                        "id": 9773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1931:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb",
                          "typeString": "literal_string \"Lock amount is the same\""
                        },
                        "value": "Lock amount is the same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb",
                          "typeString": "literal_string \"Lock amount is the same\""
                        }
                      ],
                      "id": 9769,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1894:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1894:63:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9775,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:63:27"
                },
                {
                  "expression": {
                    "id": 9778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9776,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9642,
                      "src": "1964:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9777,
                      "name": "newLockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9757,
                      "src": "1977:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1964:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9779,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:26:27"
                }
              ]
            },
            "functionSelector": "3c37db63",
            "id": 9781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9760,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9759,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1808:9:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 570,
                  "src": "1808:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "1808:9:27"
              }
            ],
            "name": "updateLockAmount",
            "nameLocation": "1759:16:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9757,
                  "mutability": "mutable",
                  "name": "newLockAmount",
                  "nameLocation": "1784:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9781,
                  "src": "1776:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1775:23:27"
            },
            "returnParameters": {
              "id": 9761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1818:0:27"
            },
            "scope": 10488,
            "src": "1750:245:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9981,
              "nodeType": "Block",
              "src": "2393:1379:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9799,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2423:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2427:6:27",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2423:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9797,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9640,
                              "src": "2407:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 9798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2413:9:27",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1435,
                            "src": "2407:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 9801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2407:27:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9802,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9642,
                          "src": "2438:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2407:41:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320746f206c6f636b",
                        "id": 9804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d",
                          "typeString": "literal_string \"Not enough tokens to lock\""
                        },
                        "value": "Not enough tokens to lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d",
                          "typeString": "literal_string \"Not enough tokens to lock\""
                        }
                      ],
                      "id": 9796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2399:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:79:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9806,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:79:27"
                },
                {
                  "assignments": [
                    9809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9809,
                      "mutability": "mutable",
                      "name": "landToken",
                      "nameLocation": "2537:9:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9981,
                      "src": "2524:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      },
                      "typeName": {
                        "id": 9808,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9807,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2524:12:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2524:12:27"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2524:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9821,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9813,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9783,
                        "src": "2566:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9814,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9785,
                        "src": "2572:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9815,
                        "name": "tokenAmountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9787,
                        "src": "2580:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9818,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9637,
                            "src": "2608:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2600:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9816,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2600:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2600:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2549:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_FantasyERC20_$4229_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract FantasyERC20)"
                      },
                      "typeName": {
                        "id": 9811,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9810,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2553:12:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4229,
                          "src": "2553:12:27"
                        },
                        "referencedDeclaration": 4229,
                        "src": "2553:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      }
                    },
                    "id": 9820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:65:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2524:90:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2705:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9825,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2695:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2695:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9830,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9637,
                            "src": "2729:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2721:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9828,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2721:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2721:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9822,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9809,
                        "src": "2675:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2685:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2675:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:60:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9833,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:60:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 9838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2822:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 9837,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2812:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2812:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 9840,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2838:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2842:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2838:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9834,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9809,
                        "src": "2792:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 9836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2802:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2792:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 9842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2792:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9843,
                  "nodeType": "ExpressionStatement",
                  "src": "2792:57:27"
                },
                {
                  "assignments": [
                    9846
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9846,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "2912:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9981,
                      "src": "2899:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 9845,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9844,
                          "name": "Land",
                          "nameLocations": [
                            "2899:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "2899:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "2899:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9853,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9847,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "2919:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 9852,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9850,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9809,
                          "src": "2933:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                            "typeString": "contract FantasyERC20"
                          }
                        ],
                        "id": 9849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2925:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2925:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2925:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2919:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2899:45:27"
                },
                {
                  "expression": {
                    "id": 9858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9854,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9846,
                        "src": "2950:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 9856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2955:5:27",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9698,
                      "src": "2950:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9857,
                      "name": "landToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9809,
                      "src": "2963:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "src": "2950:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "id": 9859,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:22:27"
                },
                {
                  "expression": {
                    "id": 9864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9860,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9846,
                        "src": "2978:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 9862,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2983:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9700,
                      "src": "2978:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2992:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2978:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9865,
                  "nodeType": "ExpressionStatement",
                  "src": "2978:18:27"
                },
                {
                  "expression": {
                    "id": 9873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 9866,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9846,
                          "src": "3002:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 9870,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3007:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9704,
                        "src": "3002:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9871,
                      "indexExpression": {
                        "expression": {
                          "id": 9868,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3014:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3018:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3014:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3002:23:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3028:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3002:30:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9874,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:30:27"
                },
                {
                  "expression": {
                    "id": 9879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9875,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9846,
                        "src": "3038:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 9877,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3043:10:27",
                      "memberName": "lockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9706,
                      "src": "3038:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9878,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9642,
                      "src": "3056:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3038:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9880,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:28:27"
                },
                {
                  "expression": {
                    "id": 9886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9881,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9846,
                        "src": "3072:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 9883,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3077:8:27",
                      "memberName": "lockUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9708,
                      "src": "3072:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9884,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3088:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3092:6:27",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3088:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3072:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9887,
                  "nodeType": "ExpressionStatement",
                  "src": "3072:26:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9893,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9809,
                            "src": "3128:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3120:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3120:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3120:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9888,
                        "name": "landTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9720,
                        "src": "3104:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3115:4:27",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3104:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 9895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:35:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9896,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:35:27"
                },
                {
                  "expression": {
                    "id": 9898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3145:18:27",
                    "subExpression": {
                      "id": 9897,
                      "name": "landTokensLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9722,
                      "src": "3145:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9899,
                  "nodeType": "ExpressionStatement",
                  "src": "3145:18:27"
                },
                {
                  "assignments": [
                    9902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9902,
                      "mutability": "mutable",
                      "name": "realitioToken",
                      "nameLocation": "3177:13:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 9981,
                      "src": "3170:20:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1478",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 9901,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9900,
                          "name": "IERC20",
                          "nameLocations": [
                            "3170:6:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1478,
                          "src": "3170:6:27"
                        },
                        "referencedDeclaration": 1478,
                        "src": "3170:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1478",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9915,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 9911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 9905,
                            "name": "tokenToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9790,
                            "src": "3201:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3193:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9903,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3193:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3193:22:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3227:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3219:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9907,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3219:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3219:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3193:36:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 9913,
                      "name": "tokenToAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9790,
                      "src": "3244:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1478",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 9914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3193:64:27",
                    "trueExpression": {
                      "id": 9912,
                      "name": "landToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9809,
                      "src": "3232:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3170:87:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9920,
                              "name": "realitioToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9902,
                              "src": "3350:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 9919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3342:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9918,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3342:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3342:22:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 9916,
                          "name": "realitioFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9645,
                          "src": "3314:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        },
                        "id": 9917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3330:11:27",
                        "memberName": "deployments",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10508,
                        "src": "3314:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) view external returns (address)"
                        }
                      },
                      "id": 9922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3314:51:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3377:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3369:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3369:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3369:10:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3314:65:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9938,
                  "nodeType": "IfStatement",
                  "src": "3310:140:27",
                  "trueBody": {
                    "id": 9937,
                    "nodeType": "Block",
                    "src": "3381:69:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9933,
                                  "name": "realitioToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9902,
                                  "src": "3428:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3420:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9931,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3420:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3420:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9928,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9645,
                              "src": "3389:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3405:14:27",
                            "memberName": "createInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10640,
                            "src": "3389:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 9935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3389:54:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9936,
                        "nodeType": "ExpressionStatement",
                        "src": "3389:54:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9939,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9846,
                        "src": "3455:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 9941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3460:8:27",
                      "memberName": "realitio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9711,
                      "src": "3455:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10502",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9947,
                                  "name": "realitioToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9902,
                                  "src": "3526:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 9946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3518:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9945,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3518:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3518:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9943,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9645,
                              "src": "3490:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$10641",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 9944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3506:11:27",
                            "memberName": "deployments",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10508,
                            "src": "3490:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 9949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3490:51:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9942,
                        "name": "IRealityETH_IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10502,
                        "src": "3471:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRealityETH_IERC20_$10502_$",
                          "typeString": "type(contract IRealityETH_IERC20)"
                        }
                      },
                      "id": 9950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3471:71:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10502",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "src": "3455:87:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRealityETH_IERC20_$10502",
                      "typeString": "contract IRealityETH_IERC20"
                    }
                  },
                  "id": 9952,
                  "nodeType": "ExpressionStatement",
                  "src": "3455:87:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9956,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3615:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3619:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3615:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9960,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3635:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$10488",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$10488",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          ],
                          "id": 9959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3627:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9958,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3627:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3627:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9962,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9642,
                        "src": "3642:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9953,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9640,
                        "src": "3596:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1478",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3602:12:27",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "3596:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9964,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:57:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9966,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3677:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3681:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3677:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9970,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9809,
                            "src": "3697:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 9969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3689:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9968,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3689:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3689:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9974,
                            "name": "tokenToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9790,
                            "src": "3717:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 9973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3709:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9972,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3709:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3709:22:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9976,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9642,
                        "src": "3733:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9965,
                      "name": "LandCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9655,
                      "src": "3665:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 9977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:79:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9978,
                  "nodeType": "EmitStatement",
                  "src": "3660:84:27"
                },
                {
                  "expression": {
                    "id": 9979,
                    "name": "landToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9809,
                    "src": "3758:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "functionReturnParameters": 9795,
                  "id": 9980,
                  "nodeType": "Return",
                  "src": "3751:16:27"
                }
              ]
            },
            "functionSelector": "67d73c91",
            "id": 9982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLand",
            "nameLocation": "2238:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9783,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2268:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9982,
                  "src": "2254:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9782,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9785,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "2292:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9982,
                  "src": "2278:20:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9784,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9787,
                  "mutability": "mutable",
                  "name": "tokenAmountToClaim",
                  "nameLocation": "2312:18:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9982,
                  "src": "2304:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9790,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "2343:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9982,
                  "src": "2336:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9789,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9788,
                      "name": "IERC20",
                      "nameLocations": [
                        "2336:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "2336:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "2336:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2248:112:27"
            },
            "returnParameters": {
              "id": 9795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9982,
                  "src": "2379:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                    "typeString": "contract FantasyERC20"
                  },
                  "typeName": {
                    "id": 9793,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9792,
                      "name": "FantasyERC20",
                      "nameLocations": [
                        "2379:12:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4229,
                      "src": "2379:12:27"
                    },
                    "referencedDeclaration": 4229,
                    "src": "2379:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2378:14:27"
            },
            "scope": 10488,
            "src": "2229:1543:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10070,
              "nodeType": "Block",
              "src": "3842:542:27",
              "statements": [
                {
                  "assignments": [
                    9992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9992,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3861:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10070,
                      "src": "3848:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 9991,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9990,
                          "name": "Land",
                          "nameLocations": [
                            "3848:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "3848:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "3848:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9999,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9993,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "3868:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 9998,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 9996,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9985,
                          "src": "3882:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 9995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3874:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3874:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3874:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3868:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3848:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10001,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9992,
                          "src": "3908:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10002,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3913:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9700,
                        "src": "3908:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "id": 10003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        },
                        "value": "Land is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        }
                      ],
                      "id": 10000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3900:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3900:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10005,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:42:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10007,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9992,
                            "src": "3956:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 10008,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3961:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9704,
                          "src": "3956:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10011,
                        "indexExpression": {
                          "expression": {
                            "id": 10009,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3968:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3972:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3968:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3956:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3981:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3948:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10014,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:57:27"
                },
                {
                  "assignments": [
                    10016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10016,
                      "mutability": "mutable",
                      "name": "amountToUnlock",
                      "nameLocation": "4020:14:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10070,
                      "src": "4012:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10015,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4012:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10019,
                  "initialValue": {
                    "expression": {
                      "id": 10017,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9992,
                      "src": "4037:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                      }
                    },
                    "id": 10018,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4042:10:27",
                    "memberName": "lockAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9706,
                    "src": "4037:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4012:40:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10023,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9992,
                          "src": "4074:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4079:8:27",
                        "memberName": "lockUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9708,
                        "src": "4074:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10025,
                        "name": "amountToUnlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10016,
                        "src": "4089:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10020,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9640,
                        "src": "4059:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1478",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4065:8:27",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1445,
                      "src": "4059:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:45:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10027,
                  "nodeType": "ExpressionStatement",
                  "src": "4059:45:27"
                },
                {
                  "expression": {
                    "id": 10032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10028,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9992,
                        "src": "4135:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10030,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4140:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9700,
                      "src": "4135:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4149:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4135:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10033,
                  "nodeType": "ExpressionStatement",
                  "src": "4135:19:27"
                },
                {
                  "expression": {
                    "id": 10038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10034,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9992,
                        "src": "4160:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10036,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4165:10:27",
                      "memberName": "lockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9706,
                      "src": "4160:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 10037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4178:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4160:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10039,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:19:27"
                },
                {
                  "expression": {
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10040,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9992,
                        "src": "4185:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4190:8:27",
                      "memberName": "lockUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9708,
                      "src": "4185:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4209:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4201:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4201:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4201:10:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4185:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "4185:26:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10052,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9985,
                                "src": "4260:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4252:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10050,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4252:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4252:18:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10049,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "4239:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 10054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4239:32:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4272:5:27",
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "4239:38:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4239:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10057,
                  "nodeType": "ExpressionStatement",
                  "src": "4239:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10059,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4304:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4308:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4304:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10063,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9985,
                            "src": "4324:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4316:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10061,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4316:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4316:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10065,
                        "name": "amountToUnlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10016,
                        "src": "4336:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10058,
                      "name": "LandDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9663,
                      "src": "4291:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4291:60:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10067,
                  "nodeType": "EmitStatement",
                  "src": "4286:65:27"
                },
                {
                  "expression": {
                    "id": 10068,
                    "name": "amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10016,
                    "src": "4365:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9989,
                  "id": 10069,
                  "nodeType": "Return",
                  "src": "4358:21:27"
                }
              ]
            },
            "functionSelector": "70e92078",
            "id": 10071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableLand",
            "nameLocation": "3785:11:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9985,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3804:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10071,
                  "src": "3797:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 9984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9983,
                      "name": "IERC20",
                      "nameLocations": [
                        "3797:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3797:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3797:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3796:18:27"
            },
            "returnParameters": {
              "id": 9989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10071,
                  "src": "3833:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3833:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3832:9:27"
            },
            "scope": 10488,
            "src": "3776:608:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10173,
              "nodeType": "Block",
              "src": "4453:680:27",
              "statements": [
                {
                  "assignments": [
                    10081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10081,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4472:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10173,
                      "src": "4459:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10080,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10079,
                          "name": "Land",
                          "nameLocations": [
                            "4459:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "4459:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "4459:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10088,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10082,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "4479:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10087,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10085,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10074,
                          "src": "4493:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4485:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10083,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4485:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4485:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4479:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4459:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4519:12:27",
                        "subExpression": {
                          "expression": {
                            "id": 10090,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10081,
                            "src": "4520:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 10091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4525:6:27",
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9700,
                          "src": "4520:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4533:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        },
                        "value": "Land is already active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        }
                      ],
                      "id": 10089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4511:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4511:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10095,
                  "nodeType": "ExpressionStatement",
                  "src": "4511:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10097,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10081,
                            "src": "4572:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 10098,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4577:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9704,
                          "src": "4572:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10101,
                        "indexExpression": {
                          "expression": {
                            "id": 10099,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4584:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4588:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4584:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4572:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4597:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4564:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4564:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10104,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:57:27"
                },
                {
                  "assignments": [
                    10106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10106,
                      "mutability": "mutable",
                      "name": "amountToLock",
                      "nameLocation": "4636:12:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10173,
                      "src": "4628:20:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4628:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10117,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10107,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9642,
                        "src": "4651:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 10108,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10081,
                          "src": "4664:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10109,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4669:10:27",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9706,
                        "src": "4664:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4651:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 10115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4713:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 10116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4651:63:27",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10111,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9642,
                        "src": "4682:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 10112,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10081,
                          "src": "4695:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10113,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4700:10:27",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9706,
                        "src": "4695:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4682:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4628:86:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4787:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4791:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4787:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10125,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4807:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$10488",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$10488",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          ],
                          "id": 10124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4799:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10123,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4799:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4799:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10127,
                        "name": "amountToLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "4814:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10118,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9640,
                        "src": "4768:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1478",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4774:12:27",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "4768:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4768:59:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10129,
                  "nodeType": "ExpressionStatement",
                  "src": "4768:59:27"
                },
                {
                  "expression": {
                    "id": 10134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10130,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10081,
                        "src": "4857:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4862:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9700,
                      "src": "4857:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4871:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4857:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10135,
                  "nodeType": "ExpressionStatement",
                  "src": "4857:18:27"
                },
                {
                  "expression": {
                    "id": 10143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10136,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10081,
                        "src": "4881:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4886:10:27",
                      "memberName": "lockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9706,
                      "src": "4881:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10139,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10081,
                          "src": "4899:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10140,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4904:10:27",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9706,
                        "src": "4899:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10141,
                        "name": "amountToLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "4917:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4899:30:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4881:48:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10144,
                  "nodeType": "ExpressionStatement",
                  "src": "4881:48:27"
                },
                {
                  "expression": {
                    "id": 10150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10145,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10081,
                        "src": "4935:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10147,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4940:8:27",
                      "memberName": "lockUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9708,
                      "src": "4935:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10148,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4951:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4955:6:27",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4951:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4935:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10151,
                  "nodeType": "ExpressionStatement",
                  "src": "4935:26:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10155,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10074,
                                "src": "5012:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5004:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10153,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5004:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5004:18:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10152,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4229,
                          "src": "4991:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4229_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4991:32:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5024:7:27",
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "4991:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10160,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:42:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5057:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5061:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5057:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10166,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10074,
                            "src": "5077:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5069:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5069:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5069:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10168,
                        "name": "amountToLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "5089:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10161,
                      "name": "LandEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9671,
                      "src": "5045:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5045:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10170,
                  "nodeType": "EmitStatement",
                  "src": "5040:62:27"
                },
                {
                  "expression": {
                    "id": 10171,
                    "name": "amountToLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10106,
                    "src": "5116:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10078,
                  "id": 10172,
                  "nodeType": "Return",
                  "src": "5109:19:27"
                }
              ]
            },
            "functionSelector": "5d341ae5",
            "id": 10174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableLand",
            "nameLocation": "4397:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10074,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4415:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10174,
                  "src": "4408:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10073,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10072,
                      "name": "IERC20",
                      "nameLocations": [
                        "4408:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4408:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4408:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4407:18:27"
            },
            "returnParameters": {
              "id": 10078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10077,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10174,
                  "src": "4444:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4444:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4443:9:27"
            },
            "scope": 10488,
            "src": "4388:745:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10254,
              "nodeType": "Block",
              "src": "5212:515:27",
              "statements": [
                {
                  "assignments": [
                    10184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10184,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5231:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10254,
                      "src": "5218:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10183,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10182,
                          "name": "Land",
                          "nameLocations": [
                            "5218:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "5218:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "5218:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10191,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10185,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "5238:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10190,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10188,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10177,
                          "src": "5252:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5244:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5244:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5244:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5238:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5218:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10193,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10184,
                          "src": "5278:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10194,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5283:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9700,
                        "src": "5278:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5291:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5270:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10197,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10199,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10184,
                            "src": "5327:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 10200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5332:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9704,
                          "src": "5327:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10203,
                        "indexExpression": {
                          "expression": {
                            "id": 10201,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5339:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5343:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5339:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5327:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5352:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5319:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5319:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10206,
                  "nodeType": "ExpressionStatement",
                  "src": "5319:57:27"
                },
                {
                  "assignments": [
                    10208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10208,
                      "mutability": "mutable",
                      "name": "amountToUnlock",
                      "nameLocation": "5391:14:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10254,
                      "src": "5383:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10207,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5383:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10219,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10209,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10184,
                          "src": "5408:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5413:10:27",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9706,
                        "src": "5408:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 10211,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9642,
                        "src": "5426:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5408:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 10217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5470:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 10218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5408:63:27",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10213,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10184,
                          "src": "5439:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10214,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5444:10:27",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9706,
                        "src": "5439:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10215,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9642,
                        "src": "5457:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5439:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5383:88:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10220,
                      "name": "amountToUnlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10208,
                      "src": "5482:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5499:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5482:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10241,
                  "nodeType": "IfStatement",
                  "src": "5478:139:27",
                  "trueBody": {
                    "id": 10240,
                    "nodeType": "Block",
                    "src": "5502:115:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10226,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5525:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5529:6:27",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5525:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10228,
                              "name": "amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10208,
                              "src": "5537:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10223,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9640,
                              "src": "5510:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5516:8:27",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1445,
                            "src": "5510:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 10229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5510:42:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10230,
                        "nodeType": "ExpressionStatement",
                        "src": "5510:42:27"
                      },
                      {
                        "expression": {
                          "id": 10238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10231,
                              "name": "land",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10184,
                              "src": "5560:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                                "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                              }
                            },
                            "id": 10233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5565:10:27",
                            "memberName": "lockAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9706,
                            "src": "5560:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 10234,
                                "name": "land",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10184,
                                "src": "5578:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                                  "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                                }
                              },
                              "id": 10235,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5583:10:27",
                              "memberName": "lockAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9706,
                              "src": "5578:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 10236,
                              "name": "amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10208,
                              "src": "5596:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5578:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5560:50:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10239,
                        "nodeType": "ExpressionStatement",
                        "src": "5560:50:27"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10243,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5647:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5651:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5647:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10247,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10177,
                            "src": "5667:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5659:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5659:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5659:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10249,
                        "name": "amountToUnlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10208,
                        "src": "5679:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10242,
                      "name": "LandOffsetUnlocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9679,
                      "src": "5628:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5628:66:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10251,
                  "nodeType": "EmitStatement",
                  "src": "5623:71:27"
                },
                {
                  "expression": {
                    "id": 10252,
                    "name": "amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10208,
                    "src": "5708:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10181,
                  "id": 10253,
                  "nodeType": "Return",
                  "src": "5701:21:27"
                }
              ]
            },
            "functionSelector": "3ccd4145",
            "id": 10255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockOffsetFromLand",
            "nameLocation": "5146:20:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10177,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "5174:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10255,
                  "src": "5167:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10176,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10175,
                      "name": "IERC20",
                      "nameLocations": [
                        "5167:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5167:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5167:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5166:18:27"
            },
            "returnParameters": {
              "id": 10181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10255,
                  "src": "5203:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5203:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5202:9:27"
            },
            "scope": 10488,
            "src": "5137:590:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10317,
              "nodeType": "Block",
              "src": "5797:372:27",
              "statements": [
                {
                  "assignments": [
                    10265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10265,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5816:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "5803:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10263,
                          "name": "Land",
                          "nameLocations": [
                            "5803:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "5803:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "5803:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10272,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10266,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "5823:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10271,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10269,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10258,
                          "src": "5837:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5829:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5829:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5829:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5823:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5803:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10274,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10265,
                          "src": "5863:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10275,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5868:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9700,
                        "src": "5863:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5876:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5855:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10278,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10280,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10265,
                            "src": "5912:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 10281,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5917:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9704,
                          "src": "5912:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10284,
                        "indexExpression": {
                          "expression": {
                            "id": 10282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5924:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5928:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5924:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5912:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5937:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5904:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5904:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10287,
                  "nodeType": "ExpressionStatement",
                  "src": "5904:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6045:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10293,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "6035:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6035:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10296,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10260,
                        "src": "6061:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10288,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10265,
                          "src": "6014:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10291,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6019:5:27",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9698,
                        "src": "6014:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6025:9:27",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "6014:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6014:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10298,
                  "nodeType": "ExpressionStatement",
                  "src": "6014:53:27"
                },
                {
                  "expression": {
                    "id": 10305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10299,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10265,
                          "src": "6074:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10302,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6079:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9704,
                        "src": "6074:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10303,
                      "indexExpression": {
                        "id": 10301,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10260,
                        "src": "6086:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6074:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6095:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6074:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10306,
                  "nodeType": "ExpressionStatement",
                  "src": "6074:25:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6126:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6130:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6126:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10312,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10258,
                            "src": "6146:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6138:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6138:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6138:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10314,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10260,
                        "src": "6158:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10307,
                      "name": "LandAdminAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9687,
                      "src": "6111:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6111:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10316,
                  "nodeType": "EmitStatement",
                  "src": "6106:58:27"
                }
              ]
            },
            "functionSelector": "4fe62a5b",
            "id": 10318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAdminToLand",
            "nameLocation": "5740:14:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10258,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "5762:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "5755:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10256,
                      "name": "IERC20",
                      "nameLocations": [
                        "5755:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5755:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5755:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10260,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "5781:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "5773:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5773:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5754:33:27"
            },
            "returnParameters": {
              "id": 10262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5797:0:27"
            },
            "scope": 10488,
            "src": "5731:438:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10380,
              "nodeType": "Block",
              "src": "6244:380:27",
              "statements": [
                {
                  "assignments": [
                    10328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10328,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "6263:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10380,
                      "src": "6250:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10326,
                          "name": "Land",
                          "nameLocations": [
                            "6250:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "6250:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "6250:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10335,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10329,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "6270:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10334,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10332,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10321,
                          "src": "6284:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6276:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6276:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6276:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6270:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6250:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10337,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10328,
                          "src": "6310:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6315:6:27",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9700,
                        "src": "6310:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 10339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6323:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 10336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6302:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6302:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10341,
                  "nodeType": "ExpressionStatement",
                  "src": "6302:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 10343,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10328,
                            "src": "6359:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 10344,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6364:6:27",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9704,
                          "src": "6359:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10347,
                        "indexExpression": {
                          "expression": {
                            "id": 10345,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6371:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6375:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6371:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6359:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 10348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6384:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 10342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6351:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6351:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10350,
                  "nodeType": "ExpressionStatement",
                  "src": "6351:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 10357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6497:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 10356,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "6487:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6487:24:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10359,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10323,
                        "src": "6513:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10351,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10328,
                          "src": "6465:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6470:5:27",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9698,
                        "src": "6465:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4229",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 10355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6476:10:27",
                      "memberName": "revokeRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "6465:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6465:54:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10361,
                  "nodeType": "ExpressionStatement",
                  "src": "6465:54:27"
                },
                {
                  "expression": {
                    "id": 10368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10362,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10328,
                          "src": "6526:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10365,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6531:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9704,
                        "src": "6526:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10366,
                      "indexExpression": {
                        "id": 10364,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10323,
                        "src": "6538:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6526:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6547:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6526:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10369,
                  "nodeType": "ExpressionStatement",
                  "src": "6526:26:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10371,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6581:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6585:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6581:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10375,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10321,
                            "src": "6601:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6593:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6593:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6593:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10377,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10323,
                        "src": "6613:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10370,
                      "name": "LandAdminRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "6564:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6564:55:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10379,
                  "nodeType": "EmitStatement",
                  "src": "6559:60:27"
                }
              ]
            },
            "functionSelector": "86b5c5b1",
            "id": 10381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdminFromLand",
            "nameLocation": "6182:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10321,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "6209:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10381,
                  "src": "6202:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10320,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10319,
                      "name": "IERC20",
                      "nameLocations": [
                        "6202:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "6202:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "6202:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10323,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "6228:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10381,
                  "src": "6220:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6220:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6201:33:27"
            },
            "returnParameters": {
              "id": 10325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6244:0:27"
            },
            "scope": 10488,
            "src": "6173:451:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10409,
              "nodeType": "Block",
              "src": "6722:104:27",
              "statements": [
                {
                  "assignments": [
                    10393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10393,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "6741:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10409,
                      "src": "6728:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10392,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10391,
                          "name": "Land",
                          "nameLocations": [
                            "6728:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "6728:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "6728:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10400,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10394,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "6748:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10399,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10397,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10384,
                          "src": "6762:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6754:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6754:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6754:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6748:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6728:47:27"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10401,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10393,
                        "src": "6789:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6794:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9700,
                      "src": "6789:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 10403,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10393,
                          "src": "6804:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6809:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9704,
                        "src": "6804:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10406,
                      "indexExpression": {
                        "id": 10405,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10386,
                        "src": "6816:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6804:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6789:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10390,
                  "id": 10408,
                  "nodeType": "Return",
                  "src": "6782:39:27"
                }
              ]
            },
            "functionSelector": "25c72059",
            "id": 10410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToCreateMarket",
            "nameLocation": "6637:23:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10384,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "6668:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10410,
                  "src": "6661:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10382,
                      "name": "IERC20",
                      "nameLocations": [
                        "6661:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "6661:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "6661:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10386,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6689:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10410,
                  "src": "6681:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6660:34:27"
            },
            "returnParameters": {
              "id": 10390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10410,
                  "src": "6716:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10388,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6716:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6715:6:27"
            },
            "scope": 10488,
            "src": "6628:198:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10438,
              "nodeType": "Block",
              "src": "6927:104:27",
              "statements": [
                {
                  "assignments": [
                    10422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10422,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "6946:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10438,
                      "src": "6933:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10421,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10420,
                          "name": "Land",
                          "nameLocations": [
                            "6933:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "6933:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "6933:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10429,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10423,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "6953:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10428,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10426,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10413,
                          "src": "6967:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6959:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10424,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6959:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6959:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6953:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6933:47:27"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10430,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10422,
                        "src": "6994:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10431,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6999:6:27",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9700,
                      "src": "6994:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 10432,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10422,
                          "src": "7009:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 10433,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7014:6:27",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9704,
                        "src": "7009:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10435,
                      "indexExpression": {
                        "id": 10434,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "7021:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7009:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6994:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10419,
                  "id": 10437,
                  "nodeType": "Return",
                  "src": "6987:39:27"
                }
              ]
            },
            "functionSelector": "d1aeb5c2",
            "id": 10439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToResolveMarket",
            "nameLocation": "6839:24:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10413,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "6871:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10439,
                  "src": "6864:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10412,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10411,
                      "name": "IERC20",
                      "nameLocations": [
                        "6864:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "6864:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "6864:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10415,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6892:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10439,
                  "src": "6884:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6884:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6863:34:27"
            },
            "returnParameters": {
              "id": 10419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10418,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10439,
                  "src": "6921:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6921:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6920:6:27"
            },
            "scope": 10488,
            "src": "6830:201:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10460,
              "nodeType": "Block",
              "src": "7113:83:27",
              "statements": [
                {
                  "assignments": [
                    10449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10449,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "7132:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10460,
                      "src": "7119:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10448,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10447,
                          "name": "Land",
                          "nameLocations": [
                            "7119:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "7119:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "7119:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10456,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10450,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "7139:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10455,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10453,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10442,
                          "src": "7153:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7145:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7145:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7145:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7139:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7119:47:27"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 10457,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10449,
                      "src": "7180:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                      }
                    },
                    "id": 10458,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7185:6:27",
                    "memberName": "active",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9700,
                    "src": "7180:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10446,
                  "id": 10459,
                  "nodeType": "Return",
                  "src": "7173:18:27"
                }
              ]
            },
            "functionSelector": "d13acee1",
            "id": 10461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIERC20TokenSocial",
            "nameLocation": "7044:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10442,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "7071:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "7064:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10441,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10440,
                      "name": "IERC20",
                      "nameLocations": [
                        "7064:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "7064:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "7064:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7063:20:27"
            },
            "returnParameters": {
              "id": 10446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "7107:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7107:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7106:6:27"
            },
            "scope": 10488,
            "src": "7035:161:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10486,
              "nodeType": "Block",
              "src": "7284:89:27",
              "statements": [
                {
                  "assignments": [
                    10473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10473,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "7303:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10486,
                      "src": "7290:17:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 10472,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10471,
                          "name": "Land",
                          "nameLocations": [
                            "7290:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9712,
                          "src": "7290:4:27"
                        },
                        "referencedDeclaration": 9712,
                        "src": "7290:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10480,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10474,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9717,
                      "src": "7310:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$9712_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 10479,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 10477,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10464,
                          "src": "7324:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7316:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7316:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7316:20:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7310:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$9712_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7290:47:27"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 10481,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10473,
                        "src": "7351:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$9712_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 10482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7356:6:27",
                      "memberName": "admins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9704,
                      "src": "7351:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 10484,
                    "indexExpression": {
                      "id": 10483,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10466,
                      "src": "7363:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7351:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10470,
                  "id": 10485,
                  "nodeType": "Return",
                  "src": "7344:24:27"
                }
              ]
            },
            "functionSelector": "791e0519",
            "id": 10487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLandAdmin",
            "nameLocation": "7209:11:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10464,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "7228:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10487,
                  "src": "7221:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10463,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10462,
                      "name": "IERC20",
                      "nameLocations": [
                        "7221:6:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "7221:6:27"
                    },
                    "referencedDeclaration": 1478,
                    "src": "7221:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10466,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7249:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10487,
                  "src": "7241:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7241:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7220:34:27"
            },
            "returnParameters": {
              "id": 10470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10487,
                  "src": "7278:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7277:6:27"
            },
            "scope": 10488,
            "src": "7200:173:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10489,
        "src": "286:7089:27",
        "usedErrors": []
      }
    ],
    "src": "32:7344:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "344": {
      "events": {
        "0x928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenToAnswer",
              "type": "address"
            }
          ],
          "name": "LandCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "name": "LandAdminAdded",
          "type": "event"
        },
        "0x5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "name": "LandAdminRemoved",
          "type": "event"
        },
        "0xba6e51248e93514eb089243e4d08f26db16ff133606694000e7124a41ee5deb4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenToAnswer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountLocked",
              "type": "uint256"
            }
          ],
          "name": "LandCreated",
          "type": "event"
        },
        "0x76f76e951d717cb73ae423c4e4a029c5dde6ef38673c8f6a20cb9eb5025de595": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountUnlocked",
              "type": "uint256"
            }
          ],
          "name": "LandDisabled",
          "type": "event"
        },
        "0x9daf897774d766e38773bbeaf2f32d93fed4091373b77ebb7f5aee37417d1ab1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountLocked",
              "type": "uint256"
            }
          ],
          "name": "LandEnabled",
          "type": "event"
        },
        "0x762d0a2a8e474a7f467752b8c7d24a08142b5a877a95ceb46dfbbda482ec46d7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountUnlocked",
              "type": "uint256"
            }
          ],
          "name": "LandOffsetUnlocked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xcA9E2910358F3d7BbBf14238Bdf4d7bb2c5aa729",
      "transactionHash": "0x219b71418b1b93cce9e368fe54def232ee1def10a8f3a39ec35308058faf3d31"
    },
    "80001": {
      "events": {
        "0x928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenToAnswer",
              "type": "address"
            }
          ],
          "name": "LandCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xAce8CEecC26df9618F11b99eDB5cebdb96773a6D",
      "transactionHash": "0x43fcbeeda6106eb55a1fd83f9b0efb4202ef9d30af97092bb873b42483362b99"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2024-01-13T14:58:18.653Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}