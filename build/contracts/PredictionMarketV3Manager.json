{
  "contractName": "PredictionMarketV3Manager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PMV3",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_realitioLibraryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "LandAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenToAnswer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountLocked",
          "type": "uint256"
        }
      ],
      "name": "LandCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountUnlocked",
          "type": "uint256"
        }
      ],
      "name": "LandDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountLocked",
          "type": "uint256"
        }
      ],
      "name": "LandEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountUnlocked",
          "type": "uint256"
        }
      ],
      "name": "LandOffsetUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PMV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lands",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "lockAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lockUser",
          "type": "address"
        },
        {
          "internalType": "contract IRealityETH_IERC20",
          "name": "realitio",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realitioFactory",
      "outputs": [
        {
          "internalType": "contract RealityETH_ERC20_Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLockAmount",
          "type": "uint256"
        }
      ],
      "name": "updateLockAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountToClaim",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAnswer",
          "type": "address"
        }
      ],
      "name": "createLand",
      "outputs": [
        {
          "internalType": "contract FantasyERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "disableLand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "enableLand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        }
      ],
      "name": "unlockOffsetFromLand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdminToLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "landToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdminFromLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToCreateMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAllowedToResolveMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        }
      ],
      "name": "isIERC20TokenSocial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "marketToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isLandAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PMV3\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_realitioLibraryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"LandAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenToAnswer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLocked\",\"type\":\"uint256\"}],\"name\":\"LandCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnlocked\",\"type\":\"uint256\"}],\"name\":\"LandDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLocked\",\"type\":\"uint256\"}],\"name\":\"LandEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnlocked\",\"type\":\"uint256\"}],\"name\":\"LandOffsetUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PMV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdminToLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountToClaim\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAnswer\",\"type\":\"address\"}],\"name\":\"createLand\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"disableLand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"enableLand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToCreateMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAllowedToResolveMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"}],\"name\":\"isIERC20TokenSocial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"marketToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isLandAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lands\",\"outputs\":[{\"internalType\":\"contract FantasyERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lockAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lockUser\",\"type\":\"address\"},{\"internalType\":\"contract IRealityETH_IERC20\",\"name\":\"realitio\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realitioFactory\",\"outputs\":[{\"internalType\":\"contract RealityETH_ERC20_Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdminFromLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"landToken\",\"type\":\"address\"}],\"name\":\"unlockOffsetFromLand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLockAmount\",\"type\":\"uint256\"}],\"name\":\"updateLockAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarketV3Manager.sol\":\"PredictionMarketV3Manager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x6eabd0f1326073b2aaf4298cb3b15b7cfc96966586dbaca2f126409f4fd11688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b67ef6927ae0b5afd4faf7cf6bf6bce6ad0ebe3b07bd75ae24891ecd8ddf2c4\",\"dweb:/ipfs/QmfLFWECbFNfb9Vh1ftmj1E6KmHa8wJkpzaWgBvujo56Wp\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"project:/contracts/FantasyERC20.sol\":{\"keccak256\":\"0xff65ee1c80ebce18a3172dc4b45560df80e6b844d7df449d951f7eea56339661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0990a3f351247eb6d9af3fe1c9b9508cdefb0a45cb3996c603991aa472c5d7d\",\"dweb:/ipfs/QmQKMBk8L7HhDZ5bZZdYfTYwFbEL2muL6PqFQw9rB8piis\"]},\"project:/contracts/IPredictionMarketV3Factory.sol\":{\"keccak256\":\"0xa3de4b1938216555f6c8cd7d1605d68e5055ba5c3c8f415b8062d1a2bcc7b83e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e116fb3c70ac1629e9b2d33e69a3cb7ecb0b264e3b9cef2efbc61c694afcfcf\",\"dweb:/ipfs/QmWSZ3MFxLwhV87mqkcadeG3qRnxET21PoHQ8vNQkejgYT\"]},\"project:/contracts/IRealityETH_ERC20.sol\":{\"keccak256\":\"0x829f84252e4c06a9563be80b9bd93d4eb875ac865629bc312c20c2fc48a27c67\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4486fd8f19077689309998e39f63e47a6c84ef819c708887460d24cb6748cc98\",\"dweb:/ipfs/QmcFNnjyJfbh885rV7YW3WZfP1xRwHmmoVfGyTZyjhhk7N\"]},\"project:/contracts/PredictionMarketV3Manager.sol\":{\"keccak256\":\"0xa0cc319980f236451a18547b5374f4d3a52728b48ecc4d79ba79e01cb3238475\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e6515202c510f8b5c5c6a9506126e238f222f24e894527e4eb645ceb92cbb4\",\"dweb:/ipfs/QmcDfwp8y5KLqM23N1Lq3knPedqtq8wf6WkNukAjUgMPmT\"]},\"project:/contracts/RealityETH_ERC20_Factory.sol\":{\"keccak256\":\"0xfa3c12a43c9d3bb54a90a050a33f8fc9b97cb1cc46c8f9d22a83d3d042131c61\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8e73d6c105df45f7d43fc8b5b86855d6c53ea4cef89ff848d986fbf53d0e2473\",\"dweb:/ipfs/QmSkFHJZX61HZmfw49j28R14u6sXshcPCKVQtwVwUmTx8m\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b506040516200466d3803806200466d833981016040819052620000349162000127565b6200003f33620000b0565b600180556001600160a01b03808516608052831660a052600282905560405181906200006b9062000100565b6001600160a01b039091168152602001604051809103906000f08015801562000098573d6000803e3d6000fd5b506001600160a01b031660c052506200018392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109ef8062003c7e83390190565b6001600160a01b03811681146200012457600080fd5b50565b600080600080608085870312156200013e57600080fd5b84516200014b816200010e565b60208601519094506200015e816200010e565b60408601516060870151919450925062000178816200010e565b939692955090935050565b60805160a05160c051613a85620001f9600039600081816102f701528181610e1a01528181610eb80152610f36015260008181610403015281816106300152818161093f01528181610ab101528181610fe8015261118a01526000818161017901528181610bda0152610c650152613a856000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c80636e3dd8ba11620000c75780638da5cb5b11620000865780638da5cb5b1462000394578063d13acee114620003a6578063d1aeb5c214620001b4578063d8df5dc114620003dc578063f2fde38b14620003e6578063fc0c546a14620003fd57600080fd5b80636e3dd8ba14620002f157806370e920781462000319578063715018a61462000330578063791e0519146200033a57806386b5c5b1146200037d57600080fd5b80633c37db6311620001145780633c37db63146200027c5780633ccd414514620002955780634fe62a5b14620002ac5780635d341ae514620002c357806367d73c9114620002da57600080fd5b80631311758b14620001565780631cbe8a65146200017357806325c7205914620001b457806330ccd17a14620001dc57806333b2276014620001f3575b600080fd5b6200016060055481565b6040519081526020015b60405180910390f35b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016200016a565b620001cb620001c53660046200155f565b62000425565b60405190151581526020016200016a565b6200019b620001ed3660046200159d565b6200047a565b6200024562000204366004620015b7565b600360208190526000918252604090912080546002820154928201546004909201546001600160a01b0380831694600160a01b90930460ff16938116911685565b604080516001600160a01b039687168152941515602086015284019290925283166060830152909116608082015260a0016200016a565b620002936200028d3660046200159d565b620004a5565b005b62000160620002a6366004620015b7565b62000568565b62000293620002bd3660046200155f565b62000709565b62000160620002d4366004620015b7565b6200084e565b6200019b620002eb36600462001689565b62000a8d565b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b620001606200032a366004620015b7565b620010bf565b62000293620012b8565b620001cb6200034b3660046200155f565b6001600160a01b0391821660009081526003602090815260408083209390941682526001909201909152205460ff1690565b620002936200038e3660046200155f565b620012d0565b6000546001600160a01b03166200019b565b620001cb620003b7366004620015b7565b6001600160a01b0316600090815260036020526040902054600160a01b900460ff1690565b6200016060025481565b62000293620003f7366004620015b7565b62001410565b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03821660009081526003602052604081208054600160a01b900460ff1680156200047057506001600160a01b038316600090815260018201602052604090205460ff165b9150505b92915050565b600481815481106200048b57600080fd5b6000918252602090912001546001600160a01b0316905081565b620004af6200148f565b60008111620005105760405162461bcd60e51b815260206004820152602260248201527f4c6f636b20616d6f756e74206d7573742062652067726561746572207468616e604482015261020360f41b60648201526084015b60405180910390fd5b6002548103620005635760405162461bcd60e51b815260206004820152601760248201527f4c6f636b20616d6f756e74206973207468652073616d65000000000000000000604482015260640162000507565b600255565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff16620005ab5760405162461bcd60e51b8152600401620005079062001712565b33600090815260018201602052604090205460ff16620005df5760405162461bcd60e51b815260040162000507906200173f565b6000600254826002015411620005f75760006200060b565b60025482600201546200060b919062001784565b90508015620006c15760405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801562000682573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a891906200179a565b50808260020154620006bb919062001784565b60028301555b6040518181526001600160a01b0385169033907f762d0a2a8e474a7f467752b8c7d24a08142b5a877a95ceb46dfbbda482ec46d7906020015b60405180910390a39392505050565b6001600160a01b03821660009081526003602052604090208054600160a01b900460ff166200074c5760405162461bcd60e51b8152600401620005079062001712565b33600090815260018201602052604090205460ff16620007805760405162461bcd60e51b815260040162000507906200173f565b8054604051632f2ff15d60e01b815260008051602062003a3083398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b158015620007dc57600080fd5b505af1158015620007f1573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff1615620008ba5760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b604482015260640162000507565b33600090815260018201602052604090205460ff16620008ee5760405162461bcd60e51b815260040162000507906200173f565b6000816002015460025411620009065760006200091a565b81600201546002546200091a919062001784565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801562000991573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b791906200179a565b50815460ff60a01b1916600160a01b1782556002820154620009db908290620017be565b60028301556003820180546001600160a01b0319163317905560408051631fa5d41d60e11b815290516001600160a01b03861691633f4ba83a91600480830192600092919082900301818387803b15801562000a3657600080fd5b505af115801562000a4b573d6000803e3d6000fd5b50506040518381526001600160a01b03871692503391507f9daf897774d766e38773bbeaf2f32d93fed4091373b77ebb7f5aee37417d1ab190602001620006fa565b6002546040516370a0823160e01b8152336004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801562000af9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1f9190620017d4565b101562000b6f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320746f206c6f636b00000000000000604482015260640162000507565b6001600160a01b03821662000bd35760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b606482015260840162000507565b60008585857f000000000000000000000000000000000000000000000000000000000000000060008060405162000c0a906200153b565b62000c1b9695949392919062001836565b604051809103906000f08015801562000c38573d6000803e3d6000fd5b50604051632f2ff15d60e01b815260008051602062003a3083398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b15801562000cb657600080fd5b505af115801562000ccb573d6000803e3d6000fd5b5050604051632f2ff15d60e01b815260008051602062003a3083398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b15801562000d2657600080fd5b505af115801562000d3b573d6000803e3d6000fd5b5050506001600160a01b038216600081815260036020818152604080842080546001600160a81b0319168617600160a01b178155338086526001808301909452918520805460ff191684179055600280549082015592830180546001600160a01b0319908116909217905560048054928301815584527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9091018054909116909317909255600580549293509062000df38362001890565b909155505060405163316b373960e01b81526001600160a01b0385811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000e64573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e8a9190620018ac565b6001600160a01b03160362000f1757604051633b937bbb60e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b15801562000efd57600080fd5b505af115801562000f12573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa15801562000f7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa49190620018ac565b600482810180546001600160a01b0319166001600160a01b039384161790556002546040516323b872dd60e01b8152339281019290925230602483015260448201527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af115801562001034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200105a91906200179a565b50836001600160a01b0316826001600160a01b0316336001600160a01b03167fba6e51248e93514eb089243e4d08f26db16ff133606694000e7124a41ee5deb4600254604051620010ad91815260200190565b60405180910390a45095945050505050565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff16620011265760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b604482015260640162000507565b33600090815260018201602052604090205460ff166200115a5760405162461bcd60e51b815260040162000507906200173f565b6002810154600382015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015620011d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011fc91906200179a565b50815460ff60a01b191682556000600283018190556003830180546001600160a01b031916905560408051638456cb5960e01b815290516001600160a01b03871692638456cb59926004808201939182900301818387803b1580156200126157600080fd5b505af115801562001276573d6000803e3d6000fd5b50506040518381526001600160a01b03871692503391507f76f76e951d717cb73ae423c4e4a029c5dde6ef38673c8f6a20cb9eb5025de59590602001620006fa565b620012c26200148f565b620012ce6000620014eb565b565b6001600160a01b03821660009081526003602052604090208054600160a01b900460ff16620013135760405162461bcd60e51b8152600401620005079062001712565b33600090815260018201602052604090205460ff16620013475760405162461bcd60e51b815260040162000507906200173f565b805460405163d547741f60e01b815260008051602062003a3083398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b158015620013a357600080fd5b505af1158015620013b8573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6200141a6200148f565b6001600160a01b038116620014815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000507565b6200148c81620014eb565b50565b6000546001600160a01b03163314620012ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000507565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61216380620018cd83390190565b6001600160a01b03811681146200148c57600080fd5b600080604083850312156200157357600080fd5b8235620015808162001549565b91506020830135620015928162001549565b809150509250929050565b600060208284031215620015b057600080fd5b5035919050565b600060208284031215620015ca57600080fd5b8135620015d78162001549565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200160657600080fd5b813567ffffffffffffffff80821115620016245762001624620015de565b604051601f8301601f19908116603f011681019082821181831017156200164f576200164f620015de565b816040528381528660208588010111156200166957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215620016a057600080fd5b843567ffffffffffffffff80821115620016b957600080fd5b620016c788838901620015f4565b95506020870135915080821115620016de57600080fd5b50620016ed87828801620015f4565b935050604085013591506060850135620017078162001549565b939692955090935050565b60208082526013908201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156200047457620004746200176e565b600060208284031215620017ad57600080fd5b81518015158114620015d757600080fd5b808201808211156200047457620004746200176e565b600060208284031215620017e757600080fd5b5051919050565b6000815180845260005b818110156200181657602081850181015186830182015201620017f8565b506000602082860101526020601f19601f83011685010191505092915050565b60c0815260006200184b60c0830189620017ee565b82810360208401526200185f8189620017ee565b604084019790975250506001600160a01b039384166060820152918316608083015290911660a09091015292915050565b600060018201620018a557620018a56200176e565b5060010190565b600060208284031215620018bf57600080fd5b8151620015d7816200154956fe60806040523480156200001157600080fd5b50604051620021633803806200216383398101604081905262000034916200035c565b85858181600562000046838262000494565b50600662000055828262000494565b50506007805460ff19169055506200006f60003362000115565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63362000115565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3362000115565b5050600a93909355600980546001600160a01b03199081166001600160a01b0394851617909155600b8054821692841692909217909155600c80549091169190921617905550620005609050565b62000121828262000125565b5050565b6200013c82826200016860201b62000b8b1760201c565b60008281526001602090815260409091206200016391839062000c0f62000208821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000121576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001c43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200021f836001600160a01b03841662000228565b90505b92915050565b6000818152600183016020526040812054620002715750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000222565b50600062000222565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a257600080fd5b81516001600160401b0380821115620002bf57620002bf6200027a565b604051601f8301601f19908116603f01168101908282118183101715620002ea57620002ea6200027a565b816040528381526020925086838588010111156200030757600080fd5b600091505b838210156200032b57858201830151818301840152908201906200030c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200035757600080fd5b919050565b60008060008060008060c087890312156200037657600080fd5b86516001600160401b03808211156200038e57600080fd5b6200039c8a838b0162000290565b97506020890151915080821115620003b357600080fd5b50620003c289828a0162000290565b95505060408701519350620003da606088016200033f565b9250620003ea608088016200033f565b9150620003fa60a088016200033f565b90509295509295509295565b600181811c908216806200041b57607f821691505b6020821081036200043c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016357600081815260208120601f850160051c810160208610156200046b5750805b601f850160051c820191505b818110156200048c5782815560010162000477565b505050505050565b81516001600160401b03811115620004b057620004b06200027a565b620004c881620004c1845462000406565b8462000442565b602080601f831160018114620005005760008415620004e75750858301515b600019600386901b1c1916600185901b1785556200048c565b600085815260208120601f198616915b82811015620005315788860151825594840194600190910190840162000510565b5085821015620005505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611bf380620005706000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c87314610428578063d53913931461043b578063d547741f14610462578063dd62ed3e14610475578063e63ab1e91461048857600080fd5b8063a217fddf146103f2578063a457c2d7146103fa578063a9059cbb1461040d578063adb1f0d81461042057600080fd5b806387bbfe0a116100e957806387bbfe0a146103985780639010d07c146103c457806391d14854146103d757806395d89b41146103ea57600080fd5b80635c975abb1461034c57806370a082311461035457806379cc67901461037d5780638456cb591461039057600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e366004611846565b6104af565b60405190151581526020015b60405180910390f35b6102306104da565b60405161021f9190611894565b61021361024b3660046118de565b61056c565b6004545b60405190815260200161021f565b610213610270366004611908565b610584565b610254610283366004611944565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d136600461195d565b6105a8565b005b6040516012815260200161021f565b6102d66102f536600461195d565b6105d2565b610254600a5481565b6102136103113660046118de565b610655565b6102d6610677565b6102d661032c3660046118de565b61071d565b6102d661033f366004611944565b6107bc565b6102d66107c9565b610213610866565b610254610362366004611989565b6001600160a01b031660009081526002602052604090205490565b6102d661038b3660046118de565b61092d565b6102d6610942565b6102136103a6366004611989565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d23660046119a4565b6109e6565b6102136103e536600461195d565b610a05565b610230610a2e565b610254600081565b6102136104083660046118de565b610a3d565b61021361041b3660046118de565b610ab8565b6102d6610ac6565b610254610436366004611944565b610b24565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d661047036600461195d565b610b3b565b6102546104833660046119c6565b610b60565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d457506104d482610c24565b92915050565b6060600580546104e9906119f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610515906119f0565b80156105625780601f1061053757610100808354040283529160200191610562565b820191906000526020600020905b81548152906001019060200180831161054557829003601f168201915b5050505050905090565b60003361057a818585610c59565b5060019392505050565b600033610592858285610d7d565b61059d858585610df7565b506001949350505050565b6000828152602081905260409020600101546105c381610e9d565b6105cd8383610ea7565b505050565b6001600160a01b03811633146106475760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106518282610ec9565b5050565b60003361057a8185856106688383610b60565b6106729190611a40565b610c59565b6106a17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6107135760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606482015260840161063e565b61071b610eeb565b565b6107477f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a05565b6107b25760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606482015260840161063e565b6106518282610f3d565b6107c6338261100a565b50565b3360009081526008602052604090205460ff16156107f95760405162461bcd60e51b815260040161063e90611a53565b61080533600a54610f3d565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085c914290918252602082015260400190565b60405180910390a2565b60008061087560075460ff1690565b600b549091506001600160a01b03161580159061089c5750600c546001600160a01b031615155b1561092857600b546001600160a01b031681806109245750600c54604051630617ed9d60e01b81526001600160a01b03918216600482015290821690630617ed9d90602401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611aa3565b155b9150505b919050565b610938823383610d7d565b610651828261100a565b61096c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6109de5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f207061757365000000000000000000606482015260840161063e565b61071b61114a565b60008281526001602052604081206109fe9083611187565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104e9906119f0565b60003381610a4b8286610b60565b905083811015610aab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161063e565b61059d8286868403610c59565b60003361057a818585610df7565b3360009081526008602052604090205460ff1615610af65760405162461bcd60e51b815260040161063e90611a53565b610afe6107c9565b6009546107c6906001600160a01b03166fffffffffffffffffffffffffffffffff61056c565b60008181526001602052604081206104d490611193565b600082815260208190526040902060010154610b5681610e9d565b6105cd8383610ec9565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610b958282610a05565b610651576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610bcb3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006109fe836001600160a01b03841661119d565b60006001600160e01b03198216637965db0b60e01b14806104d457506301ffc9a760e01b6001600160e01b03198316146104d4565b6001600160a01b038316610cbb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161063e565b6001600160a01b038216610d1c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161063e565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d898484610b60565b90506000198114610df15781811015610de45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161063e565b610df18484848403610c59565b50505050565b6009546001600160a01b0384811691161480610e2057506009546001600160a01b038381169116145b610e925760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e20746865206164647265737365730000606482015260840161063e565b6105cd8383836111ec565b6107c681336113a2565b610eb18282610b8b565b60008281526001602052604090206105cd9082610c0f565b610ed382826113fb565b60008281526001602052604090206105cd9082611460565b610ef3611475565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610f935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161063e565b610f9f600083836114c0565b8060046000828254610fb19190611a40565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661106a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161063e565b611076826000836114c0565b6001600160a01b038216600090815260026020526040902054818110156110ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161063e565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6111526114cb565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f203390565b60006109fe8383611513565b60006104d4825490565b60008181526001830160205260408120546111e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d4565b5060006104d4565b6001600160a01b0383166112505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161063e565b6001600160a01b0382166112b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161063e565b6112bd8383836114c0565b6001600160a01b038316600090815260026020526040902054818110156113355760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161063e565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113959086815260200190565b60405180910390a3610df1565b6113ac8282610a05565b610651576113b98161153d565b6113c483602061154f565b6040516020016113d5929190611ac5565b60408051601f198184030181529082905262461bcd60e51b825261063e91600401611894565b6114058282610a05565b15610651576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006109fe836001600160a01b0384166116eb565b61147d610866565b61071b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161063e565b6105cd8383836117de565b6114d3610866565b1561071b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161063e565b600082600001828154811061152a5761152a611b3a565b9060005260206000200154905092915050565b60606104d46001600160a01b03831660145b6060600061155e836002611b50565b611569906002611a40565b67ffffffffffffffff81111561158157611581611b67565b6040519080825280601f01601f1916602001820160405280156115ab576020820181803683370190505b509050600360fc1b816000815181106115c6576115c6611b3a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115f5576115f5611b3a565b60200101906001600160f81b031916908160001a9053506000611619846002611b50565b611624906001611a40565b90505b600181111561169c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061165857611658611b3a565b1a60f81b82828151811061166e5761166e611b3a565b60200101906001600160f81b031916908160001a90535060049490941c9361169581611b7d565b9050611627565b5083156109fe5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161063e565b600081815260018301602052604081205480156117d457600061170f600183611b94565b855490915060009061172390600190611b94565b905081811461178857600086600001828154811061174357611743611b3a565b906000526020600020015490508087600001848154811061176657611766611b3a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061179957611799611ba7565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d4565b60009150506104d4565b6117e6610866565b156105cd5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840161063e565b60006020828403121561185857600080fd5b81356001600160e01b0319811681146109fe57600080fd5b60005b8381101561188b578181015183820152602001611873565b50506000910152565b60208152600082518060208401526118b3816040850160208701611870565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461092857600080fd5b600080604083850312156118f157600080fd5b6118fa836118c7565b946020939093013593505050565b60008060006060848603121561191d57600080fd5b611926846118c7565b9250611934602085016118c7565b9150604084013590509250925092565b60006020828403121561195657600080fd5b5035919050565b6000806040838503121561197057600080fd5b82359150611980602084016118c7565b90509250929050565b60006020828403121561199b57600080fd5b6109fe826118c7565b600080604083850312156119b757600080fd5b50508035926020909101359150565b600080604083850312156119d957600080fd5b6119e2836118c7565b9150611980602084016118c7565b600181811c90821680611a0457607f821691505b602082108103611a2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d4576104d4611a2a565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b600060208284031215611ab557600080fd5b815180151581146109fe57600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afd816017850160208801611870565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2e816028840160208801611870565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d4576104d4611a2a565b634e487b7160e01b600052604160045260246000fd5b600081611b8c57611b8c611a2a565b506000190190565b818103818111156104d4576104d4611a2a565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a180bd76517920e0b56e6307e6845d5fef08bd68ec6f905e8bc5ab9e192446564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a264697066735822122089d9e2cc2b8ccb2490cc1ab18bcb4f3125bc75b0c64b2f8df298b7d686df067b64736f6c63430008120033608060405234801561001057600080fd5b506040516109ef3803806109ef83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61095c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063316b3739146100465780637726f7761461008b578063b816f513146100a0575b600080fd5b61006f61005436600461077c565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461077c565b6100b3565b005b60005461006f906001600160a01b031681565b6001600160a01b0381811660009081526001602052604090205416156101455760405162461bcd60e51b815260206004820152603960248201527f54686572652073686f756c64206f6e6c79206265206f6e65206465706c6f796d60448201527f656e74207065722076657273696f6e2070657220746f6b656e00000000000000606482015260840160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906107ac565b90506000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102139190810190610809565b600080549192509061022d906001600160a01b031661072a565b60405163144fa6d760e01b81526001600160a01b0386811660048301529192509082169063144fa6d790602401600060405180830381600087803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b50506040516383bf460960e01b815260206004820152603f60248201527f7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c2060448201527f2263617465676f7279223a20222573222c20226c616e67223a20222573227d0060648201526001600160a01b03841692506383bf460991506084016020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906108b6565b506040516383bf460960e01b815260206004820152604f60248201527f7b227469746c65223a20222573222c202274797065223a202275696e74222c2060448201527f22646563696d616c73223a2031382c202263617465676f7279223a202225732260648201526e2c20226c616e67223a20222573227d60881b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042191906108b6565b506040516383bf460960e01b815260206004820152605a60248201527f7b227469746c65223a20222573222c202274797065223a202273696e676c652d60448201527f73656c656374222c20226f7574636f6d6573223a205b25735d2c20226361746560648201527f676f7279223a20222573222c20226c616e67223a20222573227d00000000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906108b6565b506040516383bf460960e01b815260206004820152605c60248201527f7b227469746c65223a20222573222c202274797065223a20226d756c7469706c60448201527f652d73656c656374222c20226f7574636f6d6573223a205b25735d2c2022636160648201527f7465676f7279223a20222573222c20226c616e67223a20222573227d0000000060848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb91906108b6565b506040516383bf460960e01b815260206004820152604360248201527f7b227469746c65223a20222573222c202274797065223a20226461746574696d60448201527f65222c202263617465676f7279223a20222573222c20226c616e67223a20222560648201526273227d60e81b60848201526001600160a01b038216906383bf46099060a4016020604051808303816000875af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b691906108b6565b506001600160a01b038481166000908152600160205260409081902080546001600160a01b03191692841692909217909155517fbe87db3b58b5f4d26d54d6f8a09bbab3eefdc8879ac48f5e21ccff2a1f50b0729061071c9083908790879087906108cf565b60405180910390a150505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121561078e57600080fd5b81356001600160a01b03811681146107a557600080fd5b9392505050565b6000602082840312156107be57600080fd5b815160ff811681146107a557600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156108005781810151838201526020016107e8565b50506000910152565b60006020828403121561081b57600080fd5b815167ffffffffffffffff8082111561083357600080fd5b818401915084601f83011261084757600080fd5b815181811115610859576108596107cf565b604051601f8201601f19908116603f01168101908382118183101715610881576108816107cf565b8160405282815287602084870101111561089a57600080fd5b6108ab8360208301602088016107e5565b979650505050505050565b6000602082840312156108c857600080fd5b5051919050565b600060018060a01b03808716835280861660208401525060ff8416604083015260806060830152825180608084015261090f8160a08501602087016107e5565b601f01601f19169190910160a0019594505050505056fea26469706673582212200901921801295c1857ea1285857575b749b164c9a87fe108337110039b25924a64736f6c63430008120033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001515760003560e01c80636e3dd8ba11620000c75780638da5cb5b11620000865780638da5cb5b1462000394578063d13acee114620003a6578063d1aeb5c214620001b4578063d8df5dc114620003dc578063f2fde38b14620003e6578063fc0c546a14620003fd57600080fd5b80636e3dd8ba14620002f157806370e920781462000319578063715018a61462000330578063791e0519146200033a57806386b5c5b1146200037d57600080fd5b80633c37db6311620001145780633c37db63146200027c5780633ccd414514620002955780634fe62a5b14620002ac5780635d341ae514620002c357806367d73c9114620002da57600080fd5b80631311758b14620001565780631cbe8a65146200017357806325c7205914620001b457806330ccd17a14620001dc57806333b2276014620001f3575b600080fd5b6200016060055481565b6040519081526020015b60405180910390f35b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016200016a565b620001cb620001c53660046200155f565b62000425565b60405190151581526020016200016a565b6200019b620001ed3660046200159d565b6200047a565b6200024562000204366004620015b7565b600360208190526000918252604090912080546002820154928201546004909201546001600160a01b0380831694600160a01b90930460ff16938116911685565b604080516001600160a01b039687168152941515602086015284019290925283166060830152909116608082015260a0016200016a565b620002936200028d3660046200159d565b620004a5565b005b62000160620002a6366004620015b7565b62000568565b62000293620002bd3660046200155f565b62000709565b62000160620002d4366004620015b7565b6200084e565b6200019b620002eb36600462001689565b62000a8d565b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b620001606200032a366004620015b7565b620010bf565b62000293620012b8565b620001cb6200034b3660046200155f565b6001600160a01b0391821660009081526003602090815260408083209390941682526001909201909152205460ff1690565b620002936200038e3660046200155f565b620012d0565b6000546001600160a01b03166200019b565b620001cb620003b7366004620015b7565b6001600160a01b0316600090815260036020526040902054600160a01b900460ff1690565b6200016060025481565b62000293620003f7366004620015b7565b62001410565b6200019b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03821660009081526003602052604081208054600160a01b900460ff1680156200047057506001600160a01b038316600090815260018201602052604090205460ff165b9150505b92915050565b600481815481106200048b57600080fd5b6000918252602090912001546001600160a01b0316905081565b620004af6200148f565b60008111620005105760405162461bcd60e51b815260206004820152602260248201527f4c6f636b20616d6f756e74206d7573742062652067726561746572207468616e604482015261020360f41b60648201526084015b60405180910390fd5b6002548103620005635760405162461bcd60e51b815260206004820152601760248201527f4c6f636b20616d6f756e74206973207468652073616d65000000000000000000604482015260640162000507565b600255565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff16620005ab5760405162461bcd60e51b8152600401620005079062001712565b33600090815260018201602052604090205460ff16620005df5760405162461bcd60e51b815260040162000507906200173f565b6000600254826002015411620005f75760006200060b565b60025482600201546200060b919062001784565b90508015620006c15760405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801562000682573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a891906200179a565b50808260020154620006bb919062001784565b60028301555b6040518181526001600160a01b0385169033907f762d0a2a8e474a7f467752b8c7d24a08142b5a877a95ceb46dfbbda482ec46d7906020015b60405180910390a39392505050565b6001600160a01b03821660009081526003602052604090208054600160a01b900460ff166200074c5760405162461bcd60e51b8152600401620005079062001712565b33600090815260018201602052604090205460ff16620007805760405162461bcd60e51b815260040162000507906200173f565b8054604051632f2ff15d60e01b815260008051602062003a3083398151915260048201526001600160a01b03848116602483015290911690632f2ff15d90604401600060405180830381600087803b158015620007dc57600080fd5b505af1158015620007f1573d6000803e3d6000fd5b505050506001600160a01b03828116600081815260018481016020526040808320805460ff191690921790915551919286169133917fb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a6891a4505050565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff1615620008ba5760405162461bcd60e51b81526020600482015260166024820152754c616e6420697320616c72656164792061637469766560501b604482015260640162000507565b33600090815260018201602052604090205460ff16620008ee5760405162461bcd60e51b815260040162000507906200173f565b6000816002015460025411620009065760006200091a565b81600201546002546200091a919062001784565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801562000991573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b791906200179a565b50815460ff60a01b1916600160a01b1782556002820154620009db908290620017be565b60028301556003820180546001600160a01b0319163317905560408051631fa5d41d60e11b815290516001600160a01b03861691633f4ba83a91600480830192600092919082900301818387803b15801562000a3657600080fd5b505af115801562000a4b573d6000803e3d6000fd5b50506040518381526001600160a01b03871692503391507f9daf897774d766e38773bbeaf2f32d93fed4091373b77ebb7f5aee37417d1ab190602001620006fa565b6002546040516370a0823160e01b8152336004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801562000af9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1f9190620017d4565b101562000b6f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320746f206c6f636b00000000000000604482015260640162000507565b6001600160a01b03821662000bd35760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20746f20616e737765722063616e6e6f742062652030206164647260448201526265737360e81b606482015260840162000507565b60008585857f000000000000000000000000000000000000000000000000000000000000000060008060405162000c0a906200153b565b62000c1b9695949392919062001836565b604051809103906000f08015801562000c38573d6000803e3d6000fd5b50604051632f2ff15d60e01b815260008051602062003a3083398151915260048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925090821690632f2ff15d90604401600060405180830381600087803b15801562000cb657600080fd5b505af115801562000ccb573d6000803e3d6000fd5b5050604051632f2ff15d60e01b815260008051602062003a3083398151915260048201523360248201526001600160a01b0384169250632f2ff15d9150604401600060405180830381600087803b15801562000d2657600080fd5b505af115801562000d3b573d6000803e3d6000fd5b5050506001600160a01b038216600081815260036020818152604080842080546001600160a81b0319168617600160a01b178155338086526001808301909452918520805460ff191684179055600280549082015592830180546001600160a01b0319908116909217905560048054928301815584527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9091018054909116909317909255600580549293509062000df38362001890565b909155505060405163316b373960e01b81526001600160a01b0385811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063316b373990602401602060405180830381865afa15801562000e64573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e8a9190620018ac565b6001600160a01b03160362000f1757604051633b937bbb60e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637726f77690602401600060405180830381600087803b15801562000efd57600080fd5b505af115801562000f12573d6000803e3d6000fd5b505050505b60405163316b373960e01b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063316b373990602401602060405180830381865afa15801562000f7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa49190620018ac565b600482810180546001600160a01b0319166001600160a01b039384161790556002546040516323b872dd60e01b8152339281019290925230602483015260448201527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af115801562001034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200105a91906200179a565b50836001600160a01b0316826001600160a01b0316336001600160a01b03167fba6e51248e93514eb089243e4d08f26db16ff133606694000e7124a41ee5deb4600254604051620010ad91815260200190565b60405180910390a45095945050505050565b6001600160a01b03811660009081526003602052604081208054600160a01b900460ff16620011265760405162461bcd60e51b81526020600482015260126024820152714c616e64206973206e6f742061637469766560701b604482015260640162000507565b33600090815260018201602052604090205460ff166200115a5760405162461bcd60e51b815260040162000507906200173f565b6002810154600382015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015620011d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011fc91906200179a565b50815460ff60a01b191682556000600283018190556003830180546001600160a01b031916905560408051638456cb5960e01b815290516001600160a01b03871692638456cb59926004808201939182900301818387803b1580156200126157600080fd5b505af115801562001276573d6000803e3d6000fd5b50506040518381526001600160a01b03871692503391507f76f76e951d717cb73ae423c4e4a029c5dde6ef38673c8f6a20cb9eb5025de59590602001620006fa565b620012c26200148f565b620012ce6000620014eb565b565b6001600160a01b03821660009081526003602052604090208054600160a01b900460ff16620013135760405162461bcd60e51b8152600401620005079062001712565b33600090815260018201602052604090205460ff16620013475760405162461bcd60e51b815260040162000507906200173f565b805460405163d547741f60e01b815260008051602062003a3083398151915260048201526001600160a01b0384811660248301529091169063d547741f90604401600060405180830381600087803b158015620013a357600080fd5b505af1158015620013b8573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600184016020526040808220805460ff1916905551919286169133917f5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a7235092436756091a4505050565b6200141a6200148f565b6001600160a01b038116620014815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000507565b6200148c81620014eb565b50565b6000546001600160a01b03163314620012ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000507565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61216380620018cd83390190565b6001600160a01b03811681146200148c57600080fd5b600080604083850312156200157357600080fd5b8235620015808162001549565b91506020830135620015928162001549565b809150509250929050565b600060208284031215620015b057600080fd5b5035919050565b600060208284031215620015ca57600080fd5b8135620015d78162001549565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200160657600080fd5b813567ffffffffffffffff80821115620016245762001624620015de565b604051601f8301601f19908116603f011681019082821181831017156200164f576200164f620015de565b816040528381528660208588010111156200166957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215620016a057600080fd5b843567ffffffffffffffff80821115620016b957600080fd5b620016c788838901620015f4565b95506020870135915080821115620016de57600080fd5b50620016ed87828801620015f4565b935050604085013591506060850135620017078162001549565b939692955090935050565b60208082526013908201527213185b9908191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b602080825260159082015274139bdd0818591b5a5b881bd9881d1a19481b185b99605a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156200047457620004746200176e565b600060208284031215620017ad57600080fd5b81518015158114620015d757600080fd5b808201808211156200047457620004746200176e565b600060208284031215620017e757600080fd5b5051919050565b6000815180845260005b818110156200181657602081850181015186830182015201620017f8565b506000602082860101526020601f19601f83011685010191505092915050565b60c0815260006200184b60c0830189620017ee565b82810360208401526200185f8189620017ee565b604084019790975250506001600160a01b039384166060820152918316608083015290911660a09091015292915050565b600060018201620018a557620018a56200176e565b5060010190565b600060208284031215620018bf57600080fd5b8151620015d7816200154956fe60806040523480156200001157600080fd5b50604051620021633803806200216383398101604081905262000034916200035c565b85858181600562000046838262000494565b50600662000055828262000494565b50506007805460ff19169055506200006f60003362000115565b6200009b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63362000115565b620000c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3362000115565b5050600a93909355600980546001600160a01b03199081166001600160a01b0394851617909155600b8054821692841692909217909155600c80549091169190921617905550620005609050565b62000121828262000125565b5050565b6200013c82826200016860201b62000b8b1760201c565b60008281526001602090815260409091206200016391839062000c0f62000208821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000121576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001c43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200021f836001600160a01b03841662000228565b90505b92915050565b6000818152600183016020526040812054620002715750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000222565b50600062000222565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a257600080fd5b81516001600160401b0380821115620002bf57620002bf6200027a565b604051601f8301601f19908116603f01168101908282118183101715620002ea57620002ea6200027a565b816040528381526020925086838588010111156200030757600080fd5b600091505b838210156200032b57858201830151818301840152908201906200030c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200035757600080fd5b919050565b60008060008060008060c087890312156200037657600080fd5b86516001600160401b03808211156200038e57600080fd5b6200039c8a838b0162000290565b97506020890151915080821115620003b357600080fd5b50620003c289828a0162000290565b95505060408701519350620003da606088016200033f565b9250620003ea608088016200033f565b9150620003fa60a088016200033f565b90509295509295509295565b600181811c908216806200041b57607f821691505b6020821081036200043c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016357600081815260208120601f850160051c810160208610156200046b5750805b601f850160051c820191505b818110156200048c5782815560010162000477565b505050505050565b81516001600160401b03811115620004b057620004b06200027a565b620004c881620004c1845462000406565b8462000442565b602080601f831160018114620005005760008415620004e75750858301515b600019600386901b1c1916600185901b1785556200048c565b600085815260208120601f198616915b82811015620005315788860151825594840194600190910190840162000510565b5085821015620005505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611bf380620005706000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c975abb1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c87314610428578063d53913931461043b578063d547741f14610462578063dd62ed3e14610475578063e63ab1e91461048857600080fd5b8063a217fddf146103f2578063a457c2d7146103fa578063a9059cbb1461040d578063adb1f0d81461042057600080fd5b806387bbfe0a116100e957806387bbfe0a146103985780639010d07c146103c457806391d14854146103d757806395d89b41146103ea57600080fd5b80635c975abb1461034c57806370a082311461035457806379cc67901461037d5780638456cb591461039057600080fd5b8063313ce567116101925780633f4ba83a116101615780633f4ba83a1461031657806340c10f191461031e57806342966c681461033157806348c54b9d1461034457600080fd5b8063313ce567146102d857806336568abe146102e757806337a65725146102fa578063395093511461030357600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca3146102755780632a709b14146102985780632f2ff15d146102c357600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e366004611846565b6104af565b60405190151581526020015b60405180910390f35b6102306104da565b60405161021f9190611894565b61021361024b3660046118de565b61056c565b6004545b60405190815260200161021f565b610213610270366004611908565b610584565b610254610283366004611944565b60009081526020819052604090206001015490565b6009546102ab906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102d66102d136600461195d565b6105a8565b005b6040516012815260200161021f565b6102d66102f536600461195d565b6105d2565b610254600a5481565b6102136103113660046118de565b610655565b6102d6610677565b6102d661032c3660046118de565b61071d565b6102d661033f366004611944565b6107bc565b6102d66107c9565b610213610866565b610254610362366004611989565b6001600160a01b031660009081526002602052604090205490565b6102d661038b3660046118de565b61092d565b6102d6610942565b6102136103a6366004611989565b6001600160a01b031660009081526008602052604090205460ff1690565b6102ab6103d23660046119a4565b6109e6565b6102136103e536600461195d565b610a05565b610230610a2e565b610254600081565b6102136104083660046118de565b610a3d565b61021361041b3660046118de565b610ab8565b6102d6610ac6565b610254610436366004611944565b610b24565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d661047036600461195d565b610b3b565b6102546104833660046119c6565b610b60565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104d457506104d482610c24565b92915050565b6060600580546104e9906119f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610515906119f0565b80156105625780601f1061053757610100808354040283529160200191610562565b820191906000526020600020905b81548152906001019060200180831161054557829003601f168201915b5050505050905090565b60003361057a818585610c59565b5060019392505050565b600033610592858285610d7d565b61059d858585610df7565b506001949350505050565b6000828152602081905260409020600101546105c381610e9d565b6105cd8383610ea7565b505050565b6001600160a01b03811633146106475760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106518282610ec9565b5050565b60003361057a8185856106688383610b60565b6106729190611a40565b610c59565b6106a17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6107135760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606482015260840161063e565b61071b610eeb565b565b6107477f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a05565b6107b25760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606482015260840161063e565b6106518282610f3d565b6107c6338261100a565b50565b3360009081526008602052604090205460ff16156107f95760405162461bcd60e51b815260040161063e90611a53565b61080533600a54610f3d565b3360008181526008602052604090819020805460ff19166001179055600a5490517f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b9161085c914290918252602082015260400190565b60405180910390a2565b60008061087560075460ff1690565b600b549091506001600160a01b03161580159061089c5750600c546001600160a01b031615155b1561092857600b546001600160a01b031681806109245750600c54604051630617ed9d60e01b81526001600160a01b03918216600482015290821690630617ed9d90602401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611aa3565b155b9150505b919050565b610938823383610d7d565b610651828261100a565b61096c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a05565b6109de5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f207061757365000000000000000000606482015260840161063e565b61071b61114a565b60008281526001602052604081206109fe9083611187565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104e9906119f0565b60003381610a4b8286610b60565b905083811015610aab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161063e565b61059d8286868403610c59565b60003361057a818585610df7565b3360009081526008602052604090205460ff1615610af65760405162461bcd60e51b815260040161063e90611a53565b610afe6107c9565b6009546107c6906001600160a01b03166fffffffffffffffffffffffffffffffff61056c565b60008181526001602052604081206104d490611193565b600082815260208190526040902060010154610b5681610e9d565b6105cd8383610ec9565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610b958282610a05565b610651576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610bcb3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006109fe836001600160a01b03841661119d565b60006001600160e01b03198216637965db0b60e01b14806104d457506301ffc9a760e01b6001600160e01b03198316146104d4565b6001600160a01b038316610cbb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161063e565b6001600160a01b038216610d1c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161063e565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d898484610b60565b90506000198114610df15781811015610de45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161063e565b610df18484848403610c59565b50505050565b6009546001600160a01b0384811691161480610e2057506009546001600160a01b038381169116145b610e925760405162461bcd60e51b815260206004820152603e60248201527f46616e7461737945524332303a20746f6b656e207472616e73666572206e6f7460448201527f20616c6c6f776564206265747765656e20746865206164647265737365730000606482015260840161063e565b6105cd8383836111ec565b6107c681336113a2565b610eb18282610b8b565b60008281526001602052604090206105cd9082610c0f565b610ed382826113fb565b60008281526001602052604090206105cd9082611460565b610ef3611475565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610f935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161063e565b610f9f600083836114c0565b8060046000828254610fb19190611a40565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661106a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161063e565b611076826000836114c0565b6001600160a01b038216600090815260026020526040902054818110156110ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161063e565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6111526114cb565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f203390565b60006109fe8383611513565b60006104d4825490565b60008181526001830160205260408120546111e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d4565b5060006104d4565b6001600160a01b0383166112505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161063e565b6001600160a01b0382166112b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161063e565b6112bd8383836114c0565b6001600160a01b038316600090815260026020526040902054818110156113355760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161063e565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113959086815260200190565b60405180910390a3610df1565b6113ac8282610a05565b610651576113b98161153d565b6113c483602061154f565b6040516020016113d5929190611ac5565b60408051601f198184030181529082905262461bcd60e51b825261063e91600401611894565b6114058282610a05565b15610651576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006109fe836001600160a01b0384166116eb565b61147d610866565b61071b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161063e565b6105cd8383836117de565b6114d3610866565b1561071b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161063e565b600082600001828154811061152a5761152a611b3a565b9060005260206000200154905092915050565b60606104d46001600160a01b03831660145b6060600061155e836002611b50565b611569906002611a40565b67ffffffffffffffff81111561158157611581611b67565b6040519080825280601f01601f1916602001820160405280156115ab576020820181803683370190505b509050600360fc1b816000815181106115c6576115c6611b3a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115f5576115f5611b3a565b60200101906001600160f81b031916908160001a9053506000611619846002611b50565b611624906001611a40565b90505b600181111561169c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061165857611658611b3a565b1a60f81b82828151811061166e5761166e611b3a565b60200101906001600160f81b031916908160001a90535060049490941c9361169581611b7d565b9050611627565b5083156109fe5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161063e565b600081815260018301602052604081205480156117d457600061170f600183611b94565b855490915060009061172390600190611b94565b905081811461178857600086600001828154811061174357611743611b3a565b906000526020600020015490508087600001848154811061176657611766611b3a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061179957611799611ba7565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d4565b60009150506104d4565b6117e6610866565b156105cd5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840161063e565b60006020828403121561185857600080fd5b81356001600160e01b0319811681146109fe57600080fd5b60005b8381101561188b578181015183820152602001611873565b50506000910152565b60208152600082518060208401526118b3816040850160208701611870565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461092857600080fd5b600080604083850312156118f157600080fd5b6118fa836118c7565b946020939093013593505050565b60008060006060848603121561191d57600080fd5b611926846118c7565b9250611934602085016118c7565b9150604084013590509250925092565b60006020828403121561195657600080fd5b5035919050565b6000806040838503121561197057600080fd5b82359150611980602084016118c7565b90509250929050565b60006020828403121561199b57600080fd5b6109fe826118c7565b600080604083850312156119b757600080fd5b50508035926020909101359150565b600080604083850312156119d957600080fd5b6119e2836118c7565b9150611980602084016118c7565b600181811c90821680611a0457607f821691505b602082108103611a2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d4576104d4611a2a565b60208082526030908201527f46616e7461737945524332303a206164647265737320616c726561647920636c60408201526f61696d65642074686520746f6b656e7360801b606082015260800190565b600060208284031215611ab557600080fd5b815180151581146109fe57600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afd816017850160208801611870565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2e816028840160208801611870565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104d4576104d4611a2a565b634e487b7160e01b600052604160045260246000fd5b600081611b8c57611b8c611a2a565b506000190190565b818103818111156104d4576104d4611a2a565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a180bd76517920e0b56e6307e6845d5fef08bd68ec6f905e8bc5ab9e192446564736f6c634300081200339f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a264697066735822122089d9e2cc2b8ccb2490cc1ab18bcb4f3125bc75b0c64b2f8df298b7d686df067b64736f6c63430008120033",
  "immutableReferences": {
    "11052": [
      {
        "length": 32,
        "start": 377
      },
      {
        "length": 32,
        "start": 3034
      },
      {
        "length": 32,
        "start": 3173
      }
    ],
    "11055": [
      {
        "length": 32,
        "start": 1027
      },
      {
        "length": 32,
        "start": 1584
      },
      {
        "length": 32,
        "start": 2367
      },
      {
        "length": 32,
        "start": 2737
      },
      {
        "length": 32,
        "start": 4072
      },
      {
        "length": 32,
        "start": 4490
      }
    ],
    "11060": [
      {
        "length": 32,
        "start": 759
      },
      {
        "length": 32,
        "start": 3610
      },
      {
        "length": 32,
        "start": 3768
      },
      {
        "length": 32,
        "start": 3894
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:956:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:32",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:32",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:32"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:32",
                "type": ""
              }
            ],
            "src": "14:131:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "297:449:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "353:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "346:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "346:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "346:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "318:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "327:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "314:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "314:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "339:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "310:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:33:32"
                  },
                  "nodeType": "YulIf",
                  "src": "307:53:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "369:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "388:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "382:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "373:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "432:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "407:24:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "407:31:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "447:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "457:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "447:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "471:40:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "496:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "507:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "486:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:25:32"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "475:7:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "545:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "520:24:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:33:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "520:33:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "562:17:32",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "572:7:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "588:35:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "619:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "598:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "598:25:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "588:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "632:40:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "657:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "668:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "653:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "653:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "647:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:25:32"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "636:7:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "706:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "681:24:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:33:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "681:33:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "723:17:32",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "733:7:32"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$1478t_uint256t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "239:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "250:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "262:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "270:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "278:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "286:6:32",
                "type": ""
              }
            ],
            "src": "150:596:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "852:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "862:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "874:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "885:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "870:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "870:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "862:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "904:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "919:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "935:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "940:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "931:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "931:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "944:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "927:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "927:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "915:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "915:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "897:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "897:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "897:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "821:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "832:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "843:4:32",
                "type": ""
              }
            ],
            "src": "751:203:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$1478t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        let value_2 := mload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11852:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:32",
                "type": ""
              }
            ],
            "src": "14:177:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "297:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "307:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "319:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "330:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "307:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "364:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "380:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "385:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "376:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "376:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "389:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "372:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "372:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "342:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "342:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "266:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "277:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "288:4:32",
                "type": ""
              }
            ],
            "src": "196:203:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "457:86:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "521:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "530:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "480:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "491:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:3:32",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "511:1:32",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "502:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "502:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "515:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "498:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "498:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "487:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "487:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "477:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "477:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "470:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "467:70:32"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "446:5:32",
                "type": ""
              }
            ],
            "src": "404:139:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "650:317:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "696:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "705:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "708:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "698:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "698:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "698:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "671:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "680:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "667:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "667:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "692:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "663:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "663:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "660:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "721:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "747:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "734:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "725:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "799:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "766:32:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:39:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:39:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "814:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "824:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "814:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "838:47:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "870:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "881:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "853:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "853:32:32"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "842:7:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "927:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "894:32:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:41:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "894:41:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "944:17:32",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "954:7:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "944:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "608:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "619:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "631:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "639:6:32",
                "type": ""
              }
            ],
            "src": "548:419:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:92:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1077:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1089:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1100:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1085:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1085:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1077:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1119:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1144:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1137:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1137:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1130:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1112:41:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1112:41:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1036:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1047:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1058:4:32",
                "type": ""
              }
            ],
            "src": "972:187:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1234:110:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1280:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1289:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1292:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1282:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1282:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1282:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1255:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1264:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1247:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1247:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1244:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1305:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1328:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1315:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1305:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1200:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1211:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:32",
                "type": ""
              }
            ],
            "src": "1164:180:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1419:185:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1465:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1474:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1477:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1467:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1467:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1467:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1440:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1449:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1436:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1436:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1432:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1429:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1490:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1516:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1503:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1503:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1494:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1568:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1535:32:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1535:39:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1535:39:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1583:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1593:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1583:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1385:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1396:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1408:6:32",
                "type": ""
              }
            ],
            "src": "1349:255:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:331:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:3:32",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1883:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1875:4:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1911:29:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1929:3:32",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1934:1:32",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1925:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1925:11:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1938:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1921:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:19:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1915:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1971:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1979:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1949:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2003:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2014:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1999:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1999:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "2033:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2026:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2026:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2019:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2019:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1992:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:50:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1992:50:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2062:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2073:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2058:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2058:18:32"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2078:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2051:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2051:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2105:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2116:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2101:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2101:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2125:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2133:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2121:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2121:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2094:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2094:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2094:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2157:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2168:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2153:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2153:19:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "2178:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2186:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:44:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:44:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4293_t_bool_t_uint256_t_address_t_contract$_IRealityETH_IERC20_$11922__to_t_address_t_bool_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1802:9:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1813:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1821:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1829:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1837:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1845:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1856:4:32",
                "type": ""
              }
            ],
            "src": "1609:587:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2286:185:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2332:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2341:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2344:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2334:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2334:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2334:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2307:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2316:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2303:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2303:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2328:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2299:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2299:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2296:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2357:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2383:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2370:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2361:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2435:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "2402:32:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2402:39:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2402:39:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2450:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2460:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2450:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2252:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2263:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2275:6:32",
                "type": ""
              }
            ],
            "src": "2201:270:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:95:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2525:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2532:3:32",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2537:10:32",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2528:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2528:20:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:31:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2565:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:4:32",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2558:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2558:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2558:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2589:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2592:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2582:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2582:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2582:15:32"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2476:127:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2661:666:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2710:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2719:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2722:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2712:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2712:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2712:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2689:6:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2697:4:32",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2685:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2685:17:32"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2704:3:32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2681:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2681:27:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2674:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2674:35:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2671:55:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2735:30:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2758:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2745:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2745:20:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2739:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2774:28:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2784:18:32",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2778:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2825:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2827:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2827:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2827:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2817:2:32"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2821:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2814:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2814:10:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2811:36:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2856:17:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2870:2:32",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2866:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:7:32"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2860:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2882:23:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2902:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2896:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:9:32"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2886:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2914:71:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2936:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2960:2:32"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2964:4:32",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2956:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2956:13:32"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2971:2:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2952:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2952:22:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2976:2:32",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2948:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2948:31:32"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2981:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2944:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:40:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2932:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2932:53:32"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2918:10:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3044:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3046:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3046:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3046:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3003:10:32"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3015:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3000:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3023:10:32"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3035:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3020:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3020:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2997:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2997:46:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2994:72:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3082:2:32",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3086:10:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3075:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3075:22:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3075:22:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3113:6:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3121:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:18:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:18:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3172:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3181:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3184:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3174:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3174:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3174:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3147:6:32"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3155:2:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3143:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3143:15:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3160:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3139:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3139:26:32"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3167:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3136:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:35:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3133:55:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3214:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3222:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3210:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3210:17:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3233:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3229:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3229:17:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3248:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3197:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:54:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3197:54:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3275:6:32"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3283:2:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3271:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3271:15:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3288:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3267:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3267:26:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3295:1:32",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3260:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3260:37:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3260:37:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3306:15:32",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3315:6:32"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3306:5:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2635:6:32",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2643:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2651:5:32",
                "type": ""
              }
            ],
            "src": "2608:719:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3488:614:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3535:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3544:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3547:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3537:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3537:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3537:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3509:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3518:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3505:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3505:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3530:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3501:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:33:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3498:53:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3560:37:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3587:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3574:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3574:23:32"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3564:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3606:28:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3616:18:32",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3610:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3661:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3670:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3673:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3663:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3663:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3663:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3649:6:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3657:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3646:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3646:14:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3643:34:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3686:60:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3718:9:32"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3729:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3714:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3714:22:32"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3738:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3696:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3696:50:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3686:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3755:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3788:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3799:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3784:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3784:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3771:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:32:32"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "3759:8:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3832:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3841:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3844:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3834:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3834:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3834:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "3818:8:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3828:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3815:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3815:16:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3812:36:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3857:62:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3889:9:32"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "3900:8:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3885:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3885:24:32"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3911:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3867:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3867:52:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3857:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3928:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3955:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3966:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3951:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3951:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3938:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3938:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3928:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3979:45:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4009:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4020:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4005:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4005:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3992:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3992:32:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3983:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4066:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "4033:32:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:39:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4033:39:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4081:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4091:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4081:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3430:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3441:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3453:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3461:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3469:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3477:6:32",
                "type": ""
              }
            ],
            "src": "3332:770:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4229:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4239:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4251:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4262:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4247:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4239:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4281:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4296:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4312:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4317:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4308:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4308:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4321:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4304:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4304:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4292:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4292:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4274:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4274:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4274:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FantasyERC20_$4293__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4198:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4209:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4220:4:32",
                "type": ""
              }
            ],
            "src": "4107:224:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4471:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4481:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4493:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4504:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4489:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4489:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4481:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4523:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4538:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4554:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4559:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4550:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4550:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4563:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4546:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4546:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4534:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4534:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4516:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4516:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4516:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$12061__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4440:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4451:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4462:4:32",
                "type": ""
              }
            ],
            "src": "4336:237:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4694:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4704:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4716:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4727:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4712:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4712:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4704:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4746:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4761:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4777:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4782:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4773:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4773:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4786:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4769:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4769:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4757:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4757:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4739:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4739:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4739:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1478__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4663:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4674:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4685:4:32",
                "type": ""
              }
            ],
            "src": "4578:218:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4975:224:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4992:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5003:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4985:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4985:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4985:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5026:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5037:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5022:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5022:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5042:2:32",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5015:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5015:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5015:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5065:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5076:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5061:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5061:18:32"
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5081:34:32",
                        "type": "",
                        "value": "Lock amount must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5054:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5054:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5054:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5136:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5147:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5132:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5132:18:32"
                      },
                      {
                        "hexValue": "2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5152:4:32",
                        "type": "",
                        "value": " 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5125:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5125:32:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5125:32:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5166:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5178:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5189:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5174:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5174:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5166:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4952:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4966:4:32",
                "type": ""
              }
            ],
            "src": "4801:398:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5378:173:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5395:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5406:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5388:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5388:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5388:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5429:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5440:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5425:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5425:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5445:2:32",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5418:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5418:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5418:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5468:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5479:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5464:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5464:18:32"
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206973207468652073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5484:25:32",
                        "type": "",
                        "value": "Lock amount is the same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5457:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:53:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5457:53:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5519:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5531:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5542:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5527:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5527:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5519:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5355:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5369:4:32",
                "type": ""
              }
            ],
            "src": "5204:347:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5730:169:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5747:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5758:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5740:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5740:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5740:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5781:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5792:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5777:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5777:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5797:2:32",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5770:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5770:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5770:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5820:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5831:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5816:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5816:18:32"
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5836:21:32",
                        "type": "",
                        "value": "Land does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5809:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5809:49:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5809:49:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5867:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5879:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5890:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5875:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5875:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5867:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5707:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5721:4:32",
                "type": ""
              }
            ],
            "src": "5556:343:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6078:171:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6095:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6106:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6088:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6088:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6088:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6129:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6140:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6125:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6125:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6145:2:32",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6118:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6118:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6118:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6168:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6179:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6164:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6164:18:32"
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6184:23:32",
                        "type": "",
                        "value": "Not admin of the land"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6157:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6157:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6157:51:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6217:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6229:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6240:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6225:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6225:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6217:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6055:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6069:4:32",
                "type": ""
              }
            ],
            "src": "5904:345:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6286:95:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6303:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6310:3:32",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6315:10:32",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6306:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:20:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6296:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6296:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6296:31:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6343:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6346:4:32",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6336:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6336:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6336:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6367:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6370:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6360:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6360:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6360:15:32"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6254:127:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6435:79:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6445:17:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6457:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6460:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6453:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6453:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6445:4:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6486:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6488:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6488:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6488:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "6477:4:32"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6483:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6474:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6474:11:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6471:37:32"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6417:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6420:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6426:4:32",
                "type": ""
              }
            ],
            "src": "6386:128:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6648:145:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6658:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6670:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6681:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6666:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6666:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6658:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6700:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6715:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6731:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6736:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6727:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6727:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6740:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6723:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6723:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6711:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6711:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6693:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6693:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6693:51:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6764:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6775:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6760:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6760:18:32"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6780:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6753:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6753:34:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6609:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6620:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6628:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6639:4:32",
                "type": ""
              }
            ],
            "src": "6519:274:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6876:199:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6922:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6931:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6934:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6924:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6924:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6924:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6897:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6906:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6893:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6893:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6918:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6889:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6886:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6947:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6966:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6960:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6960:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6951:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7029:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7038:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7041:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7031:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7031:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7031:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6998:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7019:5:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7012:6:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7012:13:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7005:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7005:21:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6995:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6995:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6988:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6988:40:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6985:60:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7054:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7064:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7054:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6842:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6853:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6865:6:32",
                "type": ""
              }
            ],
            "src": "6798:277:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7209:145:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7219:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7231:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7242:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7227:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7219:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7261:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7272:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7254:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7254:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7254:25:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7299:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7310:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7295:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7295:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7319:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7335:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7340:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7331:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7331:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7344:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7327:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7327:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7315:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7315:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7288:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7288:60:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7288:60:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7170:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7181:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7189:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7200:4:32",
                "type": ""
              }
            ],
            "src": "7080:274:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7533:172:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7550:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7561:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7543:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7543:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7543:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7584:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7595:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7580:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7580:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7600:2:32",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7573:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7573:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7573:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7623:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7634:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7619:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7619:18:32"
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7639:24:32",
                        "type": "",
                        "value": "Land is already active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7612:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7612:52:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7612:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7673:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7685:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7696:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7681:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7681:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7673:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7510:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7524:4:32",
                "type": ""
              }
            ],
            "src": "7359:346:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7867:218:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7877:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7889:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7900:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7885:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7885:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7877:4:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7912:29:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7930:3:32",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7935:1:32",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7926:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7926:11:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7939:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7922:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7922:19:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7916:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7957:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7972:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7980:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7968:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7968:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7950:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7950:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7950:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8004:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8015:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8000:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8000:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8024:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8032:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8020:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8020:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7993:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7993:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7993:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8056:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8067:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8052:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8052:18:32"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8072:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8045:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8045:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8045:34:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7820:9:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7831:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7839:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7847:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7858:4:32",
                "type": ""
              }
            ],
            "src": "7710:375:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8138:77:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8148:16:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8159:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8162:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8155:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8155:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8148:3:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8187:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8189:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8189:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8189:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8179:1:32"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "8182:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8176:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8176:10:32"
                  },
                  "nodeType": "YulIf",
                  "src": "8173:36:32"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8121:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8124:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8130:3:32",
                "type": ""
              }
            ],
            "src": "8090:125:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8301:103:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8347:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8356:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8359:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8349:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8349:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8349:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8322:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8331:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8318:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8318:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8343:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8314:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8314:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "8311:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8372:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8388:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8382:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8382:16:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8372:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8267:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8278:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8290:6:32",
                "type": ""
              }
            ],
            "src": "8220:184:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8583:175:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8600:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8611:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8593:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8593:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8634:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8645:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8630:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8630:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8650:2:32",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8623:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8623:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8623:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8673:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8684:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8669:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8669:18:32"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320746f206c6f636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8689:27:32",
                        "type": "",
                        "value": "Not enough tokens to lock"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8662:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8662:55:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8662:55:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8726:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8738:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8749:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8734:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8734:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8726:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8560:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8574:4:32",
                "type": ""
              }
            ],
            "src": "8409:349:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8937:225:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8954:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8965:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8947:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8947:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8947:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8988:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8999:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8984:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8984:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9004:2:32",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8977:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8977:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8977:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9027:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9038:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9023:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9023:18:32"
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9043:34:32",
                        "type": "",
                        "value": "Token to answer cannot be 0 addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9016:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9016:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9016:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9098:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9109:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9094:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9094:18:32"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9114:5:32",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9087:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9087:33:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9087:33:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9129:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9141:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9152:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9137:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9137:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9129:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8914:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8928:4:32",
                "type": ""
              }
            ],
            "src": "8763:399:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9217:373:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9227:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9247:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9241:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9241:12:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9231:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9269:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9274:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9262:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9262:19:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9262:19:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9290:10:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9299:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9294:1:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9361:110:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9375:14:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9385:4:32",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "9379:2:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "9417:3:32"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9422:1:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9413:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9413:11:32"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9426:2:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9409:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9409:20:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "9445:5:32"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "9452:1:32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9441:3:32"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9441:13:32"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9456:2:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9437:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9437:22:32"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9431:5:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9431:29:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9402:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9402:59:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9402:59:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9320:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9323:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9317:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9317:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9331:21:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9333:17:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9342:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9345:4:32",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9338:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9338:12:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9333:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9313:3:32",
                    "statements": []
                  },
                  "src": "9309:162:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9495:3:32"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9500:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9491:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9491:16:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9509:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9487:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9487:27:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9516:1:32",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9480:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9480:38:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9480:38:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9527:57:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9542:3:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9555:6:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9563:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9551:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9551:15:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9572:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9568:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9568:7:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9547:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9547:29:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9538:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9538:39:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9579:4:32",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9534:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:50:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9527:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9194:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9201:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9209:3:32",
                "type": ""
              }
            ],
            "src": "9167:423:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9876:455:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9893:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9904:3:32",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9886:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9886:22:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9886:22:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9917:60:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9949:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9961:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9972:3:32",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9957:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9957:19:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "9931:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9931:46:32"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "9921:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9997:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10008:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9993:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9993:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "10017:6:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10025:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10013:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10013:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9986:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9986:50:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9986:50:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10045:41:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10071:6:32"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "10079:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "10053:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10053:33:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10045:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10106:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10117:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10102:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10102:18:32"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10122:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10095:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10095:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10095:34:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10138:29:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10156:3:32",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10161:1:32",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10152:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10152:11:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10165:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10148:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10148:19:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10142:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10187:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10198:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10183:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10183:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "10207:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10215:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10203:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10203:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10176:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10176:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10176:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10239:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10250:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10235:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10235:19:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "10260:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10268:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10256:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10256:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10228:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10228:44:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10228:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10292:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10303:3:32",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10288:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10288:19:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "10313:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10321:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10309:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10309:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10281:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10281:44:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10281:44:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9805:9:32",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9816:6:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9824:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9832:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9840:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9848:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9856:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9867:4:32",
                "type": ""
              }
            ],
            "src": "9595:736:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10383:88:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10414:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10416:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10416:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10416:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10399:5:32"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10410:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10406:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10406:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10396:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10396:17:32"
                  },
                  "nodeType": "YulIf",
                  "src": "10393:43:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10445:20:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10456:5:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10463:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10452:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10452:13:32"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10445:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10365:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10375:3:32",
                "type": ""
              }
            ],
            "src": "10336:135:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10557:178:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10603:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10612:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10615:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10605:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10605:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10605:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10578:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10587:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10574:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10574:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10599:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10570:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10570:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "10567:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10628:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10647:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10641:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10641:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10632:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10699:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "10666:32:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10666:39:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10666:39:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10714:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10724:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10714:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10523:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10534:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10546:6:32",
                "type": ""
              }
            ],
            "src": "10476:259:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10914:168:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10931:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10942:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10924:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10924:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10924:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10965:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10976:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10961:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10961:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10981:2:32",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10954:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10954:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10954:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11004:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11015:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11000:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11000:18:32"
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11020:20:32",
                        "type": "",
                        "value": "Land is not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10993:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10993:48:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10993:48:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11050:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11062:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11073:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11058:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11058:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11050:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10891:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10905:4:32",
                "type": ""
              }
            ],
            "src": "10740:342:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11261:228:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11278:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11289:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11271:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11271:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11271:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11312:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11323:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11308:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11308:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11328:2:32",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11301:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11301:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11301:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11351:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11362:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11347:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11347:18:32"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11367:34:32",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11340:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11340:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11340:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11422:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11433:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11418:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11418:18:32"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11438:8:32",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11411:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11411:36:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11411:36:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11456:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11468:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11479:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11464:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11464:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11456:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11238:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11252:4:32",
                "type": ""
              }
            ],
            "src": "11087:402:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11668:182:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11685:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11696:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11678:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11678:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11678:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11719:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11730:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11715:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11715:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11735:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11708:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11708:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11708:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11758:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11769:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11754:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11754:18:32"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11774:34:32",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11747:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11747:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11747:62:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11818:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11830:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11841:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11826:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11826:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11818:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11645:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11659:4:32",
                "type": ""
              }
            ],
            "src": "11494:356:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4293_t_bool_t_uint256_t_address_t_contract$_IRealityETH_IERC20_$11922__to_t_address_t_bool_t_uint256_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1478(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_contract$_IERC20_$1478(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_contract_IERC20(value)\n        value3 := value\n    }\n    function abi_encode_tuple_t_contract$_FantasyERC20_$4293__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_RealityETH_ERC20_Factory_$12061__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1478__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Lock amount must be greater than\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Lock amount is the same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Land does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not admin of the land\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Land is already active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not enough tokens to lock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token to answer cannot be 0 addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        let tail_1 := abi_encode_string(value0, add(headStart, 192))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Land is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "286:7109:30:-:0;;;1480:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:16;936:18:4;:32::i;:::-;1716:1:6;1821:22;;-1:-1:-1;;;;;1602:12:30;;;;;1620:14;;;;1640:10;:24;;;1688:53;;1717:23;;1688:53;;;:::i;:::-;-1:-1:-1;;;;;915:32:32;;;897:51;;885:2;870:18;1688:53:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1670:71:30;;;-1:-1:-1;286:7109:30;;-1:-1:-1;;;286:7109:30;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;286:7109:30:-;;;;;;;;:::o;14:131:32:-;-1:-1:-1;;;;;89:31:32;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:596::-;262:6;270;278;286;339:3;327:9;318:7;314:23;310:33;307:53;;;356:1;353;346:12;307:53;388:9;382:16;407:31;432:5;407:31;:::i;:::-;507:2;492:18;;486:25;457:5;;-1:-1:-1;520:33:32;486:25;520:33;:::i;:::-;619:2;604:18;;598:25;668:2;653:18;;647:25;572:7;;-1:-1:-1;598:25:32;-1:-1:-1;681:33:32;647:25;681:33;:::i;:::-;150:596;;;;-1:-1:-1;150:596:32;;-1:-1:-1;;150:596:32:o;751:203::-;286:7109:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "286:7109:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:31;;;;;;;;;160:25:32;;;148:2;133:18;1444:31:30;;;;;;;;353:29;;;;;;;;-1:-1:-1;;;;;360:32:32;;;342:51;;330:2;315:18;353:29:30;196:203:32;6648:198:30;;;;;;:::i;:::-;;:::i;:::-;;;1137:14:32;;1130:22;1112:41;;1100:2;1085:18;6648:198:30;972:187:32;1413:27:30;;;;;;:::i;:::-;;:::i;1372:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:37:30;;;;-1:-1:-1;;;1372:37:30;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1967:15:32;;;1949:34;;2026:14;;2019:22;2014:2;1999:18;;1992:50;2058:18;;2051:34;;;;2121:15;;2116:2;2101:18;;2094:43;2174:15;;;2168:3;2153:19;;2146:44;1898:3;1883:19;1372:37:30;1609:587:32;1750:245:30;;;;;;:::i;:::-;;:::i;:::-;;5157:590;;;;;;:::i;:::-;;:::i;5751:438::-;;;;;;:::i;:::-;;:::i;4408:745::-;;;;;;:::i;:::-;;:::i;2229:1563::-;;;;;;:::i;:::-;;:::i;545:57::-;;;;;3796:608;;;;;;:::i;:::-;;:::i;1831:101:4:-;;;:::i;7220:173:30:-;;;;;;:::i;:::-;-1:-1:-1;;;;;7330:27:30;;;7298:4;7330:27;;;:5;:27;;;;;;;;7371:17;;;;;;:11;;;;:17;;;;;;;;7220:173;6193:451;;;;;;:::i;:::-;;:::i;1201:85:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;7055:161:30;;;;;;:::i;:::-;-1:-1:-1;;;;;7159:27:30;7127:4;7159:27;;;:5;:27;;;;;7200:11;-1:-1:-1;;;7200:11:30;;;;;7055:161;471:25;;;;;;2081:198:4;;;;;;:::i;:::-;;:::i;417:29:30:-;;;;;6648:198;-1:-1:-1;;;;;6768:27:30;;6736:4;6768:27;;;:5;:27;;;;;6809:11;;-1:-1:-1;;;6809:11:30;;;;:32;;;;-1:-1:-1;;;;;;6824:17:30;;;;;;:11;;;:17;;;;;;;;6809:32;6802:39;;;6648:198;;;;;:::o;1413:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1413:27:30;;-1:-1:-1;1413:27:30;:::o;1750:245::-;1094:13:4;:11;:13::i;:::-;1848:1:30::1;1832:13;:17;1824:64;;;::::0;-1:-1:-1;;;1824:64:30;;5003:2:32;1824:64:30::1;::::0;::::1;4985:21:32::0;5042:2;5022:18;;;5015:30;5081:34;5061:18;;;5054:62;-1:-1:-1;;;5132:18:32;;;5125:32;5174:19;;1824:64:30::1;;;;;;;;;1919:10;;1902:13;:27:::0;1894:63:::1;;;::::0;-1:-1:-1;;;1894:63:30;;5406:2:32;1894:63:30::1;::::0;::::1;5388:21:32::0;5445:2;5425:18;;;5418:30;5484:25;5464:18;;;5457:53;5527:18;;1894:63:30::1;5204:347:32::0;1894:63:30::1;1964:10;:26:::0;1750:245::o;5157:590::-;-1:-1:-1;;;;;5258:25:30;;5223:7;5258:25;;;:5;:25;;;;;5298:11;;-1:-1:-1;;;5298:11:30;;;;5290:43;;;;-1:-1:-1;;;5290:43:30;;;;;;;:::i;:::-;5359:10;5347:23;;;;:11;;;:23;;;;;;;;5339:57;;;;-1:-1:-1;;;5339:57:30;;;;;;;:::i;:::-;5403:22;5446:10;;5428:4;:15;;;:28;:63;;5490:1;5428:63;;;5477:10;;5459:4;:15;;;:28;;;;:::i;:::-;5403:88;-1:-1:-1;5502:18:30;;5498:139;;5530:42;;-1:-1:-1;;;5530:42:30;;5545:10;5530:42;;;6693:51:32;6760:18;;;6753:34;;;5530:5:30;-1:-1:-1;;;;;5530:14:30;;;;6666:18:32;;5530:42:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5616:14;5598:4;:15;;;:32;;;;:::i;:::-;5580:15;;;:50;5498:139;5648:66;;160:25:32;;;-1:-1:-1;;;;;5648:66:30;;;5667:10;;5648:66;;148:2:32;133:18;5648:66:30;;;;;;;;5728:14;5157:590;-1:-1:-1;;;5157:590:30:o;5751:438::-;-1:-1:-1;;;;;5843:25:30;;5823:17;5843:25;;;:5;:25;;;;;5883:11;;-1:-1:-1;;;5883:11:30;;;;5875:43;;;;-1:-1:-1;;;5875:43:30;;;;;;;:::i;:::-;5944:10;5932:23;;;;:11;;;:23;;;;;;;;5924:57;;;;-1:-1:-1;;;5924:57:30;;;;;;;:::i;:::-;6034:10;;:53;;-1:-1:-1;;;6034:53:30;;-1:-1:-1;;;;;;;;;;;6034:53:30;;;7254:25:32;-1:-1:-1;;;;;7315:32:32;;;7295:18;;;7288:60;6034:10:30;;;;:20;;7227:18:32;;6034:53:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;6094:18:30;;;;;;;6115:4;6094:11;;;:18;;;;;;:25;;-1:-1:-1;;6094:25:30;;;;;;;6131:53;6094:18;;6131:53;;;6146:10;;6131:53;;;5817:372;5751:438;;:::o;4408:745::-;-1:-1:-1;;;;;4499:25:30;;4464:7;4499:25;;;:5;:25;;;;;4540:11;;-1:-1:-1;;;4540:11:30;;;;4539:12;4531:47;;;;-1:-1:-1;;;4531:47:30;;7561:2:32;4531:47:30;;;7543:21:32;7600:2;7580:18;;;7573:30;-1:-1:-1;;;7619:18:32;;;7612:52;7681:18;;4531:47:30;7359:346:32;4531:47:30;4604:10;4592:23;;;;:11;;;:23;;;;;;;;4584:57;;;;-1:-1:-1;;;4584:57:30;;;;;;;:::i;:::-;4648:20;4684:4;:15;;;4671:10;;:28;:63;;4733:1;4671:63;;;4715:4;:15;;;4702:10;;:28;;;;:::i;:::-;4788:59;;-1:-1:-1;;;4788:59:30;;4807:10;4788:59;;;7950:34:32;4827:4:30;8000:18:32;;;7993:43;8052:18;;;8045:34;;;4648:86:30;;-1:-1:-1;4788:5:30;-1:-1:-1;;;;;4788:18:30;;;;7885::32;;4788:59:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4877:18:30;;-1:-1:-1;;;;4877:18:30;-1:-1:-1;;;4877:18:30;;;4919:15;;;;:30;;4937:12;;4919:30;:::i;:::-;4901:15;;;:48;4955:13;;;:26;;-1:-1:-1;;;;;;4955:26:30;4971:10;4955:26;;;5011:42;;;-1:-1:-1;;;5011:42:30;;;;-1:-1:-1;;;;;5011:40:30;;;;;:42;;;;;4955:13;;5011:42;;;;;;;4955:13;5011:40;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5065:57:30;;160:25:32;;;-1:-1:-1;;;;;5065:57:30;;;-1:-1:-1;5077:10:30;;-1:-1:-1;5065:57:30;;148:2:32;133:18;5065:57:30;14:177:32;2229:1563:30;2438:10;;2407:27;;-1:-1:-1;;;2407:27:30;;2423:10;2407:27;;;342:51:32;2379:12:30;;2438:10;-1:-1:-1;;;;;2407:5:30;:15;;;;315:18:32;;2407:27:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;2399:79;;;;-1:-1:-1;;;2399:79:30;;8611:2:32;2399:79:30;;;8593:21:32;8650:2;8630:18;;;8623:30;8689:27;8669:18;;;8662:55;8734:18;;2399:79:30;8409:349:32;2399:79:30;-1:-1:-1;;;;;2492:36:30;;2484:84;;;;-1:-1:-1;;;2484:84:30;;8965:2:32;2484:84:30;;;8947:21:32;9004:2;8984:18;;;8977:30;9043:34;9023:18;;;9016:62;-1:-1:-1;;;9094:18:32;;;9087:33;9137:19;;2484:84:30;8763:399:32;2484:84:30;2614:22;2656:4;2662:6;2670:18;2698:4;2713:1;2725;2639:89;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2789:60:30;;-1:-1:-1;;;2789:60:30;;-1:-1:-1;;;;;;;;;;;2789:60:30;;;7254:25:32;-1:-1:-1;;;;;2843:4:30;7315:32:32;;7295:18;;;7288:60;2614:114:30;;-1:-1:-1;2789:19:30;;;;;;7227:18:32;;2789:60:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2906:57:30;;-1:-1:-1;;;2906:57:30;;-1:-1:-1;;;;;;;;;;;2906:57:30;;;7254:25:32;2952:10:30;7295:18:32;;;7288:60;-1:-1:-1;;;;;2906:19:30;;;-1:-1:-1;2906:19:30;;-1:-1:-1;7227:18:32;;2906:57:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;3033:25:30;;3013:17;3033:25;;;:5;:25;;;;;;;;3064:22;;-1:-1:-1;;;;;;3092:18:30;;;-1:-1:-1;;;3092:18:30;;;3128:10;3116:23;;;3064:22;3116:11;;;:23;;;;;;:30;;-1:-1:-1;;3116:30:30;;;;;3170:10;;;3152:15;;;:28;3186:13;;;:26;;-1:-1:-1;;;;;;3186:26:30;;;;;;;;3218:10;:35;;;;;;;;;;;;;;;;;;;;;;;;3259:16;:18;;3033:25;;-1:-1:-1;3259:16:30;:18;;;:::i;:::-;;;;-1:-1:-1;;3334:51:30;;-1:-1:-1;;;3334:51:30;;-1:-1:-1;;;;;360:32:32;;;3334:51:30;;;342::32;-1:-1:-1;;3334:15:30;:27;;;;;;315:18:32;;3334:51:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3334:65:30;;3330:140;;3409:54;;-1:-1:-1;;;3409:54:30;;-1:-1:-1;;;;;360:32:32;;;3409:54:30;;;342:51:32;3409:15:30;:30;;;;315:18:32;;3409:54:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3330:140;3510:51;;-1:-1:-1;;;3510:51:30;;-1:-1:-1;;;;;360:32:32;;;3510:51:30;;;342::32;3510:15:30;:27;;;;315:18:32;;3510:51:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3475:13;;;;:87;;-1:-1:-1;;;;;;3475:87:30;-1:-1:-1;;;;;3475:87:30;;;;;;3662:10;;3616:57;;-1:-1:-1;;;3616:57:30;;3635:10;3616:57;;;7950:34:32;;;;3655:4:30;8000:18:32;;;7993:43;8052:18;;;8045:34;3616:5:30;:18;;;;;;7885::32;;3616:57:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3737:13;-1:-1:-1;;;;;3685:79:30;3717:9;-1:-1:-1;;;;;3685:79:30;3697:10;-1:-1:-1;;;;;3685:79:30;;3753:10;;3685:79;;;;160:25:32;;148:2;133:18;;14:177;3685:79:30;;;;;;;;-1:-1:-1;3778:9:30;2229:1563;-1:-1:-1;;;;;2229:1563:30:o;3796:608::-;-1:-1:-1;;;;;3888:25:30;;3853:7;3888:25;;;:5;:25;;;;;3928:11;;-1:-1:-1;;;3928:11:30;;;;3920:42;;;;-1:-1:-1;;;3920:42:30;;10942:2:32;3920:42:30;;;10924:21:32;10981:2;10961:18;;;10954:30;-1:-1:-1;;;11000:18:32;;;10993:48;11058:18;;3920:42:30;10740:342:32;3920:42:30;3988:10;3976:23;;;;:11;;;:23;;;;;;;;3968:57;;;;-1:-1:-1;;;3968:57:30;;;;;;;:::i;:::-;4057:15;;;;4094:13;;;;4079:45;;-1:-1:-1;;;4079:45:30;;-1:-1:-1;;;;;4094:13:30;;;4079:45;;;6693:51:32;6760:18;;;6753:34;;;4079:5:30;:14;;;;;;6666:18:32;;4079:45:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4155:19:30;;-1:-1:-1;;;;4155:19:30;;;4169:5;4180:15;;;:19;;;4205:13;;;:26;;-1:-1:-1;;;;;;4205:26:30;;;4259:40;;;-1:-1:-1;;;4259:40:30;;;;-1:-1:-1;;;;;4259:38:30;;;;;:40;;;;;;;;;;;4169:5;4259:38;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4311:60:30;;160:25:32;;;-1:-1:-1;;;;;4311:60:30;;;-1:-1:-1;4324:10:30;;-1:-1:-1;4311:60:30;;148:2:32;133:18;4311:60:30;14:177:32;1831:101:4;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6193:451:30:-;-1:-1:-1;;;;;6290:25:30;;6270:17;6290:25;;;:5;:25;;;;;6330:11;;-1:-1:-1;;;6330:11:30;;;;6322:43;;;;-1:-1:-1;;;6322:43:30;;;;;;;:::i;:::-;6391:10;6379:23;;;;:11;;;:23;;;;;;;;6371:57;;;;-1:-1:-1;;;6371:57:30;;;;;;;:::i;:::-;6485:10;;:54;;-1:-1:-1;;;6485:54:30;;-1:-1:-1;;;;;;;;;;;6485:54:30;;;7254:25:32;-1:-1:-1;;;;;7315:32:32;;;7295:18;;;7288:60;6485:10:30;;;;:21;;7227:18:32;;6485:54:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;6546:18:30;;;6567:5;6546:18;;;:11;;;:18;;;;;;:26;;-1:-1:-1;;6546:26:30;;;6584:55;6546:18;;6584:55;;;6601:10;;6584:55;;;6264:380;6193:451;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;11289:2:32;2161:73:4::1;::::0;::::1;11271:21:32::0;11328:2;11308:18;;;11301:30;11367:34;11347:18;;;11340:62;-1:-1:-1;;;11418:18:32;;;11411:36;11464:19;;2161:73:4::1;11087:402:32::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:16;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;11696:2:32;1414:68:4;;;11678:21:32;;;11715:18;;;11708:30;11774:34;11754:18;;;11747:62;11826:18;;1414:68:4;11494:356:32;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;404:139:32:-;-1:-1:-1;;;;;487:31:32;;477:42;;467:70;;533:1;530;523:12;548:419;631:6;639;692:2;680:9;671:7;667:23;663:32;660:52;;;708:1;705;698:12;660:52;747:9;734:23;766:39;799:5;766:39;:::i;:::-;824:5;-1:-1:-1;881:2:32;866:18;;853:32;894:41;853:32;894:41;:::i;:::-;954:7;944:17;;;548:419;;;;;:::o;1164:180::-;1223:6;1276:2;1264:9;1255:7;1251:23;1247:32;1244:52;;;1292:1;1289;1282:12;1244:52;-1:-1:-1;1315:23:32;;1164:180;-1:-1:-1;1164:180:32:o;1349:255::-;1408:6;1461:2;1449:9;1440:7;1436:23;1432:32;1429:52;;;1477:1;1474;1467:12;1429:52;1516:9;1503:23;1535:39;1568:5;1535:39;:::i;:::-;1593:5;1349:255;-1:-1:-1;;;1349:255:32:o;2476:127::-;2537:10;2532:3;2528:20;2525:1;2518:31;2568:4;2565:1;2558:15;2592:4;2589:1;2582:15;2608:719;2651:5;2704:3;2697:4;2689:6;2685:17;2681:27;2671:55;;2722:1;2719;2712:12;2671:55;2758:6;2745:20;2784:18;2821:2;2817;2814:10;2811:36;;;2827:18;;:::i;:::-;2902:2;2896:9;2870:2;2956:13;;-1:-1:-1;;2952:22:32;;;2976:2;2948:31;2944:40;2932:53;;;3000:18;;;3020:22;;;2997:46;2994:72;;;3046:18;;:::i;:::-;3086:10;3082:2;3075:22;3121:2;3113:6;3106:18;3167:3;3160:4;3155:2;3147:6;3143:15;3139:26;3136:35;3133:55;;;3184:1;3181;3174:12;3133:55;3248:2;3241:4;3233:6;3229:17;3222:4;3214:6;3210:17;3197:54;3295:1;3288:4;3283:2;3275:6;3271:15;3267:26;3260:37;3315:6;3306:15;;;;;;2608:719;;;;:::o;3332:770::-;3453:6;3461;3469;3477;3530:3;3518:9;3509:7;3505:23;3501:33;3498:53;;;3547:1;3544;3537:12;3498:53;3587:9;3574:23;3616:18;3657:2;3649:6;3646:14;3643:34;;;3673:1;3670;3663:12;3643:34;3696:50;3738:7;3729:6;3718:9;3714:22;3696:50;:::i;:::-;3686:60;;3799:2;3788:9;3784:18;3771:32;3755:48;;3828:2;3818:8;3815:16;3812:36;;;3844:1;3841;3834:12;3812:36;;3867:52;3911:7;3900:8;3889:9;3885:24;3867:52;:::i;:::-;3857:62;;;3966:2;3955:9;3951:18;3938:32;3928:42;;4020:2;4009:9;4005:18;3992:32;4033:39;4066:5;4033:39;:::i;:::-;3332:770;;;;-1:-1:-1;3332:770:32;;-1:-1:-1;;3332:770:32:o;5556:343::-;5758:2;5740:21;;;5797:2;5777:18;;;5770:30;-1:-1:-1;;;5831:2:32;5816:18;;5809:49;5890:2;5875:18;;5556:343::o;5904:345::-;6106:2;6088:21;;;6145:2;6125:18;;;6118:30;-1:-1:-1;;;6179:2:32;6164:18;;6157:51;6240:2;6225:18;;5904:345::o;6254:127::-;6315:10;6310:3;6306:20;6303:1;6296:31;6346:4;6343:1;6336:15;6370:4;6367:1;6360:15;6386:128;6453:9;;;6474:11;;;6471:37;;;6488:18;;:::i;6798:277::-;6865:6;6918:2;6906:9;6897:7;6893:23;6889:32;6886:52;;;6934:1;6931;6924:12;6886:52;6966:9;6960:16;7019:5;7012:13;7005:21;6998:5;6995:32;6985:60;;7041:1;7038;7031:12;8090:125;8155:9;;;8176:10;;;8173:36;;;8189:18;;:::i;8220:184::-;8290:6;8343:2;8331:9;8322:7;8318:23;8314:32;8311:52;;;8359:1;8356;8349:12;8311:52;-1:-1:-1;8382:16:32;;8220:184;-1:-1:-1;8220:184:32:o;9167:423::-;9209:3;9247:5;9241:12;9274:6;9269:3;9262:19;9299:1;9309:162;9323:6;9320:1;9317:13;9309:162;;;9385:4;9441:13;;;9437:22;;9431:29;9413:11;;;9409:20;;9402:59;9338:12;9309:162;;;9313:3;9516:1;9509:4;9500:6;9495:3;9491:16;9487:27;9480:38;9579:4;9572:2;9568:7;9563:2;9555:6;9551:15;9547:29;9542:3;9538:39;9534:50;9527:57;;;9167:423;;;;:::o;9595:736::-;9904:3;9893:9;9886:22;9867:4;9931:46;9972:3;9961:9;9957:19;9949:6;9931:46;:::i;:::-;10025:9;10017:6;10013:22;10008:2;9997:9;9993:18;9986:50;10053:33;10079:6;10071;10053:33;:::i;:::-;10117:2;10102:18;;10095:34;;;;-1:-1:-1;;;;;;;10203:15:32;;;10198:2;10183:18;;10176:43;10256:15;;;10250:3;10235:19;;10228:44;10309:15;;;10156:3;10288:19;;;10281:44;10045:41;9595:736;-1:-1:-1;;9595:736:32:o;10336:135::-;10375:3;10396:17;;;10393:43;;10416:18;;:::i;:::-;-1:-1:-1;10463:1:32;10452:13;;10336:135::o;10476:259::-;10546:6;10599:2;10587:9;10578:7;10574:23;10570:32;10567:52;;;10615:1;10612;10605:12;10567:52;10647:9;10641:16;10666:39;10699:5;10666:39;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./FantasyERC20.sol\";\nimport \"./RealityETH_ERC20_Factory.sol\";\n\n// openzeppelin ownable contract import\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract PredictionMarketV3Manager is Ownable, ReentrancyGuard {\n  address public immutable PMV3; // PredictionMarketV3 contract\n  IERC20 public immutable token; // Governance IERC20\n  uint256 public lockAmount; // amount necessary to lock to create a land\n  RealityETH_ERC20_Factory public immutable realitioFactory;\n\n  event LandCreated(address indexed user, address indexed token, address indexed tokenToAnswer, uint256 amountLocked);\n\n  event LandDisabled(address indexed user, address indexed token, uint256 amountUnlocked);\n\n  event LandEnabled(address indexed user, address indexed token, uint256 amountLocked);\n\n  event LandOffsetUnlocked(address indexed user, address indexed token, uint256 amountUnlocked);\n\n  event LandAdminAdded(address indexed user, address indexed token, address indexed admin);\n\n  event LandAdminRemoved(address indexed user, address indexed token, address indexed admin);\n\n  struct Land {\n    FantasyERC20 token;\n    bool active;\n    mapping(address => bool) admins;\n    uint256 lockAmount;\n    address lockUser;\n    IRealityETH_IERC20 realitio;\n  }\n\n  mapping(address => Land) public lands;\n  address[] public landTokens;\n  uint256 public landTokensLength;\n\n  constructor(\n    address _PMV3,\n    IERC20 _token,\n    uint256 _lockAmount,\n    address _realitioLibraryAddress\n  ) {\n    PMV3 = _PMV3;\n    token = _token;\n    lockAmount = _lockAmount;\n    realitioFactory = new RealityETH_ERC20_Factory(_realitioLibraryAddress);\n  }\n\n  function updateLockAmount(uint256 newLockAmount) external onlyOwner {\n    require(newLockAmount > 0, \"Lock amount must be greater than 0\");\n    require(newLockAmount != lockAmount, \"Lock amount is the same\");\n\n    lockAmount = newLockAmount;\n  }\n\n  // lockAmount is the amount of tokens that the user needs to lock to create a land\n  // by locking the amount the factory will create a fantasyERC20 token and store it in the contract\n  // the user will be the admin of the land\n  function createLand(\n    string memory name,\n    string memory symbol,\n    uint256 tokenAmountToClaim,\n    IERC20 tokenToAnswer\n  ) external returns (FantasyERC20) {\n    require(token.balanceOf(msg.sender) >= lockAmount, \"Not enough tokens to lock\");\n    require(address(tokenToAnswer) != address(0), \"Token to answer cannot be 0 address\");\n\n    // create a new fantasyERC20 token\n    FantasyERC20 landToken = new FantasyERC20(name, symbol, tokenAmountToClaim, address(PMV3), address(0), address(0));\n\n    // adding minting privileges to the PMV3 contract\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), address(PMV3));\n    // adding minting privileges to the msg.sender\n    landToken.grantRole(keccak256(\"MINTER_ROLE\"), msg.sender);\n\n    // store the new token in the contract\n    Land storage land = lands[address(landToken)];\n    land.token = landToken;\n    land.active = true;\n    land.admins[msg.sender] = true;\n    land.lockAmount = lockAmount;\n    land.lockUser = msg.sender;\n    landTokens.push(address(landToken));\n    landTokensLength++;\n\n    // creating the realityETH_ERC20 contract\n    if (realitioFactory.deployments(address(tokenToAnswer)) == address(0)) {\n      realitioFactory.createInstance(address(tokenToAnswer));\n    }\n    land.realitio = IRealityETH_IERC20(realitioFactory.deployments(address(tokenToAnswer)));\n\n    // transfer the lockAmount to the contract\n    token.transferFrom(msg.sender, address(this), lockAmount);\n\n    emit LandCreated(msg.sender, address(landToken), address(tokenToAnswer), lockAmount);\n\n    return landToken;\n  }\n\n  function disableLand(IERC20 landToken) external returns (uint256) {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land is not active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    uint256 amountToUnlock = land.lockAmount;\n\n    token.transfer(land.lockUser, amountToUnlock);\n\n    // disable the land\n    land.active = false;\n    land.lockAmount = 0;\n    land.lockUser = address(0);\n\n    // pausing token\n    FantasyERC20(address(landToken)).pause();\n\n    emit LandDisabled(msg.sender, address(landToken), amountToUnlock);\n\n    return amountToUnlock;\n  }\n\n  function enableLand(IERC20 landToken) external returns (uint256) {\n    Land storage land = lands[address(landToken)];\n\n    require(!land.active, \"Land is already active\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    uint256 amountToLock = lockAmount > land.lockAmount ? lockAmount - land.lockAmount : 0;\n\n    // transfer the lockAmount to the contract\n    token.transferFrom(msg.sender, address(this), amountToLock);\n\n    // enable the land\n    land.active = true;\n    land.lockAmount = land.lockAmount + amountToLock;\n    land.lockUser = msg.sender;\n\n    // unpausing token\n    FantasyERC20(address(landToken)).unpause();\n\n    emit LandEnabled(msg.sender, address(landToken), amountToLock);\n\n    return amountToLock;\n  }\n\n  function unlockOffsetFromLand(IERC20 landToken) external returns (uint256) {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    uint256 amountToUnlock = land.lockAmount > lockAmount ? land.lockAmount - lockAmount : 0;\n\n    if (amountToUnlock > 0) {\n      token.transfer(msg.sender, amountToUnlock);\n      land.lockAmount = land.lockAmount - amountToUnlock;\n    }\n\n    emit LandOffsetUnlocked(msg.sender, address(landToken), amountToUnlock);\n\n    return amountToUnlock;\n  }\n\n  function addAdminToLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // adding minting privileges to the admin\n    land.token.grantRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = true;\n\n    emit LandAdminAdded(msg.sender, address(landToken), admin);\n  }\n\n  function removeAdminFromLand(IERC20 landToken, address admin) external {\n    Land storage land = lands[address(landToken)];\n\n    require(land.active, \"Land does not exist\");\n    require(land.admins[msg.sender], \"Not admin of the land\");\n\n    // removing minting privileges from the admin\n    land.token.revokeRole(keccak256(\"MINTER_ROLE\"), admin);\n\n    land.admins[admin] = false;\n\n    emit LandAdminRemoved(msg.sender, address(landToken), admin);\n  }\n\n  function isAllowedToCreateMarket(IERC20 marketToken, address user) public view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isAllowedToResolveMarket(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active && land.admins[user];\n  }\n\n  function isIERC20TokenSocial(IERC20 marketToken) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.active;\n  }\n\n  function isLandAdmin(IERC20 marketToken, address user) external view returns (bool) {\n    Land storage land = lands[address(marketToken)];\n\n    return land.admins[user];\n  }\n}\n",
  "sourcePath": "/Users/andregoncalves/sideprojects/polkamarkets/polkamarkets-js/contracts/PredictionMarketV3Manager.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarketV3Manager.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Context": [
        2389
      ],
      "ERC165": [
        2588
      ],
      "ERC20": [
        1400
      ],
      "ERC20Burnable": [
        1522
      ],
      "ERC20Pausable": [
        1559
      ],
      "ERC20PresetMinterPauser": [
        1756
      ],
      "EnumerableSet": [
        4078
      ],
      "FantasyERC20": [
        4293
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "IERC165": [
        2600
      ],
      "IERC20": [
        1478
      ],
      "IERC20Metadata": [
        1584
      ],
      "IPredictionMarketV3Factory": [
        4346
      ],
      "IRealityETH_ERC20": [
        4949
      ],
      "IRealityETH_IERC20": [
        11922
      ],
      "Math": [
        3465
      ],
      "Ownable": [
        651
      ],
      "Pausable": [
        759
      ],
      "PredictionMarketV3Manager": [
        11908
      ],
      "RealityETH_ERC20_Factory": [
        12061
      ],
      "ReentrancyGuard": [
        813
      ],
      "Strings": [
        2564
      ]
    },
    "id": 11909,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11042,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:30"
      },
      {
        "absolutePath": "project:/contracts/FantasyERC20.sol",
        "file": "./FantasyERC20.sol",
        "id": 11043,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11909,
        "sourceUnit": 4294,
        "src": "58:28:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RealityETH_ERC20_Factory.sol",
        "file": "./RealityETH_ERC20_Factory.sol",
        "id": 11044,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11909,
        "sourceUnit": 12062,
        "src": "87:40:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 11045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11909,
        "sourceUnit": 652,
        "src": "169:52:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 11046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11909,
        "sourceUnit": 814,
        "src": "222:62:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11047,
              "name": "Ownable",
              "nameLocations": [
                "324:7:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "324:7:30"
            },
            "id": 11048,
            "nodeType": "InheritanceSpecifier",
            "src": "324:7:30"
          },
          {
            "baseName": {
              "id": 11049,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "333:15:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 813,
              "src": "333:15:30"
            },
            "id": 11050,
            "nodeType": "InheritanceSpecifier",
            "src": "333:15:30"
          }
        ],
        "canonicalName": "PredictionMarketV3Manager",
        "contractDependencies": [
          4293,
          12061
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11908,
        "linearizedBaseContracts": [
          11908,
          813,
          651,
          2389
        ],
        "name": "PredictionMarketV3Manager",
        "nameLocation": "295:25:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1cbe8a65",
            "id": 11052,
            "mutability": "immutable",
            "name": "PMV3",
            "nameLocation": "378:4:30",
            "nodeType": "VariableDeclaration",
            "scope": 11908,
            "src": "353:29:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11051,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 11055,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "441:5:30",
            "nodeType": "VariableDeclaration",
            "scope": 11908,
            "src": "417:29:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1478",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 11054,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11053,
                "name": "IERC20",
                "nameLocations": [
                  "417:6:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1478,
                "src": "417:6:30"
              },
              "referencedDeclaration": 1478,
              "src": "417:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1478",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 11057,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "486:10:30",
            "nodeType": "VariableDeclaration",
            "scope": 11908,
            "src": "471:25:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11056,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e3dd8ba",
            "id": 11060,
            "mutability": "immutable",
            "name": "realitioFactory",
            "nameLocation": "587:15:30",
            "nodeType": "VariableDeclaration",
            "scope": 11908,
            "src": "545:57:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
              "typeString": "contract RealityETH_ERC20_Factory"
            },
            "typeName": {
              "id": 11059,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11058,
                "name": "RealityETH_ERC20_Factory",
                "nameLocations": [
                  "545:24:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12061,
                "src": "545:24:30"
              },
              "referencedDeclaration": 12061,
              "src": "545:24:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                "typeString": "contract RealityETH_ERC20_Factory"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ba6e51248e93514eb089243e4d08f26db16ff133606694000e7124a41ee5deb4",
            "id": 11070,
            "name": "LandCreated",
            "nameLocation": "613:11:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11062,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "641:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11070,
                  "src": "625:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11064,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "663:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11070,
                  "src": "647:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11066,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "686:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11070,
                  "src": "670:29:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11068,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountLocked",
                  "nameLocation": "709:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11070,
                  "src": "701:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "624:98:30"
            },
            "src": "607:116:30"
          },
          {
            "anonymous": false,
            "eventSelector": "76f76e951d717cb73ae423c4e4a029c5dde6ef38673c8f6a20cb9eb5025de595",
            "id": 11078,
            "name": "LandDisabled",
            "nameLocation": "733:12:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11072,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "762:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11078,
                  "src": "746:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11074,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "784:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11078,
                  "src": "768:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11076,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountUnlocked",
                  "nameLocation": "799:14:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11078,
                  "src": "791:22:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "745:69:30"
            },
            "src": "727:88:30"
          },
          {
            "anonymous": false,
            "eventSelector": "9daf897774d766e38773bbeaf2f32d93fed4091373b77ebb7f5aee37417d1ab1",
            "id": 11086,
            "name": "LandEnabled",
            "nameLocation": "825:11:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11080,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "853:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11086,
                  "src": "837:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11082,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "875:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11086,
                  "src": "859:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountLocked",
                  "nameLocation": "890:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11086,
                  "src": "882:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:67:30"
            },
            "src": "819:85:30"
          },
          {
            "anonymous": false,
            "eventSelector": "762d0a2a8e474a7f467752b8c7d24a08142b5a877a95ceb46dfbbda482ec46d7",
            "id": 11094,
            "name": "LandOffsetUnlocked",
            "nameLocation": "914:18:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11088,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "949:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11094,
                  "src": "933:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11090,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "971:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11094,
                  "src": "955:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11092,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountUnlocked",
                  "nameLocation": "986:14:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11094,
                  "src": "978:22:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "932:69:30"
            },
            "src": "908:94:30"
          },
          {
            "anonymous": false,
            "eventSelector": "b8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68",
            "id": 11102,
            "name": "LandAdminAdded",
            "nameLocation": "1012:14:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11096,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1043:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11102,
                  "src": "1027:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11098,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1065:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11102,
                  "src": "1049:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11100,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1088:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11102,
                  "src": "1072:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1026:68:30"
            },
            "src": "1006:89:30"
          },
          {
            "anonymous": false,
            "eventSelector": "5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560",
            "id": 11110,
            "name": "LandAdminRemoved",
            "nameLocation": "1105:16:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11104,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1138:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11110,
                  "src": "1122:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1160:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11110,
                  "src": "1144:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11108,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1183:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11110,
                  "src": "1167:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1121:68:30"
            },
            "src": "1099:91:30"
          },
          {
            "canonicalName": "PredictionMarketV3Manager.Land",
            "id": 11127,
            "members": [
              {
                "constant": false,
                "id": 11113,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1225:5:30",
                "nodeType": "VariableDeclaration",
                "scope": 11127,
                "src": "1212:18:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                  "typeString": "contract FantasyERC20"
                },
                "typeName": {
                  "id": 11112,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 11111,
                    "name": "FantasyERC20",
                    "nameLocations": [
                      "1212:12:30"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4293,
                    "src": "1212:12:30"
                  },
                  "referencedDeclaration": 4293,
                  "src": "1212:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                    "typeString": "contract FantasyERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11115,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1241:6:30",
                "nodeType": "VariableDeclaration",
                "scope": 11127,
                "src": "1236:11:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11114,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1236:4:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11119,
                "mutability": "mutable",
                "name": "admins",
                "nameLocation": "1278:6:30",
                "nodeType": "VariableDeclaration",
                "scope": 11127,
                "src": "1253:31:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 11118,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 11116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1253:24:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 11117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11121,
                "mutability": "mutable",
                "name": "lockAmount",
                "nameLocation": "1298:10:30",
                "nodeType": "VariableDeclaration",
                "scope": 11127,
                "src": "1290:18:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11120,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1290:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11123,
                "mutability": "mutable",
                "name": "lockUser",
                "nameLocation": "1322:8:30",
                "nodeType": "VariableDeclaration",
                "scope": 11127,
                "src": "1314:16:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1314:7:30",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11126,
                "mutability": "mutable",
                "name": "realitio",
                "nameLocation": "1355:8:30",
                "nodeType": "VariableDeclaration",
                "scope": 11127,
                "src": "1336:27:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11922",
                  "typeString": "contract IRealityETH_IERC20"
                },
                "typeName": {
                  "id": 11125,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 11124,
                    "name": "IRealityETH_IERC20",
                    "nameLocations": [
                      "1336:18:30"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11922,
                    "src": "1336:18:30"
                  },
                  "referencedDeclaration": 11922,
                  "src": "1336:18:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11922",
                    "typeString": "contract IRealityETH_IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Land",
            "nameLocation": "1201:4:30",
            "nodeType": "StructDefinition",
            "scope": 11908,
            "src": "1194:174:30",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33b22760",
            "id": 11132,
            "mutability": "mutable",
            "name": "lands",
            "nameLocation": "1404:5:30",
            "nodeType": "VariableDeclaration",
            "scope": 11908,
            "src": "1372:37:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
              "typeString": "mapping(address => struct PredictionMarketV3Manager.Land)"
            },
            "typeName": {
              "id": 11131,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 11128,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1380:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1372:24:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                "typeString": "mapping(address => struct PredictionMarketV3Manager.Land)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11130,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11129,
                  "name": "Land",
                  "nameLocations": [
                    "1391:4:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11127,
                  "src": "1391:4:30"
                },
                "referencedDeclaration": 11127,
                "src": "1391:4:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                  "typeString": "struct PredictionMarketV3Manager.Land"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "30ccd17a",
            "id": 11135,
            "mutability": "mutable",
            "name": "landTokens",
            "nameLocation": "1430:10:30",
            "nodeType": "VariableDeclaration",
            "scope": 11908,
            "src": "1413:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 11133,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1413:7:30",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 11134,
              "nodeType": "ArrayTypeName",
              "src": "1413:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1311758b",
            "id": 11137,
            "mutability": "mutable",
            "name": "landTokensLength",
            "nameLocation": "1459:16:30",
            "nodeType": "VariableDeclaration",
            "scope": 11908,
            "src": "1444:31:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11136,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1444:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11169,
              "nodeType": "Block",
              "src": "1596:150:30",
              "statements": [
                {
                  "expression": {
                    "id": 11151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11149,
                      "name": "PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11052,
                      "src": "1602:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11150,
                      "name": "_PMV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11139,
                      "src": "1609:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1602:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11152,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:12:30"
                },
                {
                  "expression": {
                    "id": 11155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11153,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11055,
                      "src": "1620:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1478",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11154,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11142,
                      "src": "1628:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1478",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1620:14:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 11156,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:14:30"
                },
                {
                  "expression": {
                    "id": 11159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11157,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11057,
                      "src": "1640:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11158,
                      "name": "_lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11144,
                      "src": "1653:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1640:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11160,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:24:30"
                },
                {
                  "expression": {
                    "id": 11167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11161,
                      "name": "realitioFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11060,
                      "src": "1670:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11165,
                          "name": "_realitioLibraryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11146,
                          "src": "1717:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1688:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_RealityETH_ERC20_Factory_$12061_$",
                          "typeString": "function (address) returns (contract RealityETH_ERC20_Factory)"
                        },
                        "typeName": {
                          "id": 11163,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11162,
                            "name": "RealityETH_ERC20_Factory",
                            "nameLocations": [
                              "1692:24:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12061,
                            "src": "1692:24:30"
                          },
                          "referencedDeclaration": 12061,
                          "src": "1692:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        }
                      },
                      "id": 11166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1688:53:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                        "typeString": "contract RealityETH_ERC20_Factory"
                      }
                    },
                    "src": "1670:71:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                      "typeString": "contract RealityETH_ERC20_Factory"
                    }
                  },
                  "id": 11168,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:71:30"
                }
              ]
            },
            "id": 11170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11139,
                  "mutability": "mutable",
                  "name": "_PMV3",
                  "nameLocation": "1505:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11170,
                  "src": "1497:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11142,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1523:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11170,
                  "src": "1516:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11140,
                      "name": "IERC20",
                      "nameLocations": [
                        "1516:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "1516:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "1516:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11144,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "1543:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11170,
                  "src": "1535:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11146,
                  "mutability": "mutable",
                  "name": "_realitioLibraryAddress",
                  "nameLocation": "1568:23:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11170,
                  "src": "1560:31:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1491:104:30"
            },
            "returnParameters": {
              "id": 11148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:30"
            },
            "scope": 11908,
            "src": "1480:266:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11195,
              "nodeType": "Block",
              "src": "1818:177:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11178,
                          "name": "newLockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11172,
                          "src": "1832:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1848:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1832:17:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 11181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1851:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924",
                          "typeString": "literal_string \"Lock amount must be greater than 0\""
                        },
                        "value": "Lock amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f0f06a1aeadea4513b5a2ac18f9ce9da9f3a16f11a63a13e91936697c443924",
                          "typeString": "literal_string \"Lock amount must be greater than 0\""
                        }
                      ],
                      "id": 11177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1824:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:64:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11183,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:64:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11185,
                          "name": "newLockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11172,
                          "src": "1902:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 11186,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11057,
                          "src": "1919:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1902:27:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b20616d6f756e74206973207468652073616d65",
                        "id": 11188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1931:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb",
                          "typeString": "literal_string \"Lock amount is the same\""
                        },
                        "value": "Lock amount is the same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13765f5328bd502b4cd4127ac195a1936010b8a70efa3410e59cd11da19c9cdb",
                          "typeString": "literal_string \"Lock amount is the same\""
                        }
                      ],
                      "id": 11184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1894:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1894:63:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11190,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:63:30"
                },
                {
                  "expression": {
                    "id": 11193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11191,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11057,
                      "src": "1964:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11192,
                      "name": "newLockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11172,
                      "src": "1977:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1964:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11194,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:26:30"
                }
              ]
            },
            "functionSelector": "3c37db63",
            "id": 11196,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11174,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1808:9:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 570,
                  "src": "1808:9:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "1808:9:30"
              }
            ],
            "name": "updateLockAmount",
            "nameLocation": "1759:16:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11172,
                  "mutability": "mutable",
                  "name": "newLockAmount",
                  "nameLocation": "1784:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11196,
                  "src": "1776:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1775:23:30"
            },
            "returnParameters": {
              "id": 11176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1818:0:30"
            },
            "scope": 11908,
            "src": "1750:245:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11401,
              "nodeType": "Block",
              "src": "2393:1399:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 11214,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2423:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2427:6:30",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2423:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 11212,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11055,
                              "src": "2407:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 11213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2413:9:30",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1435,
                            "src": "2407:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 11216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2407:27:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 11217,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11057,
                          "src": "2438:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2407:41:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320746f206c6f636b",
                        "id": 11219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:27:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d",
                          "typeString": "literal_string \"Not enough tokens to lock\""
                        },
                        "value": "Not enough tokens to lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa041c24f7ce6a82b68234a02dd24a1391e14f1ca315d439f968c2a0d3c19b0d",
                          "typeString": "literal_string \"Not enough tokens to lock\""
                        }
                      ],
                      "id": 11211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2399:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:79:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11221,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:79:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11225,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11205,
                              "src": "2500:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 11224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2492:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2492:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2492:22:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2526:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2518:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11227,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2518:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2518:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2492:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20746f20616e737765722063616e6e6f7420626520302061646472657373",
                        "id": 11232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2530:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        },
                        "value": "Token to answer cannot be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8715180150614039c206350d0bb19f9500a7ac7bcb81974a067d4b4ae6904f89",
                          "typeString": "literal_string \"Token to answer cannot be 0 address\""
                        }
                      ],
                      "id": 11222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2484:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2484:84:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11234,
                  "nodeType": "ExpressionStatement",
                  "src": "2484:84:30"
                },
                {
                  "assignments": [
                    11237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11237,
                      "mutability": "mutable",
                      "name": "landToken",
                      "nameLocation": "2627:9:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11401,
                      "src": "2614:22:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                        "typeString": "contract FantasyERC20"
                      },
                      "typeName": {
                        "id": 11236,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11235,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2614:12:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4293,
                          "src": "2614:12:30"
                        },
                        "referencedDeclaration": 4293,
                        "src": "2614:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11257,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11241,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11198,
                        "src": "2656:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 11242,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11200,
                        "src": "2662:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 11243,
                        "name": "tokenAmountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11202,
                        "src": "2670:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11246,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11052,
                            "src": "2698:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2690:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11244,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2690:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2690:13:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2713:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2705:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2705:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2705:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2725:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2717:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11252,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2717:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2717:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2639:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_FantasyERC20_$4293_$",
                        "typeString": "function (string memory,string memory,uint256,address,address,address) returns (contract FantasyERC20)"
                      },
                      "typeName": {
                        "id": 11239,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11238,
                          "name": "FantasyERC20",
                          "nameLocations": [
                            "2643:12:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4293,
                          "src": "2643:12:30"
                        },
                        "referencedDeclaration": 4293,
                        "src": "2643:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      }
                    },
                    "id": 11256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2639:89:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2614:114:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 11262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2819:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 11261,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2809:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 11263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2809:24:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11266,
                            "name": "PMV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11052,
                            "src": "2843:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2835:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2835:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2835:13:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11258,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11237,
                        "src": "2789:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 11260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2799:9:30",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2789:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 11268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:60:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11269,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:60:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 11274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2936:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 11273,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2926:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 11275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2926:24:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 11276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2952:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2956:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2952:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11270,
                        "name": "landToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11237,
                        "src": "2906:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 11272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2916:9:30",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2906:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 11278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11279,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:57:30"
                },
                {
                  "assignments": [
                    11282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11282,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3026:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11401,
                      "src": "3013:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11280,
                          "name": "Land",
                          "nameLocations": [
                            "3013:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "3013:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "3013:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11289,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11283,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "3033:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11288,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11286,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11237,
                          "src": "3047:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                            "typeString": "contract FantasyERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                            "typeString": "contract FantasyERC20"
                          }
                        ],
                        "id": 11285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3039:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3039:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3039:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3033:25:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3013:45:30"
                },
                {
                  "expression": {
                    "id": 11294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11290,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11282,
                        "src": "3064:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3069:5:30",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11113,
                      "src": "3064:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11293,
                      "name": "landToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11237,
                      "src": "3077:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                        "typeString": "contract FantasyERC20"
                      }
                    },
                    "src": "3064:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "id": 11295,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:22:30"
                },
                {
                  "expression": {
                    "id": 11300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11296,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11282,
                        "src": "3092:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3097:6:30",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11115,
                      "src": "3092:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3106:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3092:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11301,
                  "nodeType": "ExpressionStatement",
                  "src": "3092:18:30"
                },
                {
                  "expression": {
                    "id": 11309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11302,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11282,
                          "src": "3116:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11306,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3121:6:30",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11119,
                        "src": "3116:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11307,
                      "indexExpression": {
                        "expression": {
                          "id": 11304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3128:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3132:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3128:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3116:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3142:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3116:30:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11310,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:30:30"
                },
                {
                  "expression": {
                    "id": 11315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11311,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11282,
                        "src": "3152:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3157:10:30",
                      "memberName": "lockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11121,
                      "src": "3152:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11314,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11057,
                      "src": "3170:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3152:28:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11316,
                  "nodeType": "ExpressionStatement",
                  "src": "3152:28:30"
                },
                {
                  "expression": {
                    "id": 11322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11317,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11282,
                        "src": "3186:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11319,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3191:8:30",
                      "memberName": "lockUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11123,
                      "src": "3186:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11320,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3202:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3206:6:30",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3202:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3186:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11323,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:26:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11329,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11237,
                            "src": "3242:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 11328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3234:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11327,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3234:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3234:18:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11324,
                        "name": "landTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11135,
                        "src": "3218:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3229:4:30",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3218:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 11331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:35:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11332,
                  "nodeType": "ExpressionStatement",
                  "src": "3218:35:30"
                },
                {
                  "expression": {
                    "id": 11334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3259:18:30",
                    "subExpression": {
                      "id": 11333,
                      "name": "landTokensLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11137,
                      "src": "3259:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11335,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:18:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11340,
                              "name": "tokenToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11205,
                              "src": "3370:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 11339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3362:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11338,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3362:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3362:22:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 11336,
                          "name": "realitioFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11060,
                          "src": "3334:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                            "typeString": "contract RealityETH_ERC20_Factory"
                          }
                        },
                        "id": 11337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3350:11:30",
                        "memberName": "deployments",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11928,
                        "src": "3334:27:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) view external returns (address)"
                        }
                      },
                      "id": 11342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3334:51:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3397:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3389:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3389:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3389:10:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3334:65:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11358,
                  "nodeType": "IfStatement",
                  "src": "3330:140:30",
                  "trueBody": {
                    "id": 11357,
                    "nodeType": "Block",
                    "src": "3401:69:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 11353,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11205,
                                  "src": "3448:13:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 11352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3440:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 11351,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3440:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3440:22:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 11348,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11060,
                              "src": "3409:15:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 11350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3425:14:30",
                            "memberName": "createInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12060,
                            "src": "3409:30:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 11355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3409:54:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11356,
                        "nodeType": "ExpressionStatement",
                        "src": "3409:54:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11359,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11282,
                        "src": "3475:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11361,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3480:8:30",
                      "memberName": "realitio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11126,
                      "src": "3475:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11922",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 11367,
                                  "name": "tokenToAnswer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11205,
                                  "src": "3546:13:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1478",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 11366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3538:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 11365,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3538:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3538:22:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 11363,
                              "name": "realitioFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11060,
                              "src": "3510:15:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityETH_ERC20_Factory_$12061",
                                "typeString": "contract RealityETH_ERC20_Factory"
                              }
                            },
                            "id": 11364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3526:11:30",
                            "memberName": "deployments",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11928,
                            "src": "3510:27:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 11369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3510:51:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11362,
                        "name": "IRealityETH_IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11922,
                        "src": "3491:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRealityETH_IERC20_$11922_$",
                          "typeString": "type(contract IRealityETH_IERC20)"
                        }
                      },
                      "id": 11370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3491:71:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11922",
                        "typeString": "contract IRealityETH_IERC20"
                      }
                    },
                    "src": "3475:87:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRealityETH_IERC20_$11922",
                      "typeString": "contract IRealityETH_IERC20"
                    }
                  },
                  "id": 11372,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:87:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3635:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3639:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3635:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11380,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3655:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$11908",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$11908",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          ],
                          "id": 11379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3647:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3647:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3647:13:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11382,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11057,
                        "src": "3662:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11373,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11055,
                        "src": "3616:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1478",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3622:12:30",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "3616:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11384,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:57:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3697:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3701:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3697:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11390,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11237,
                            "src": "3717:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                              "typeString": "contract FantasyERC20"
                            }
                          ],
                          "id": 11389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3709:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3709:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3709:18:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11394,
                            "name": "tokenToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11205,
                            "src": "3737:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 11393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3729:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3729:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3729:22:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11396,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11057,
                        "src": "3753:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11385,
                      "name": "LandCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11070,
                      "src": "3685:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 11397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3685:79:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11398,
                  "nodeType": "EmitStatement",
                  "src": "3680:84:30"
                },
                {
                  "expression": {
                    "id": 11399,
                    "name": "landToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11237,
                    "src": "3778:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "functionReturnParameters": 11210,
                  "id": 11400,
                  "nodeType": "Return",
                  "src": "3771:16:30"
                }
              ]
            },
            "functionSelector": "67d73c91",
            "id": 11402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLand",
            "nameLocation": "2238:10:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11198,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2268:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11402,
                  "src": "2254:18:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11200,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "2292:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11402,
                  "src": "2278:20:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11202,
                  "mutability": "mutable",
                  "name": "tokenAmountToClaim",
                  "nameLocation": "2312:18:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11402,
                  "src": "2304:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11205,
                  "mutability": "mutable",
                  "name": "tokenToAnswer",
                  "nameLocation": "2343:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11402,
                  "src": "2336:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11204,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11203,
                      "name": "IERC20",
                      "nameLocations": [
                        "2336:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "2336:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "2336:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2248:112:30"
            },
            "returnParameters": {
              "id": 11210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11402,
                  "src": "2379:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                    "typeString": "contract FantasyERC20"
                  },
                  "typeName": {
                    "id": 11208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11207,
                      "name": "FantasyERC20",
                      "nameLocations": [
                        "2379:12:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4293,
                      "src": "2379:12:30"
                    },
                    "referencedDeclaration": 4293,
                    "src": "2379:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                      "typeString": "contract FantasyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2378:14:30"
            },
            "scope": 11908,
            "src": "2229:1563:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11490,
              "nodeType": "Block",
              "src": "3862:542:30",
              "statements": [
                {
                  "assignments": [
                    11412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11412,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "3881:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11490,
                      "src": "3868:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11411,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11410,
                          "name": "Land",
                          "nameLocations": [
                            "3868:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "3868:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "3868:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11419,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11413,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "3888:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11418,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11416,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11405,
                          "src": "3902:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3894:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3894:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3894:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3888:25:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3868:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11421,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11412,
                          "src": "3928:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11422,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3933:6:30",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11115,
                        "src": "3928:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e64206973206e6f7420616374697665",
                        "id": 11423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3941:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        },
                        "value": "Land is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eb8b8ab3e6666ac96519e0ca3470a2db15fd18c6fe47e9db599d39912cc3f2",
                          "typeString": "literal_string \"Land is not active\""
                        }
                      ],
                      "id": 11420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3920:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3920:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11425,
                  "nodeType": "ExpressionStatement",
                  "src": "3920:42:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 11427,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11412,
                            "src": "3976:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 11428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3981:6:30",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11119,
                          "src": "3976:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11431,
                        "indexExpression": {
                          "expression": {
                            "id": 11429,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3988:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3992:6:30",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3988:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3976:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 11432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4001:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 11426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3968:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3968:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11434,
                  "nodeType": "ExpressionStatement",
                  "src": "3968:57:30"
                },
                {
                  "assignments": [
                    11436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11436,
                      "mutability": "mutable",
                      "name": "amountToUnlock",
                      "nameLocation": "4040:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11490,
                      "src": "4032:22:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4032:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11439,
                  "initialValue": {
                    "expression": {
                      "id": 11437,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11412,
                      "src": "4057:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                      }
                    },
                    "id": 11438,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4062:10:30",
                    "memberName": "lockAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11121,
                    "src": "4057:15:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4032:40:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11443,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11412,
                          "src": "4094:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11444,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4099:8:30",
                        "memberName": "lockUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11123,
                        "src": "4094:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11445,
                        "name": "amountToUnlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11436,
                        "src": "4109:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11440,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11055,
                        "src": "4079:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1478",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4085:8:30",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1445,
                      "src": "4079:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4079:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11447,
                  "nodeType": "ExpressionStatement",
                  "src": "4079:45:30"
                },
                {
                  "expression": {
                    "id": 11452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11448,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11412,
                        "src": "4155:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4160:6:30",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11115,
                      "src": "4155:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 11451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4169:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4155:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11453,
                  "nodeType": "ExpressionStatement",
                  "src": "4155:19:30"
                },
                {
                  "expression": {
                    "id": 11458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11454,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11412,
                        "src": "4180:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11456,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4185:10:30",
                      "memberName": "lockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11121,
                      "src": "4180:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 11457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4198:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4180:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11459,
                  "nodeType": "ExpressionStatement",
                  "src": "4180:19:30"
                },
                {
                  "expression": {
                    "id": 11467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11460,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11412,
                        "src": "4205:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11462,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4210:8:30",
                      "memberName": "lockUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11123,
                      "src": "4205:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4229:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4221:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11463,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4221:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4221:10:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4205:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11468,
                  "nodeType": "ExpressionStatement",
                  "src": "4205:26:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11472,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11405,
                                "src": "4280:9:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 11471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4272:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11470,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4272:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4272:18:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11469,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4293,
                          "src": "4259:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4293_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 11474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4259:32:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 11475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4292:5:30",
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "4259:38:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 11476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4259:40:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11477,
                  "nodeType": "ExpressionStatement",
                  "src": "4259:40:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11479,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4324:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4328:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4324:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11483,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11405,
                            "src": "4344:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 11482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4336:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11481,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4336:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4336:18:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11485,
                        "name": "amountToUnlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11436,
                        "src": "4356:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11478,
                      "name": "LandDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11078,
                      "src": "4311:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4311:60:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11487,
                  "nodeType": "EmitStatement",
                  "src": "4306:65:30"
                },
                {
                  "expression": {
                    "id": 11488,
                    "name": "amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11436,
                    "src": "4385:14:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11409,
                  "id": 11489,
                  "nodeType": "Return",
                  "src": "4378:21:30"
                }
              ]
            },
            "functionSelector": "70e92078",
            "id": 11491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableLand",
            "nameLocation": "3805:11:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11405,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "3824:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11491,
                  "src": "3817:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11404,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11403,
                      "name": "IERC20",
                      "nameLocations": [
                        "3817:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "3817:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "3817:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3816:18:30"
            },
            "returnParameters": {
              "id": 11409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11491,
                  "src": "3853:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3852:9:30"
            },
            "scope": 11908,
            "src": "3796:608:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11593,
              "nodeType": "Block",
              "src": "4473:680:30",
              "statements": [
                {
                  "assignments": [
                    11501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11501,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "4492:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11593,
                      "src": "4479:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11500,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11499,
                          "name": "Land",
                          "nameLocations": [
                            "4479:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "4479:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "4479:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11508,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11502,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "4499:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11507,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11505,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11494,
                          "src": "4513:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4505:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4505:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4505:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4499:25:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4479:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4539:12:30",
                        "subExpression": {
                          "expression": {
                            "id": 11510,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11501,
                            "src": "4540:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 11511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4545:6:30",
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11115,
                          "src": "4540:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420697320616c726561647920616374697665",
                        "id": 11513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4553:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        },
                        "value": "Land is already active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176d5626888faeed38dd3fab1e3c86bb6da0ee7029b651d365fb04edbacffd4e",
                          "typeString": "literal_string \"Land is already active\""
                        }
                      ],
                      "id": 11509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4531:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4531:47:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11515,
                  "nodeType": "ExpressionStatement",
                  "src": "4531:47:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 11517,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11501,
                            "src": "4592:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 11518,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4597:6:30",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11119,
                          "src": "4592:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11521,
                        "indexExpression": {
                          "expression": {
                            "id": 11519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4604:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4608:6:30",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4604:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4592:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 11522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4617:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 11516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4584:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4584:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11524,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:57:30"
                },
                {
                  "assignments": [
                    11526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11526,
                      "mutability": "mutable",
                      "name": "amountToLock",
                      "nameLocation": "4656:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11593,
                      "src": "4648:20:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11525,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4648:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11537,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11527,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11057,
                        "src": "4671:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 11528,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11501,
                          "src": "4684:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11529,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4689:10:30",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11121,
                        "src": "4684:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4671:28:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 11535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4733:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 11536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4671:63:30",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11531,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11057,
                        "src": "4702:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 11532,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11501,
                          "src": "4715:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11533,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4720:10:30",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11121,
                        "src": "4715:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4702:28:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4648:86:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11541,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4807:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4811:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4807:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11545,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4827:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$11908",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarketV3Manager_$11908",
                              "typeString": "contract PredictionMarketV3Manager"
                            }
                          ],
                          "id": 11544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4819:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11543,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4819:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4819:13:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11547,
                        "name": "amountToLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11526,
                        "src": "4834:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11538,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11055,
                        "src": "4788:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1478",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4794:12:30",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "4788:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:59:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11549,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:59:30"
                },
                {
                  "expression": {
                    "id": 11554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11550,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11501,
                        "src": "4877:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11552,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4882:6:30",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11115,
                      "src": "4877:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4891:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4877:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11555,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:18:30"
                },
                {
                  "expression": {
                    "id": 11563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11556,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11501,
                        "src": "4901:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11558,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4906:10:30",
                      "memberName": "lockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11121,
                      "src": "4901:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11559,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11501,
                          "src": "4919:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11560,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4924:10:30",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11121,
                        "src": "4919:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 11561,
                        "name": "amountToLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11526,
                        "src": "4937:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4919:30:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4901:48:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11564,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:48:30"
                },
                {
                  "expression": {
                    "id": 11570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11565,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11501,
                        "src": "4955:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4960:8:30",
                      "memberName": "lockUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11123,
                      "src": "4955:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11568,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4971:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4975:6:30",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4971:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4955:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11571,
                  "nodeType": "ExpressionStatement",
                  "src": "4955:26:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11575,
                                "name": "landToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11494,
                                "src": "5032:9:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1478",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 11574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5024:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11573,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5024:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5024:18:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11572,
                          "name": "FantasyERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4293,
                          "src": "5011:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FantasyERC20_$4293_$",
                            "typeString": "type(contract FantasyERC20)"
                          }
                        },
                        "id": 11577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5011:32:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 11578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5044:7:30",
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "5011:40:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 11579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5011:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11580,
                  "nodeType": "ExpressionStatement",
                  "src": "5011:42:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11582,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5077:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5081:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5077:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11586,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11494,
                            "src": "5097:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 11585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5089:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11584,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5089:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5089:18:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11588,
                        "name": "amountToLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11526,
                        "src": "5109:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11581,
                      "name": "LandEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11086,
                      "src": "5065:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11590,
                  "nodeType": "EmitStatement",
                  "src": "5060:62:30"
                },
                {
                  "expression": {
                    "id": 11591,
                    "name": "amountToLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11526,
                    "src": "5136:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11498,
                  "id": 11592,
                  "nodeType": "Return",
                  "src": "5129:19:30"
                }
              ]
            },
            "functionSelector": "5d341ae5",
            "id": 11594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableLand",
            "nameLocation": "4417:10:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11494,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "4435:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11594,
                  "src": "4428:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11493,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11492,
                      "name": "IERC20",
                      "nameLocations": [
                        "4428:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "4428:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "4428:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4427:18:30"
            },
            "returnParameters": {
              "id": 11498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11594,
                  "src": "4464:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4464:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4463:9:30"
            },
            "scope": 11908,
            "src": "4408:745:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11674,
              "nodeType": "Block",
              "src": "5232:515:30",
              "statements": [
                {
                  "assignments": [
                    11604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11604,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5251:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11674,
                      "src": "5238:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11603,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11602,
                          "name": "Land",
                          "nameLocations": [
                            "5238:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "5238:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "5238:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11611,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11605,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "5258:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11610,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11608,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11597,
                          "src": "5272:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5264:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5264:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5264:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5258:25:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5238:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11613,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11604,
                          "src": "5298:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11614,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5303:6:30",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11115,
                        "src": "5298:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 11615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5311:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 11612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5290:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5290:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11617,
                  "nodeType": "ExpressionStatement",
                  "src": "5290:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 11619,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11604,
                            "src": "5347:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 11620,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5352:6:30",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11119,
                          "src": "5347:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11623,
                        "indexExpression": {
                          "expression": {
                            "id": 11621,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5359:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5363:6:30",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5359:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5347:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 11624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5372:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 11618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5339:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5339:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11626,
                  "nodeType": "ExpressionStatement",
                  "src": "5339:57:30"
                },
                {
                  "assignments": [
                    11628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11628,
                      "mutability": "mutable",
                      "name": "amountToUnlock",
                      "nameLocation": "5411:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11674,
                      "src": "5403:22:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5403:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11639,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11629,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11604,
                          "src": "5428:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11630,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5433:10:30",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11121,
                        "src": "5428:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 11631,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11057,
                        "src": "5446:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5428:28:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 11637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5490:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 11638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5428:63:30",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11633,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11604,
                          "src": "5459:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11634,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5464:10:30",
                        "memberName": "lockAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11121,
                        "src": "5459:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 11635,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11057,
                        "src": "5477:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5459:28:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5403:88:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11640,
                      "name": "amountToUnlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11628,
                      "src": "5502:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5519:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5502:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11661,
                  "nodeType": "IfStatement",
                  "src": "5498:139:30",
                  "trueBody": {
                    "id": 11660,
                    "nodeType": "Block",
                    "src": "5522:115:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 11646,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5545:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5549:6:30",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5545:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11648,
                              "name": "amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11628,
                              "src": "5557:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11643,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11055,
                              "src": "5530:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1478",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 11645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5536:8:30",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1445,
                            "src": "5530:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 11649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5530:42:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11650,
                        "nodeType": "ExpressionStatement",
                        "src": "5530:42:30"
                      },
                      {
                        "expression": {
                          "id": 11658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 11651,
                              "name": "land",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11604,
                              "src": "5580:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                                "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                              }
                            },
                            "id": 11653,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5585:10:30",
                            "memberName": "lockAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11121,
                            "src": "5580:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 11654,
                                "name": "land",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11604,
                                "src": "5598:4:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                                  "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                                }
                              },
                              "id": 11655,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5603:10:30",
                              "memberName": "lockAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11121,
                              "src": "5598:15:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 11656,
                              "name": "amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11628,
                              "src": "5616:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5598:32:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5580:50:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11659,
                        "nodeType": "ExpressionStatement",
                        "src": "5580:50:30"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11663,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5667:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5671:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5667:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11667,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11597,
                            "src": "5687:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 11666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5679:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11665,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5679:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5679:18:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11669,
                        "name": "amountToUnlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11628,
                        "src": "5699:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11662,
                      "name": "LandOffsetUnlocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11094,
                      "src": "5648:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5648:66:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11671,
                  "nodeType": "EmitStatement",
                  "src": "5643:71:30"
                },
                {
                  "expression": {
                    "id": 11672,
                    "name": "amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11628,
                    "src": "5728:14:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11601,
                  "id": 11673,
                  "nodeType": "Return",
                  "src": "5721:21:30"
                }
              ]
            },
            "functionSelector": "3ccd4145",
            "id": 11675,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockOffsetFromLand",
            "nameLocation": "5166:20:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11597,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "5194:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11675,
                  "src": "5187:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11596,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11595,
                      "name": "IERC20",
                      "nameLocations": [
                        "5187:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5187:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5187:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5186:18:30"
            },
            "returnParameters": {
              "id": 11601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11675,
                  "src": "5223:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5222:9:30"
            },
            "scope": 11908,
            "src": "5157:590:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11737,
              "nodeType": "Block",
              "src": "5817:372:30",
              "statements": [
                {
                  "assignments": [
                    11685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11685,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "5836:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11737,
                      "src": "5823:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11684,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11683,
                          "name": "Land",
                          "nameLocations": [
                            "5823:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "5823:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "5823:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11692,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11686,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "5843:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11691,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11689,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11678,
                          "src": "5857:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5849:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11687,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5849:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5849:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5843:25:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5823:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11694,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11685,
                          "src": "5883:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11695,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5888:6:30",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11115,
                        "src": "5883:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 11696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5896:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 11693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5875:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11698,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 11700,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11685,
                            "src": "5932:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 11701,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5937:6:30",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11119,
                          "src": "5932:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11704,
                        "indexExpression": {
                          "expression": {
                            "id": 11702,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5944:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5948:6:30",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5944:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5932:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 11705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5957:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 11699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5924:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5924:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11707,
                  "nodeType": "ExpressionStatement",
                  "src": "5924:57:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 11714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6065:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 11713,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "6055:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 11715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6055:24:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 11716,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11680,
                        "src": "6081:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 11708,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11685,
                          "src": "6034:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6039:5:30",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11113,
                        "src": "6034:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 11712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6045:9:30",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "6034:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 11717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6034:53:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11718,
                  "nodeType": "ExpressionStatement",
                  "src": "6034:53:30"
                },
                {
                  "expression": {
                    "id": 11725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11719,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11685,
                          "src": "6094:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11722,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6099:6:30",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11119,
                        "src": "6094:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11723,
                      "indexExpression": {
                        "id": 11721,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11680,
                        "src": "6106:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6094:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6115:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6094:25:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11726,
                  "nodeType": "ExpressionStatement",
                  "src": "6094:25:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6146:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6150:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6146:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11732,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11678,
                            "src": "6166:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 11731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6158:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6158:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6158:18:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11734,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11680,
                        "src": "6178:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11727,
                      "name": "LandAdminAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11102,
                      "src": "6131:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 11735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6131:53:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11736,
                  "nodeType": "EmitStatement",
                  "src": "6126:58:30"
                }
              ]
            },
            "functionSelector": "4fe62a5b",
            "id": 11738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAdminToLand",
            "nameLocation": "5760:14:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11678,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "5782:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11738,
                  "src": "5775:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11677,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11676,
                      "name": "IERC20",
                      "nameLocations": [
                        "5775:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "5775:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "5775:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11680,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "5801:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11738,
                  "src": "5793:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5793:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5774:33:30"
            },
            "returnParameters": {
              "id": 11682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5817:0:30"
            },
            "scope": 11908,
            "src": "5751:438:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11800,
              "nodeType": "Block",
              "src": "6264:380:30",
              "statements": [
                {
                  "assignments": [
                    11748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11748,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "6283:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11800,
                      "src": "6270:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11747,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11746,
                          "name": "Land",
                          "nameLocations": [
                            "6270:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "6270:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "6270:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11755,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11749,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "6290:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11754,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11752,
                          "name": "landToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11741,
                          "src": "6304:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6296:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11750,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6296:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6296:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6290:25:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6270:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11757,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11748,
                          "src": "6330:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11758,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6335:6:30",
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11115,
                        "src": "6330:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420646f6573206e6f74206578697374",
                        "id": 11759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6343:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        },
                        "value": "Land does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87447da1ffd835bc948bcb2afb2aca2311f4299298a94e59895f6798aacee7dd",
                          "typeString": "literal_string \"Land does not exist\""
                        }
                      ],
                      "id": 11756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6322:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6322:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11761,
                  "nodeType": "ExpressionStatement",
                  "src": "6322:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 11763,
                            "name": "land",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11748,
                            "src": "6379:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                              "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                            }
                          },
                          "id": 11764,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6384:6:30",
                          "memberName": "admins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11119,
                          "src": "6379:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11767,
                        "indexExpression": {
                          "expression": {
                            "id": 11765,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6391:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6395:6:30",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6391:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6379:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061646d696e206f6620746865206c616e64",
                        "id": 11768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6404:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        },
                        "value": "Not admin of the land"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7583062e3cdff46eb42e74b0a3006fac35627e4f8a3e51c8a891f88286191edd",
                          "typeString": "literal_string \"Not admin of the land\""
                        }
                      ],
                      "id": 11762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6371:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6371:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11770,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:57:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 11777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6517:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 11776,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "6507:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 11778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6507:24:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 11779,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11743,
                        "src": "6533:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 11771,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11748,
                          "src": "6485:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6490:5:30",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11113,
                        "src": "6485:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FantasyERC20_$4293",
                          "typeString": "contract FantasyERC20"
                        }
                      },
                      "id": 11775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6496:10:30",
                      "memberName": "revokeRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "6485:21:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 11780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6485:54:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11781,
                  "nodeType": "ExpressionStatement",
                  "src": "6485:54:30"
                },
                {
                  "expression": {
                    "id": 11788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11782,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11748,
                          "src": "6546:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11785,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6551:6:30",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11119,
                        "src": "6546:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11786,
                      "indexExpression": {
                        "id": 11784,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11743,
                        "src": "6558:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6546:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 11787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6567:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6546:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11789,
                  "nodeType": "ExpressionStatement",
                  "src": "6546:26:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11791,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6601:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6605:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6601:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11795,
                            "name": "landToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11741,
                            "src": "6621:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1478",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 11794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6613:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11793,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6613:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6613:18:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11797,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11743,
                        "src": "6633:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11790,
                      "name": "LandAdminRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11110,
                      "src": "6584:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 11798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6584:55:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11799,
                  "nodeType": "EmitStatement",
                  "src": "6579:60:30"
                }
              ]
            },
            "functionSelector": "86b5c5b1",
            "id": 11801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdminFromLand",
            "nameLocation": "6202:19:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11741,
                  "mutability": "mutable",
                  "name": "landToken",
                  "nameLocation": "6229:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11801,
                  "src": "6222:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11740,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11739,
                      "name": "IERC20",
                      "nameLocations": [
                        "6222:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "6222:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "6222:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11743,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "6248:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11801,
                  "src": "6240:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6240:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6221:33:30"
            },
            "returnParameters": {
              "id": 11745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6264:0:30"
            },
            "scope": 11908,
            "src": "6193:451:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11829,
              "nodeType": "Block",
              "src": "6742:104:30",
              "statements": [
                {
                  "assignments": [
                    11813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11813,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "6761:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11829,
                      "src": "6748:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11812,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11811,
                          "name": "Land",
                          "nameLocations": [
                            "6748:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "6748:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "6748:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11820,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11814,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "6768:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11819,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11817,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11804,
                          "src": "6782:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6774:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6774:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6774:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6768:27:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6748:47:30"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11821,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11813,
                        "src": "6809:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11822,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6814:6:30",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11115,
                      "src": "6809:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 11823,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11813,
                          "src": "6824:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11824,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6829:6:30",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11119,
                        "src": "6824:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11826,
                      "indexExpression": {
                        "id": 11825,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11806,
                        "src": "6836:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6824:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6809:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11810,
                  "id": 11828,
                  "nodeType": "Return",
                  "src": "6802:39:30"
                }
              ]
            },
            "functionSelector": "25c72059",
            "id": 11830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToCreateMarket",
            "nameLocation": "6657:23:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11804,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "6688:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11830,
                  "src": "6681:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11802,
                      "name": "IERC20",
                      "nameLocations": [
                        "6681:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "6681:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "6681:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11806,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6709:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11830,
                  "src": "6701:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6680:34:30"
            },
            "returnParameters": {
              "id": 11810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11830,
                  "src": "6736:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11808,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6736:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6735:6:30"
            },
            "scope": 11908,
            "src": "6648:198:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11858,
              "nodeType": "Block",
              "src": "6947:104:30",
              "statements": [
                {
                  "assignments": [
                    11842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11842,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "6966:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11858,
                      "src": "6953:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11841,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11840,
                          "name": "Land",
                          "nameLocations": [
                            "6953:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "6953:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "6953:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11849,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11843,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "6973:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11848,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11846,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11833,
                          "src": "6987:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6979:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6979:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6979:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6973:27:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6953:47:30"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11850,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11842,
                        "src": "7014:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7019:6:30",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11115,
                      "src": "7014:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 11852,
                          "name": "land",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11842,
                          "src": "7029:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                            "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                          }
                        },
                        "id": 11853,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7034:6:30",
                        "memberName": "admins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11119,
                        "src": "7029:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11855,
                      "indexExpression": {
                        "id": 11854,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11835,
                        "src": "7041:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7029:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7014:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11839,
                  "id": 11857,
                  "nodeType": "Return",
                  "src": "7007:39:30"
                }
              ]
            },
            "functionSelector": "d1aeb5c2",
            "id": 11859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedToResolveMarket",
            "nameLocation": "6859:24:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11833,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "6891:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11859,
                  "src": "6884:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11831,
                      "name": "IERC20",
                      "nameLocations": [
                        "6884:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "6884:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "6884:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11835,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6912:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11859,
                  "src": "6904:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6904:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6883:34:30"
            },
            "returnParameters": {
              "id": 11839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11838,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11859,
                  "src": "6941:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11837,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6941:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6940:6:30"
            },
            "scope": 11908,
            "src": "6850:201:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11880,
              "nodeType": "Block",
              "src": "7133:83:30",
              "statements": [
                {
                  "assignments": [
                    11869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11869,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "7152:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11880,
                      "src": "7139:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11868,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11867,
                          "name": "Land",
                          "nameLocations": [
                            "7139:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "7139:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "7139:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11876,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11870,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "7159:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11875,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11873,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11862,
                          "src": "7173:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7165:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7165:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7165:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7159:27:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7139:47:30"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 11877,
                      "name": "land",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11869,
                      "src": "7200:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                      }
                    },
                    "id": 11878,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7205:6:30",
                    "memberName": "active",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11115,
                    "src": "7200:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11866,
                  "id": 11879,
                  "nodeType": "Return",
                  "src": "7193:18:30"
                }
              ]
            },
            "functionSelector": "d13acee1",
            "id": 11881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIERC20TokenSocial",
            "nameLocation": "7064:19:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11862,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "7091:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11881,
                  "src": "7084:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11861,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11860,
                      "name": "IERC20",
                      "nameLocations": [
                        "7084:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "7084:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "7084:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7083:20:30"
            },
            "returnParameters": {
              "id": 11866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11881,
                  "src": "7127:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7127:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7126:6:30"
            },
            "scope": 11908,
            "src": "7055:161:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11906,
              "nodeType": "Block",
              "src": "7304:89:30",
              "statements": [
                {
                  "assignments": [
                    11893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11893,
                      "mutability": "mutable",
                      "name": "land",
                      "nameLocation": "7323:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 11906,
                      "src": "7310:17:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                        "typeString": "struct PredictionMarketV3Manager.Land"
                      },
                      "typeName": {
                        "id": 11892,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11891,
                          "name": "Land",
                          "nameLocations": [
                            "7310:4:30"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11127,
                          "src": "7310:4:30"
                        },
                        "referencedDeclaration": 11127,
                        "src": "7310:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11900,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11894,
                      "name": "lands",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "7330:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Land_$11127_storage_$",
                        "typeString": "mapping(address => struct PredictionMarketV3Manager.Land storage ref)"
                      }
                    },
                    "id": 11899,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11897,
                          "name": "marketToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11884,
                          "src": "7344:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1478",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 11896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7336:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11895,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7336:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7336:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7330:27:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Land_$11127_storage",
                      "typeString": "struct PredictionMarketV3Manager.Land storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7310:47:30"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 11901,
                        "name": "land",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11893,
                        "src": "7371:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Land_$11127_storage_ptr",
                          "typeString": "struct PredictionMarketV3Manager.Land storage pointer"
                        }
                      },
                      "id": 11902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7376:6:30",
                      "memberName": "admins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11119,
                      "src": "7371:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 11904,
                    "indexExpression": {
                      "id": 11903,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11886,
                      "src": "7383:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7371:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11890,
                  "id": 11905,
                  "nodeType": "Return",
                  "src": "7364:24:30"
                }
              ]
            },
            "functionSelector": "791e0519",
            "id": 11907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLandAdmin",
            "nameLocation": "7229:11:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11884,
                  "mutability": "mutable",
                  "name": "marketToken",
                  "nameLocation": "7248:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "7241:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1478",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11882,
                      "name": "IERC20",
                      "nameLocations": [
                        "7241:6:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1478,
                      "src": "7241:6:30"
                    },
                    "referencedDeclaration": 1478,
                    "src": "7241:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1478",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11886,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7269:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "7261:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7261:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7240:34:30"
            },
            "returnParameters": {
              "id": 11890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "7298:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11888,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7298:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7297:6:30"
            },
            "scope": 11908,
            "src": "7220:173:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11909,
        "src": "286:7109:30",
        "usedErrors": []
      }
    ],
    "src": "32:7364:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "344": {
      "events": {
        "0x928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenToAnswer",
              "type": "address"
            }
          ],
          "name": "LandCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xb8429069f85942f3e5ebf215afa8d573e550665bb50ea78f80e07500c4890a68": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "name": "LandAdminAdded",
          "type": "event"
        },
        "0x5cb946ecb390cbf9c44ad43a7ed4ba5a5803844da9153e195a72350924367560": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "name": "LandAdminRemoved",
          "type": "event"
        },
        "0xba6e51248e93514eb089243e4d08f26db16ff133606694000e7124a41ee5deb4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenToAnswer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountLocked",
              "type": "uint256"
            }
          ],
          "name": "LandCreated",
          "type": "event"
        },
        "0x76f76e951d717cb73ae423c4e4a029c5dde6ef38673c8f6a20cb9eb5025de595": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountUnlocked",
              "type": "uint256"
            }
          ],
          "name": "LandDisabled",
          "type": "event"
        },
        "0x9daf897774d766e38773bbeaf2f32d93fed4091373b77ebb7f5aee37417d1ab1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountLocked",
              "type": "uint256"
            }
          ],
          "name": "LandEnabled",
          "type": "event"
        },
        "0x762d0a2a8e474a7f467752b8c7d24a08142b5a877a95ceb46dfbbda482ec46d7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountUnlocked",
              "type": "uint256"
            }
          ],
          "name": "LandOffsetUnlocked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xcA9E2910358F3d7BbBf14238Bdf4d7bb2c5aa729",
      "transactionHash": "0x219b71418b1b93cce9e368fe54def232ee1def10a8f3a39ec35308058faf3d31"
    },
    "80001": {
      "events": {
        "0x928ae96c7a1d6a73f58dbf368490cb214debe41ff700f156ca8eaa1b1a307e03": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenToAnswer",
              "type": "address"
            }
          ],
          "name": "LandCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xAce8CEecC26df9618F11b99eDB5cebdb96773a6D",
      "transactionHash": "0x43fcbeeda6106eb55a1fd83f9b0efb4202ef9d30af97092bb873b42483362b99"
    }
  },
  "schemaVersion": "3.4.14",
  "updatedAt": "2024-05-31T16:34:23.159Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}